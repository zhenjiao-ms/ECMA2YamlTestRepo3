### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ReflectionPermissionAttribute
  id: ReflectionPermissionAttribute
  children:
  - System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission
  - System.Security.Permissions.ReflectionPermissionAttribute.Flags
  - System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess
  - System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit
  - System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess
  - System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation
  langs:
  - csharp
  name: ReflectionPermissionAttribute
  nameWithType: ReflectionPermissionAttribute
  fullName: System.Security.Permissions.ReflectionPermissionAttribute
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ReflectionPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  langs:
  - csharp
  name: ReflectionPermissionAttribute(SecurityAction)
  nameWithType: ReflectionPermissionAttribute.ReflectionPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ReflectionPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: ReflectionPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.ReflectionPermissionAttribute.Flags
  id: Flags
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  langs:
  - csharp
  name: Flags
  nameWithType: ReflectionPermissionAttribute.Flags
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Security.Permissions.ReflectionPermissionFlag Flags { get; set; }
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess
  id: MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  langs:
  - csharp
  name: MemberAccess
  nameWithType: ReflectionPermissionAttribute.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool MemberAccess { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit
  id: ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  langs:
  - csharp
  name: ReflectionEmit
  nameWithType: ReflectionPermissionAttribute.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool ReflectionEmit { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess
  id: RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  langs:
  - csharp
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionAttribute.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool RestrictedMemberAccess { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation
  id: TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  langs:
  - csharp
  name: TypeInformation
  nameWithType: ReflectionPermissionAttribute.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool TypeInformation { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  isExternal: false
  name: ReflectionPermissionAttribute(SecurityAction)
  nameWithType: ReflectionPermissionAttribute.ReflectionPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: ReflectionPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.ReflectionPermissionAttribute.Flags
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: ReflectionPermissionAttribute.Flags
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.Flags
- uid: System.Security.Permissions.ReflectionPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
- uid: System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  isExternal: false
  name: MemberAccess
  nameWithType: ReflectionPermissionAttribute.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  isExternal: false
  name: ReflectionEmit
  nameWithType: ReflectionPermissionAttribute.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  isExternal: false
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionAttribute.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionAttribute
  isExternal: false
  name: TypeInformation
  nameWithType: ReflectionPermissionAttribute.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
