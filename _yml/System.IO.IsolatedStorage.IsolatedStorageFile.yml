### YamlMime:ManagedReference
items:
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  id: IsolatedStorageFile
  children:
  - System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace
  - System.IO.IsolatedStorage.IsolatedStorageFile.Close
  - System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize
  - System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  - System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.Finalize
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator(System.IO.IsolatedStorage.IsolatedStorageScope)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetPermission(System.Security.PermissionSet)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object,System.Object)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Security.Policy.Evidence,System.Type,System.Security.Policy.Evidence,System.Type)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForSite
  - System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo(System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorageFile.IsEnabled
  - System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize
  - System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.IsolatedStorage.IsolatedStorageFile.Quota
  - System.IO.IsolatedStorage.IsolatedStorageFile.Remove
  - System.IO.IsolatedStorage.IsolatedStorageFile.Remove(System.IO.IsolatedStorage.IsolatedStorageScope)
  - System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize
  langs:
  - csharp
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class IsolatedStorageFile : System.IO.IsolatedStorage.IsolatedStorage, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.IsolatedStorage.IsolatedStorage
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.IsolatedStorage.IsolatedStorage.ApplicationIdentity
  - System.IO.IsolatedStorage.IsolatedStorage.AssemblyIdentity
  - System.IO.IsolatedStorage.IsolatedStorage.DomainIdentity
  - System.IO.IsolatedStorage.IsolatedStorage.InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  - System.IO.IsolatedStorage.IsolatedStorage.InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  - System.IO.IsolatedStorage.IsolatedStorage.Scope
  - System.IO.IsolatedStorage.IsolatedStorage.SeparatorExternal
  - System.IO.IsolatedStorage.IsolatedStorage.SeparatorInternal
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace
  id: AvailableFreeSpace
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: AvailableFreeSpace
  nameWithType: IsolatedStorageFile.AvailableFreeSpace
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override long AvailableFreeSpace { get; }
    return:
      type: System.Int64
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Close
  id: Close
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: Close()
  nameWithType: IsolatedStorageFile.Close()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.Close*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: IsolatedStorageFile.CopyFile(String,String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: To be added.
    - id: destinationFileName
      type: System.String
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: IsolatedStorageFile.CopyFile(String,String,Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: To be added.
    - id: destinationFileName
      type: System.String
      description: To be added.
    - id: overwrite
      type: System.Boolean
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: IsolatedStorageFile.CreateDirectory(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void CreateDirectory (string dir);
    parameters:
    - id: dir
      type: System.String
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  id: CreateFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: CreateFile(String)
  nameWithType: IsolatedStorageFile.CreateFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.IsolatedStorage.IsolatedStorageFileStream CreateFile (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize
  id: CurrentSize
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: CurrentSize
  nameWithType: IsolatedStorageFile.CurrentSize
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override ulong CurrentSize { get; }
    return:
      type: System.UInt64
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  id: DeleteDirectory(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: DeleteDirectory(String)
  nameWithType: IsolatedStorageFile.DeleteDirectory(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DeleteDirectory (string dir);
    parameters:
    - id: dir
      type: System.String
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: IsolatedStorageFile.DeleteFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: IsolatedStorageFile.DirectoryExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool DirectoryExists (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  id: Dispose
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: Dispose()
  nameWithType: IsolatedStorageFile.Dispose()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  id: FileExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: IsolatedStorageFile.FileExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool FileExists (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Finalize
  id: Finalize
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: Finalize()
  nameWithType: IsolatedStorageFile.Finalize()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: ~IsolatedStorageFile ();
    parameters: []
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.Finalize*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetCreationTime(String)
  nameWithType: IsolatedStorageFile.GetCreationTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public DateTimeOffset GetCreationTime (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.DateTimeOffset
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  id: GetDirectoryNames
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetDirectoryNames()
  nameWithType: IsolatedStorageFile.GetDirectoryNames()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string[] GetDirectoryNames ();
    parameters: []
    return:
      type: System.String[]
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  id: GetDirectoryNames(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetDirectoryNames(String)
  nameWithType: IsolatedStorageFile.GetDirectoryNames(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string[] GetDirectoryNames (string searchPattern);
    parameters:
    - id: searchPattern
      type: System.String
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator(System.IO.IsolatedStorage.IsolatedStorageScope)
  id: GetEnumerator(System.IO.IsolatedStorage.IsolatedStorageScope)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetEnumerator(IsolatedStorageScope)
  nameWithType: IsolatedStorageFile.GetEnumerator(IsolatedStorageScope)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator(IsolatedStorageScope)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Collections.IEnumerator GetEnumerator (System.IO.IsolatedStorage.IsolatedStorageScope scope);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: To be added.
    return:
      type: System.Collections.IEnumerator
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  id: GetFileNames
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetFileNames()
  nameWithType: IsolatedStorageFile.GetFileNames()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string[] GetFileNames ();
    parameters: []
    return:
      type: System.String[]
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  id: GetFileNames(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetFileNames(String)
  nameWithType: IsolatedStorageFile.GetFileNames(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string[] GetFileNames (string searchPattern);
    parameters:
    - id: searchPattern
      type: System.String
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetLastAccessTime(String)
  nameWithType: IsolatedStorageFile.GetLastAccessTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public DateTimeOffset GetLastAccessTime (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.DateTimeOffset
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetLastWriteTime(String)
  nameWithType: IsolatedStorageFile.GetLastWriteTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public DateTimeOffset GetLastWriteTime (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.DateTimeOffset
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication
  id: GetMachineStoreForApplication
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetMachineStoreForApplication()
  nameWithType: IsolatedStorageFile.GetMachineStoreForApplication()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForApplication ();
    parameters: []
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly
  id: GetMachineStoreForAssembly
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetMachineStoreForAssembly()
  nameWithType: IsolatedStorageFile.GetMachineStoreForAssembly()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForAssembly ();
    parameters: []
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain
  id: GetMachineStoreForDomain
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetMachineStoreForDomain()
  nameWithType: IsolatedStorageFile.GetMachineStoreForDomain()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForDomain ();
    parameters: []
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetPermission(System.Security.PermissionSet)
  id: GetPermission(System.Security.PermissionSet)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetPermission(PermissionSet)
  nameWithType: IsolatedStorageFile.GetPermission(PermissionSet)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetPermission(PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Security.Permissions.IsolatedStoragePermission GetPermission (System.Security.PermissionSet ps);
    parameters:
    - id: ps
      type: System.Security.PermissionSet
      description: To be added.
    return:
      type: System.Security.Permissions.IsolatedStoragePermission
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetPermission*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object)
  id: GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetStore(IsolatedStorageScope,Object)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, object applicationIdentity);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: To be added.
    - id: applicationIdentity
      type: System.Object
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  id: GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetStore(IsolatedStorageScope,Type)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, Type applicationEvidenceType);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: To be added.
    - id: applicationEvidenceType
      type: System.Type
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object,System.Object)
  id: GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetStore(IsolatedStorageScope,Object,Object)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Object,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, object domainIdentity, object assemblyIdentity);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: To be added.
    - id: domainIdentity
      type: System.Object
      description: To be added.
    - id: assemblyIdentity
      type: System.Object
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  id: GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetStore(IsolatedStorageScope,Type,Type)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Type,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Type,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, Type domainEvidenceType, Type assemblyEvidenceType);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: To be added.
    - id: domainEvidenceType
      type: System.Type
      description: To be added.
    - id: assemblyEvidenceType
      type: System.Type
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Security.Policy.Evidence,System.Type,System.Security.Policy.Evidence,System.Type)
  id: GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Security.Policy.Evidence,System.Type,System.Security.Policy.Evidence,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetStore(IsolatedStorageScope,Evidence,Type,Evidence,Type)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Evidence,Type,Evidence,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Evidence,Type,Evidence,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, System.Security.Policy.Evidence domainEvidence, Type domainEvidenceType, System.Security.Policy.Evidence assemblyEvidence, Type assemblyEvidenceType);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: To be added.
    - id: domainEvidence
      type: System.Security.Policy.Evidence
      description: To be added.
    - id: domainEvidenceType
      type: System.Type
      description: To be added.
    - id: assemblyEvidence
      type: System.Security.Policy.Evidence
      description: To be added.
    - id: assemblyEvidenceType
      type: System.Type
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  id: GetUserStoreForApplication
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetUserStoreForApplication()
  nameWithType: IsolatedStorageFile.GetUserStoreForApplication()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForApplication ();
    parameters: []
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly
  id: GetUserStoreForAssembly
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetUserStoreForAssembly()
  nameWithType: IsolatedStorageFile.GetUserStoreForAssembly()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForAssembly ();
    parameters: []
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain
  id: GetUserStoreForDomain
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetUserStoreForDomain()
  nameWithType: IsolatedStorageFile.GetUserStoreForDomain()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForDomain ();
    parameters: []
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForSite
  id: GetUserStoreForSite
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: GetUserStoreForSite()
  nameWithType: IsolatedStorageFile.GetUserStoreForSite()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForSite()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForSite ();
    parameters: []
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForSite*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo(System.Int64)
  id: IncreaseQuotaTo(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: IncreaseQuotaTo(Int64)
  nameWithType: IsolatedStorageFile.IncreaseQuotaTo(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IncreaseQuotaTo (long newQuotaSize);
    parameters:
    - id: newQuotaSize
      type: System.Int64
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.IsEnabled
  id: IsEnabled
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: IsEnabled
  nameWithType: IsolatedStorageFile.IsEnabled
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.IsEnabled
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.IsEnabled*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize
  id: MaximumSize
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: MaximumSize
  nameWithType: IsolatedStorageFile.MaximumSize
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override ulong MaximumSize { get; }
    return:
      type: System.UInt64
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: IsolatedStorageFile.MoveDirectory(String,String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: To be added.
    - id: destinationDirectoryName
      type: System.String
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: IsolatedStorageFile.MoveFile(String,String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: To be added.
    - id: destinationFileName
      type: System.String
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  id: OpenFile(System.String,System.IO.FileMode)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: OpenFile(String,FileMode)
  nameWithType: IsolatedStorageFile.OpenFile(String,FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(String,FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    - id: mode
      type: System.IO.FileMode
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: OpenFile(String,FileMode,FileAccess)
  nameWithType: IsolatedStorageFile.OpenFile(String,FileMode,FileAccess)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    - id: mode
      type: System.IO.FileMode
      description: To be added.
    - id: access
      type: System.IO.FileAccess
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: OpenFile(String,FileMode,FileAccess,FileShare)
  nameWithType: IsolatedStorageFile.OpenFile(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    - id: mode
      type: System.IO.FileMode
      description: To be added.
    - id: access
      type: System.IO.FileAccess
      description: To be added.
    - id: share
      type: System.IO.FileShare
      description: To be added.
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Quota
  id: Quota
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: Quota
  nameWithType: IsolatedStorageFile.Quota
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Quota
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override long Quota { get; }
    return:
      type: System.Int64
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.Quota*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Remove
  id: Remove
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: Remove()
  nameWithType: IsolatedStorageFile.Remove()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Remove()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void Remove ();
    parameters: []
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.Remove*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Remove(System.IO.IsolatedStorage.IsolatedStorageScope)
  id: Remove(System.IO.IsolatedStorage.IsolatedStorageScope)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: Remove(IsolatedStorageScope)
  nameWithType: IsolatedStorageFile.Remove(IsolatedStorageScope)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Remove(IsolatedStorageScope)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static void Remove (System.IO.IsolatedStorage.IsolatedStorageScope scope);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.Remove*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize
  id: UsedSize
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  name: UsedSize
  nameWithType: IsolatedStorageFile.UsedSize
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override long UsedSize { get; }
    return:
      type: System.Int64
      description: To be added.
  overload: System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: System.IO.IsolatedStorage.IsolatedStorage
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: IsolatedStorageFile.AvailableFreeSpace
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Close
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Close()
  nameWithType: IsolatedStorageFile.Close()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Close()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: IsolatedStorageFile.CopyFile(String,String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: IsolatedStorageFile.CopyFile(String,String,Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: IsolatedStorageFile.CreateDirectory(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CreateFile(String)
  nameWithType: IsolatedStorageFile.CreateFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CurrentSize
  nameWithType: IsolatedStorageFile.CurrentSize
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: DeleteDirectory(String)
  nameWithType: IsolatedStorageFile.DeleteDirectory(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: DeleteFile(String)
  nameWithType: IsolatedStorageFile.DeleteFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: IsolatedStorageFile.DirectoryExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Dispose()
  nameWithType: IsolatedStorageFile.Dispose()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: FileExists(String)
  nameWithType: IsolatedStorageFile.FileExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Finalize
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Finalize()
  nameWithType: IsolatedStorageFile.Finalize()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Finalize()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetCreationTime(String)
  nameWithType: IsolatedStorageFile.GetCreationTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(String)
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetDirectoryNames()
  nameWithType: IsolatedStorageFile.GetDirectoryNames()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetDirectoryNames(String)
  nameWithType: IsolatedStorageFile.GetDirectoryNames(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator(System.IO.IsolatedStorage.IsolatedStorageScope)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetEnumerator(IsolatedStorageScope)
  nameWithType: IsolatedStorageFile.GetEnumerator(IsolatedStorageScope)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator(IsolatedStorageScope)
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IO.IsolatedStorage.IsolatedStorageScope
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageScope
  nameWithType: IsolatedStorageScope
  fullName: System.IO.IsolatedStorage.IsolatedStorageScope
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetFileNames()
  nameWithType: IsolatedStorageFile.GetFileNames()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetFileNames(String)
  nameWithType: IsolatedStorageFile.GetFileNames(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetLastAccessTime(String)
  nameWithType: IsolatedStorageFile.GetLastAccessTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(String)
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetLastWriteTime(String)
  nameWithType: IsolatedStorageFile.GetLastWriteTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(String)
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetMachineStoreForApplication()
  nameWithType: IsolatedStorageFile.GetMachineStoreForApplication()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetMachineStoreForAssembly()
  nameWithType: IsolatedStorageFile.GetMachineStoreForAssembly()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetMachineStoreForDomain()
  nameWithType: IsolatedStorageFile.GetMachineStoreForDomain()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetPermission(System.Security.PermissionSet)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetPermission(PermissionSet)
  nameWithType: IsolatedStorageFile.GetPermission(PermissionSet)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetPermission(PermissionSet)
- uid: System.Security.Permissions.IsolatedStoragePermission
  parent: System.Security.Permissions
  isExternal: false
  name: IsolatedStoragePermission
  nameWithType: IsolatedStoragePermission
  fullName: System.Security.Permissions.IsolatedStoragePermission
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetStore(IsolatedStorageScope,Object)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Object)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageScope
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageScope
  nameWithType: IsolatedStorageScope
  fullName: System.IO.IsolatedStorage.IsolatedStorageScope
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetStore(IsolatedStorageScope,Type)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Type)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageScope
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageScope
  nameWithType: IsolatedStorageScope
  fullName: System.IO.IsolatedStorage.IsolatedStorageScope
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetStore(IsolatedStorageScope,Object,Object)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Object,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Object,Object)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageScope
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageScope
  nameWithType: IsolatedStorageScope
  fullName: System.IO.IsolatedStorage.IsolatedStorageScope
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetStore(IsolatedStorageScope,Type,Type)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Type,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Type,Type)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageScope
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageScope
  nameWithType: IsolatedStorageScope
  fullName: System.IO.IsolatedStorage.IsolatedStorageScope
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Security.Policy.Evidence,System.Type,System.Security.Policy.Evidence,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetStore(IsolatedStorageScope,Evidence,Type,Evidence,Type)
  nameWithType: IsolatedStorageFile.GetStore(IsolatedStorageScope,Evidence,Type,Evidence,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(IsolatedStorageScope,Evidence,Type,Evidence,Type)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageScope
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageScope
  nameWithType: IsolatedStorageScope
  fullName: System.IO.IsolatedStorage.IsolatedStorageScope
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetUserStoreForApplication()
  nameWithType: IsolatedStorageFile.GetUserStoreForApplication()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetUserStoreForAssembly()
  nameWithType: IsolatedStorageFile.GetUserStoreForAssembly()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetUserStoreForDomain()
  nameWithType: IsolatedStorageFile.GetUserStoreForDomain()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForSite
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetUserStoreForSite()
  nameWithType: IsolatedStorageFile.GetUserStoreForSite()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForSite()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: IncreaseQuotaTo(Int64)
  nameWithType: IsolatedStorageFile.IncreaseQuotaTo(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo(Int64)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.IsEnabled
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: IsEnabled
  nameWithType: IsolatedStorageFile.IsEnabled
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.IsEnabled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: MaximumSize
  nameWithType: IsolatedStorageFile.MaximumSize
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: IsolatedStorageFile.MoveDirectory(String,String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: IsolatedStorageFile.MoveFile(String,String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: OpenFile(String,FileMode)
  nameWithType: IsolatedStorageFile.OpenFile(String,FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(String,FileMode)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: OpenFile(String,FileMode,FileAccess)
  nameWithType: IsolatedStorageFile.OpenFile(String,FileMode,FileAccess)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(String,FileMode,FileAccess)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: OpenFile(String,FileMode,FileAccess,FileShare)
  nameWithType: IsolatedStorageFile.OpenFile(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(String,FileMode,FileAccess,FileShare)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Quota
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Quota
  nameWithType: IsolatedStorageFile.Quota
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Quota
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Remove
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Remove()
  nameWithType: IsolatedStorageFile.Remove()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Remove()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Remove(System.IO.IsolatedStorage.IsolatedStorageScope)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Remove(IsolatedStorageScope)
  nameWithType: IsolatedStorageFile.Remove(IsolatedStorageScope)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Remove(IsolatedStorageScope)
- uid: System.IO.IsolatedStorage.IsolatedStorageScope
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageScope
  nameWithType: IsolatedStorageScope
  fullName: System.IO.IsolatedStorage.IsolatedStorageScope
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: UsedSize
  nameWithType: IsolatedStorageFile.UsedSize
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: IsolatedStorageFile.AvailableFreeSpace
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Close*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Close
  nameWithType: IsolatedStorageFile.Close
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CopyFile
  nameWithType: IsolatedStorageFile.CopyFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CreateDirectory
  nameWithType: IsolatedStorageFile.CreateDirectory
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CreateFile
  nameWithType: IsolatedStorageFile.CreateFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: CurrentSize
  nameWithType: IsolatedStorageFile.CurrentSize
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: DeleteDirectory
  nameWithType: IsolatedStorageFile.DeleteDirectory
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: DeleteFile
  nameWithType: IsolatedStorageFile.DeleteFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: DirectoryExists
  nameWithType: IsolatedStorageFile.DirectoryExists
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Dispose
  nameWithType: IsolatedStorageFile.Dispose
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: FileExists
  nameWithType: IsolatedStorageFile.FileExists
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Finalize*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Finalize
  nameWithType: IsolatedStorageFile.Finalize
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetCreationTime
  nameWithType: IsolatedStorageFile.GetCreationTime
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetDirectoryNames
  nameWithType: IsolatedStorageFile.GetDirectoryNames
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetEnumerator
  nameWithType: IsolatedStorageFile.GetEnumerator
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetFileNames
  nameWithType: IsolatedStorageFile.GetFileNames
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetLastAccessTime
  nameWithType: IsolatedStorageFile.GetLastAccessTime
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetLastWriteTime
  nameWithType: IsolatedStorageFile.GetLastWriteTime
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetMachineStoreForApplication
  nameWithType: IsolatedStorageFile.GetMachineStoreForApplication
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetMachineStoreForAssembly
  nameWithType: IsolatedStorageFile.GetMachineStoreForAssembly
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetMachineStoreForDomain
  nameWithType: IsolatedStorageFile.GetMachineStoreForDomain
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetPermission*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetPermission
  nameWithType: IsolatedStorageFile.GetPermission
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetStore*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetStore
  nameWithType: IsolatedStorageFile.GetStore
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetUserStoreForApplication
  nameWithType: IsolatedStorageFile.GetUserStoreForApplication
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetUserStoreForAssembly
  nameWithType: IsolatedStorageFile.GetUserStoreForAssembly
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetUserStoreForDomain
  nameWithType: IsolatedStorageFile.GetUserStoreForDomain
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForSite*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: GetUserStoreForSite
  nameWithType: IsolatedStorageFile.GetUserStoreForSite
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: IncreaseQuotaTo
  nameWithType: IsolatedStorageFile.IncreaseQuotaTo
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.IsEnabled*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: IsEnabled
  nameWithType: IsolatedStorageFile.IsEnabled
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: MaximumSize
  nameWithType: IsolatedStorageFile.MaximumSize
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: MoveDirectory
  nameWithType: IsolatedStorageFile.MoveDirectory
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: MoveFile
  nameWithType: IsolatedStorageFile.MoveFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: OpenFile
  nameWithType: IsolatedStorageFile.OpenFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Quota*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Quota
  nameWithType: IsolatedStorageFile.Quota
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Remove*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: Remove
  nameWithType: IsolatedStorageFile.Remove
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize*
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  isExternal: false
  name: UsedSize
  nameWithType: IsolatedStorageFile.UsedSize
