### YamlMime:ManagedReference
items:
- uid: System.Threading.CancellationToken
  id: CancellationToken
  children:
  - System.Threading.CancellationToken.#ctor(System.Boolean)
  - System.Threading.CancellationToken.CanBeCanceled
  - System.Threading.CancellationToken.Equals(System.Object)
  - System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  - System.Threading.CancellationToken.GetHashCode
  - System.Threading.CancellationToken.IsCancellationRequested
  - System.Threading.CancellationToken.None
  - System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  - System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  - System.Threading.CancellationToken.Register(System.Action)
  - System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  - System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  - System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  - System.Threading.CancellationToken.ThrowIfCancellationRequested
  - System.Threading.CancellationToken.WaitHandle
  langs:
  - csharp
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
  type: Struct
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("IsCancellationRequested = {IsCancellationRequested}")]

      [System.Runtime.InteropServices.ComVisible(false)]

      public struct CancellationToken
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: CancellationToken(Boolean)
  nameWithType: CancellationToken.CancellationToken(Boolean)
  fullName: System.Threading.CancellationToken.CancellationToken(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public CancellationToken (bool canceled);
    parameters:
    - id: canceled
      type: System.Boolean
      description: To be added.
  overload: System.Threading.CancellationToken.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.CanBeCanceled
  id: CanBeCanceled
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: CanBeCanceled
  nameWithType: CancellationToken.CanBeCanceled
  fullName: System.Threading.CancellationToken.CanBeCanceled
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool CanBeCanceled { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.CancellationToken.CanBeCanceled*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CancellationToken.Equals(Object)
  fullName: System.Threading.CancellationToken.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.CancellationToken.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  id: Equals(System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Equals(CancellationToken)
  nameWithType: CancellationToken.Equals(CancellationToken)
  fullName: System.Threading.CancellationToken.Equals(CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Equals (System.Threading.CancellationToken other);
    parameters:
    - id: other
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.CancellationToken.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.GetHashCode
  id: GetHashCode
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CancellationToken.GetHashCode()
  fullName: System.Threading.CancellationToken.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.CancellationToken.GetHashCode*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.IsCancellationRequested
  id: IsCancellationRequested
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: IsCancellationRequested
  nameWithType: CancellationToken.IsCancellationRequested
  fullName: System.Threading.CancellationToken.IsCancellationRequested
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsCancellationRequested { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.CancellationToken.IsCancellationRequested*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.None
  id: None
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: None
  nameWithType: CancellationToken.None
  fullName: System.Threading.CancellationToken.None
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Threading.CancellationToken None { get; }
    return:
      type: System.Threading.CancellationToken
      description: To be added.
  overload: System.Threading.CancellationToken.None*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  id: op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: op_Equality(CancellationToken,CancellationToken)
  nameWithType: CancellationToken.op_Equality(CancellationToken,CancellationToken)
  fullName: System.Threading.CancellationToken.op_Equality(CancellationToken,CancellationToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Threading.CancellationToken left, System.Threading.CancellationToken right);
    parameters:
    - id: left
      type: System.Threading.CancellationToken
      description: To be added.
    - id: right
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.CancellationToken.op_Equality*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  id: op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: op_Inequality(CancellationToken,CancellationToken)
  nameWithType: CancellationToken.op_Inequality(CancellationToken,CancellationToken)
  fullName: System.Threading.CancellationToken.op_Inequality(CancellationToken,CancellationToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Threading.CancellationToken left, System.Threading.CancellationToken right);
    parameters:
    - id: left
      type: System.Threading.CancellationToken
      description: To be added.
    - id: right
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.CancellationToken.op_Inequality*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.Register(System.Action)
  id: Register(System.Action)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Register(Action)
  nameWithType: CancellationToken.Register(Action)
  fullName: System.Threading.CancellationToken.Register(Action)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.CancellationTokenRegistration Register (Action callback);
    parameters:
    - id: callback
      type: System.Action
      description: To be added.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: To be added.
  overload: System.Threading.CancellationToken.Register*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  id: Register(System.Action,System.Boolean)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Register(Action,Boolean)
  nameWithType: CancellationToken.Register(Action,Boolean)
  fullName: System.Threading.CancellationToken.Register(Action,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.CancellationTokenRegistration Register (Action callback, bool useSynchronizationContext);
    parameters:
    - id: callback
      type: System.Action
      description: To be added.
    - id: useSynchronizationContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: To be added.
  overload: System.Threading.CancellationToken.Register*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  id: Register(System.Action{System.Object},System.Object)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Register(Action<Object>,Object)
  nameWithType: CancellationToken.Register(Action<Object>,Object)
  fullName: System.Threading.CancellationToken.Register(Action<Object>,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.CancellationTokenRegistration Register (Action<object> callback, object state);
    parameters:
    - id: callback
      type: System.Action{System.Object}
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: To be added.
  overload: System.Threading.CancellationToken.Register*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  id: Register(System.Action{System.Object},System.Object,System.Boolean)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Register(Action<Object>,Object,Boolean)
  nameWithType: CancellationToken.Register(Action<Object>,Object,Boolean)
  fullName: System.Threading.CancellationToken.Register(Action<Object>,Object,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.CancellationTokenRegistration Register (Action<object> callback, object state, bool useSynchronizationContext);
    parameters:
    - id: callback
      type: System.Action{System.Object}
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    - id: useSynchronizationContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: To be added.
  overload: System.Threading.CancellationToken.Register*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.ThrowIfCancellationRequested
  id: ThrowIfCancellationRequested
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: ThrowIfCancellationRequested()
  nameWithType: CancellationToken.ThrowIfCancellationRequested()
  fullName: System.Threading.CancellationToken.ThrowIfCancellationRequested()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void ThrowIfCancellationRequested ();
    parameters: []
  overload: System.Threading.CancellationToken.ThrowIfCancellationRequested*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.CancellationToken.WaitHandle
  id: WaitHandle
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: WaitHandle
  nameWithType: CancellationToken.WaitHandle
  fullName: System.Threading.CancellationToken.WaitHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.WaitHandle WaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: To be added.
  overload: System.Threading.CancellationToken.WaitHandle*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Threading.CancellationToken.#ctor(System.Boolean)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: CancellationToken(Boolean)
  nameWithType: CancellationToken.CancellationToken(Boolean)
  fullName: System.Threading.CancellationToken.CancellationToken(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken.CanBeCanceled
  parent: System.Threading.CancellationToken
  isExternal: false
  name: CanBeCanceled
  nameWithType: CancellationToken.CanBeCanceled
  fullName: System.Threading.CancellationToken.CanBeCanceled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken.Equals(System.Object)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Equals(Object)
  nameWithType: CancellationToken.Equals(Object)
  fullName: System.Threading.CancellationToken.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Equals(CancellationToken)
  nameWithType: CancellationToken.Equals(CancellationToken)
  fullName: System.Threading.CancellationToken.Equals(CancellationToken)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationToken.GetHashCode
  parent: System.Threading.CancellationToken
  isExternal: false
  name: GetHashCode()
  nameWithType: CancellationToken.GetHashCode()
  fullName: System.Threading.CancellationToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken.IsCancellationRequested
  parent: System.Threading.CancellationToken
  isExternal: false
  name: IsCancellationRequested
  nameWithType: CancellationToken.IsCancellationRequested
  fullName: System.Threading.CancellationToken.IsCancellationRequested
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken.None
  parent: System.Threading.CancellationToken
  isExternal: false
  name: None
  nameWithType: CancellationToken.None
  fullName: System.Threading.CancellationToken.None
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: op_Equality(CancellationToken,CancellationToken)
  nameWithType: CancellationToken.op_Equality(CancellationToken,CancellationToken)
  fullName: System.Threading.CancellationToken.op_Equality(CancellationToken,CancellationToken)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: op_Inequality(CancellationToken,CancellationToken)
  nameWithType: CancellationToken.op_Inequality(CancellationToken,CancellationToken)
  fullName: System.Threading.CancellationToken.op_Inequality(CancellationToken,CancellationToken)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationToken.Register(System.Action)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register(Action)
  nameWithType: CancellationToken.Register(Action)
  fullName: System.Threading.CancellationToken.Register(Action)
- uid: System.Threading.CancellationTokenRegistration
  parent: System.Threading
  isExternal: false
  name: CancellationTokenRegistration
  nameWithType: CancellationTokenRegistration
  fullName: System.Threading.CancellationTokenRegistration
- uid: System.Action
  parent: System
  isExternal: false
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register(Action,Boolean)
  nameWithType: CancellationToken.Register(Action,Boolean)
  fullName: System.Threading.CancellationToken.Register(Action,Boolean)
- uid: System.Threading.CancellationTokenRegistration
  parent: System.Threading
  isExternal: false
  name: CancellationTokenRegistration
  nameWithType: CancellationTokenRegistration
  fullName: System.Threading.CancellationTokenRegistration
- uid: System.Action
  parent: System
  isExternal: false
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register(Action<Object>,Object)
  nameWithType: CancellationToken.Register(Action<Object>,Object)
  fullName: System.Threading.CancellationToken.Register(Action<Object>,Object)
- uid: System.Threading.CancellationTokenRegistration
  parent: System.Threading
  isExternal: false
  name: CancellationTokenRegistration
  nameWithType: CancellationTokenRegistration
  fullName: System.Threading.CancellationTokenRegistration
- uid: System.Action{System.Object}
  parent: System
  isExternal: false
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<System.Object>
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register(Action<Object>,Object,Boolean)
  nameWithType: CancellationToken.Register(Action<Object>,Object,Boolean)
  fullName: System.Threading.CancellationToken.Register(Action<Object>,Object,Boolean)
- uid: System.Threading.CancellationTokenRegistration
  parent: System.Threading
  isExternal: false
  name: CancellationTokenRegistration
  nameWithType: CancellationTokenRegistration
  fullName: System.Threading.CancellationTokenRegistration
- uid: System.Action{System.Object}
  parent: System
  isExternal: false
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<System.Object>
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken.ThrowIfCancellationRequested
  parent: System.Threading.CancellationToken
  isExternal: false
  name: ThrowIfCancellationRequested()
  nameWithType: CancellationToken.ThrowIfCancellationRequested()
  fullName: System.Threading.CancellationToken.ThrowIfCancellationRequested()
- uid: System.Threading.CancellationToken.WaitHandle
  parent: System.Threading.CancellationToken
  isExternal: false
  name: WaitHandle
  nameWithType: CancellationToken.WaitHandle
  fullName: System.Threading.CancellationToken.WaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.Threading.CancellationToken.#ctor*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken.CancellationToken
- uid: System.Threading.CancellationToken.CanBeCanceled*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: CanBeCanceled
  nameWithType: CancellationToken.CanBeCanceled
- uid: System.Threading.CancellationToken.Equals*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Equals
  nameWithType: CancellationToken.Equals
- uid: System.Threading.CancellationToken.GetHashCode*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: GetHashCode
  nameWithType: CancellationToken.GetHashCode
- uid: System.Threading.CancellationToken.IsCancellationRequested*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: IsCancellationRequested
  nameWithType: CancellationToken.IsCancellationRequested
- uid: System.Threading.CancellationToken.None*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: None
  nameWithType: CancellationToken.None
- uid: System.Threading.CancellationToken.op_Equality*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: op_Equality
  nameWithType: CancellationToken.op_Equality
- uid: System.Threading.CancellationToken.op_Inequality*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: op_Inequality
  nameWithType: CancellationToken.op_Inequality
- uid: System.Threading.CancellationToken.Register*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register
  nameWithType: CancellationToken.Register
- uid: System.Threading.CancellationToken.ThrowIfCancellationRequested*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: ThrowIfCancellationRequested
  nameWithType: CancellationToken.ThrowIfCancellationRequested
- uid: System.Threading.CancellationToken.WaitHandle*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: WaitHandle
  nameWithType: CancellationToken.WaitHandle
