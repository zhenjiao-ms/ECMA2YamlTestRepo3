### YamlMime:ManagedReference
items:
- uid: System.Collections.ObjectModel.KeyedCollection`2
  id: KeyedCollection`2
  children:
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  - System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  - System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  - System.Collections.ObjectModel.KeyedCollection`2.Comparer
  - System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  - System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  - System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  - System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  langs:
  - csharp
  name: KeyedCollection<TKey,TItem>
  nameWithType: KeyedCollection<TKey,TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))]

      [System.Runtime.InteropServices.ComVisible(false)]

      public abstract class KeyedCollection<TKey,TItem> : System.Collections.ObjectModel.Collection<TItem>
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TItem
      description: To be added.
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection`1
  implements: []
  inheritedMembers:
  - System.Collections.ObjectModel.Collection`1.Add(`0)
  - System.Collections.ObjectModel.Collection`1.Clear
  - System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  - System.Collections.ObjectModel.Collection`1.Count
  - System.Collections.ObjectModel.Collection`1.GetEnumerator
  - System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  - System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  - System.Collections.ObjectModel.Collection`1.Items
  - System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor
  id: '#ctor'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: KeyedCollection()
  nameWithType: KeyedCollection<TKey,TItem>.KeyedCollection()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.KeyedCollection()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected KeyedCollection ();
    parameters: []
  overload: System.Collections.ObjectModel.KeyedCollection`2.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: KeyedCollection(IEqualityComparer<TKey>)
  nameWithType: KeyedCollection<TKey,TItem>.KeyedCollection(IEqualityComparer<TKey>)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.KeyedCollection(IEqualityComparer<TKey>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected KeyedCollection (System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)'
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: KeyedCollection(IEqualityComparer<TKey>,Int32)
  nameWithType: KeyedCollection<TKey,TItem>.KeyedCollection(IEqualityComparer<TKey>,Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.KeyedCollection(IEqualityComparer<TKey>,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected KeyedCollection (System.Collections.Generic.IEqualityComparer<TKey> comparer, int dictionaryCreationThreshold);
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
    - id: dictionaryCreationThreshold
      type: System.Int32
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  id: ChangeItemKey(`1,`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: ChangeItemKey(TItem,TKey)
  nameWithType: KeyedCollection<TKey,TItem>.ChangeItemKey(TItem,TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.ChangeItemKey(TItem,TKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected void ChangeItemKey (TItem item, TKey newKey);
    parameters:
    - id: item
      type: TItem
      description: To be added.
    - id: newKey
      type: TKey
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  id: ClearItems
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: ClearItems()
  nameWithType: KeyedCollection<TKey,TItem>.ClearItems()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.ClearItems()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void ClearItems ();
    parameters: []
  overload: System.Collections.ObjectModel.KeyedCollection`2.ClearItems*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  id: Comparer
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: Comparer
  nameWithType: KeyedCollection<TKey,TItem>.Comparer
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Comparer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.Generic.IEqualityComparer<TKey> Comparer { get; }
    return:
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.Comparer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: Contains(TKey)
  nameWithType: KeyedCollection<TKey,TItem>.Contains(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Contains(TKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Contains (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.Contains*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  id: Dictionary
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: Dictionary
  nameWithType: KeyedCollection<TKey,TItem>.Dictionary
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Dictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected System.Collections.Generic.IDictionary<TKey,TItem> Dictionary { get; }
    return:
      type: System.Collections.Generic.IDictionary{TKey,TItem}
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.Dictionary*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  id: GetKeyForItem(`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: GetKeyForItem(TItem)
  nameWithType: KeyedCollection<TKey,TItem>.GetKeyForItem(TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.GetKeyForItem(TItem)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract TKey GetKeyForItem (TItem item);
    parameters:
    - id: item
      type: TItem
      description: To be added.
    return:
      type: TKey
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  id: InsertItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: InsertItem(Int32,TItem)
  nameWithType: KeyedCollection<TKey,TItem>.InsertItem(Int32,TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.InsertItem(Int32,TItem)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void InsertItem (int index, TItem item);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    - id: item
      type: TItem
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.InsertItem*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: Item(TKey)
  nameWithType: KeyedCollection<TKey,TItem>.Item(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Item(TKey)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TItem this[TKey key] { get; }
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: TItem
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.Item*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: Remove(TKey)
  nameWithType: KeyedCollection<TKey,TItem>.Remove(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Remove(TKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Remove (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.Remove*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: RemoveItem(Int32)
  nameWithType: KeyedCollection<TKey,TItem>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.RemoveItem(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void RemoveItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  id: SetItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  langs:
  - csharp
  name: SetItem(Int32,TItem)
  nameWithType: KeyedCollection<TKey,TItem>.SetItem(Int32,TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.SetItem(Int32,TItem)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void SetItem (int index, TItem item);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    - id: item
      type: TItem
      description: To be added.
  overload: System.Collections.ObjectModel.KeyedCollection`2.SetItem*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ObjectModel.Collection<TItem>
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: KeyedCollection()
  nameWithType: KeyedCollection<TKey,TItem>.KeyedCollection()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.KeyedCollection()
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: KeyedCollection(IEqualityComparer<TKey>)
  nameWithType: KeyedCollection<TKey,TItem>.KeyedCollection(IEqualityComparer<TKey>)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.KeyedCollection(IEqualityComparer<TKey>)
- uid: System.Collections.Generic.IEqualityComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: KeyedCollection(IEqualityComparer<TKey>,Int32)
  nameWithType: KeyedCollection<TKey,TItem>.KeyedCollection(IEqualityComparer<TKey>,Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.KeyedCollection(IEqualityComparer<TKey>,Int32)
- uid: System.Collections.Generic.IEqualityComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: ChangeItemKey(TItem,TKey)
  nameWithType: KeyedCollection<TKey,TItem>.ChangeItemKey(TItem,TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.ChangeItemKey(TItem,TKey)
- uid: TItem
  parent: ''
  isExternal: true
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: ClearItems()
  nameWithType: KeyedCollection<TKey,TItem>.ClearItems()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.ClearItems()
- uid: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Comparer
  nameWithType: KeyedCollection<TKey,TItem>.Comparer
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Comparer
- uid: System.Collections.Generic.IEqualityComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
- uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Contains(TKey)
  nameWithType: KeyedCollection<TKey,TItem>.Contains(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Contains(TKey)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Dictionary
  nameWithType: KeyedCollection<TKey,TItem>.Dictionary
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Dictionary
- uid: System.Collections.Generic.IDictionary{TKey,TItem}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<TKey,TItem>
  nameWithType: IDictionary<TKey,TItem>
  fullName: System.Collections.Generic.IDictionary<TKey,TItem>
- uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: GetKeyForItem(TItem)
  nameWithType: KeyedCollection<TKey,TItem>.GetKeyForItem(TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.GetKeyForItem(TItem)
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TItem
  parent: ''
  isExternal: true
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: InsertItem(Int32,TItem)
  nameWithType: KeyedCollection<TKey,TItem>.InsertItem(Int32,TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.InsertItem(Int32,TItem)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TItem
  parent: ''
  isExternal: true
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Item(TKey)
  nameWithType: KeyedCollection<TKey,TItem>.Item(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Item(TKey)
- uid: TItem
  parent: ''
  isExternal: true
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Remove(TKey)
  nameWithType: KeyedCollection<TKey,TItem>.Remove(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.Remove(TKey)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: RemoveItem(Int32)
  nameWithType: KeyedCollection<TKey,TItem>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.RemoveItem(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: SetItem(Int32,TItem)
  nameWithType: KeyedCollection<TKey,TItem>.SetItem(Int32,TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey,TItem>.SetItem(Int32,TItem)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TItem
  parent: ''
  isExternal: true
  name: TItem
  nameWithType: TItem
  fullName: TItem
- uid: System.Collections.ObjectModel.KeyedCollection`2.#ctor*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: KeyedCollection<TKey,TItem>
  nameWithType: KeyedCollection<TKey,TItem>.KeyedCollection<TKey,TItem>
- uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: ChangeItemKey
  nameWithType: KeyedCollection<TKey,TItem>.ChangeItemKey
- uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: ClearItems
  nameWithType: KeyedCollection<TKey,TItem>.ClearItems
- uid: System.Collections.ObjectModel.KeyedCollection`2.Comparer*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Comparer
  nameWithType: KeyedCollection<TKey,TItem>.Comparer
- uid: System.Collections.ObjectModel.KeyedCollection`2.Contains*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Contains
  nameWithType: KeyedCollection<TKey,TItem>.Contains
- uid: System.Collections.ObjectModel.KeyedCollection`2.Dictionary*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Dictionary
  nameWithType: KeyedCollection<TKey,TItem>.Dictionary
- uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: GetKeyForItem
  nameWithType: KeyedCollection<TKey,TItem>.GetKeyForItem
- uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: InsertItem
  nameWithType: KeyedCollection<TKey,TItem>.InsertItem
- uid: System.Collections.ObjectModel.KeyedCollection`2.Item*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Item
  nameWithType: KeyedCollection<TKey,TItem>.Item
- uid: System.Collections.ObjectModel.KeyedCollection`2.Remove*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: Remove
  nameWithType: KeyedCollection<TKey,TItem>.Remove
- uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: RemoveItem
  nameWithType: KeyedCollection<TKey,TItem>.RemoveItem
- uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem*
  parent: System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: SetItem
  nameWithType: KeyedCollection<TKey,TItem>.SetItem
