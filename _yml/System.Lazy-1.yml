### YamlMime:ManagedReference
items:
- uid: System.Lazy`1
  id: Lazy`1
  children:
  - System.Lazy`1.#ctor
  - System.Lazy`1.#ctor(System.Boolean)
  - System.Lazy`1.#ctor(System.Func{`0})
  - System.Lazy`1.#ctor(System.`0hreading.Lazy`0hreadSafetyMode)
  - System.Lazy`1.#ctor(System.Func{`0},System.Boolean)
  - System.Lazy`1.#ctor(System.Func{`0},System.`0hreading.Lazy`0hreadSafetyMode)
  - System.Lazy`1.IsValueCreated
  - System.Lazy`1.ToString
  - System.Lazy`1.Value
  langs:
  - csharp
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("ThreadSafetyMode={Mode}, IsValueCreated={IsValueCreated}, IsValueFaulted={IsValueFaulted}, Value={ValueForDebugDisplay}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.System_LazyDebugView`1))]

      [System.Runtime.InteropServices.ComVisible(false)]

      public class Lazy<T>
    typeParameters:
    - id: T
      description: To be added.
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.#ctor
  id: '#ctor'
  parent: System.Lazy`1
  langs:
  - csharp
  name: Lazy()
  nameWithType: Lazy<T>.Lazy()
  fullName: System.Lazy<T>.Lazy()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Lazy ();
    parameters: []
  overload: System.Lazy`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Lazy`1
  langs:
  - csharp
  name: Lazy(Boolean)
  nameWithType: Lazy<T>.Lazy(Boolean)
  fullName: System.Lazy<T>.Lazy(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Lazy (bool isThreadSafe);
    parameters:
    - id: isThreadSafe
      type: System.Boolean
      description: To be added.
  overload: System.Lazy`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.#ctor(System.Func{`0})
  id: '#ctor(System.Func{`0})'
  parent: System.Lazy`1
  langs:
  - csharp
  name: Lazy(Func<T>)
  nameWithType: Lazy<T>.Lazy(Func<T>)
  fullName: System.Lazy<T>.Lazy(Func<T>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Lazy (Func<T> valueFactory);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: To be added.
  overload: System.Lazy`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.#ctor(System.`0hreading.Lazy`0hreadSafetyMode)
  id: '#ctor(System.`0hreading.Lazy`0hreadSafetyMode)'
  parent: System.Lazy`1
  langs:
  - csharp
  name: Lazy(LazyThreadSafetyMode)
  nameWithType: Lazy<T>.Lazy(LazyThreadSafetyMode)
  fullName: System.Lazy<T>.Lazy(LazyThreadSafetyMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Lazy (System.Threading.LazyThreadSafetyMode mode);
    parameters:
    - id: mode
      type: System.Threading.LazyThreadSafetyMode
      description: To be added.
  overload: System.Lazy`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.#ctor(System.Func{`0},System.Boolean)
  id: '#ctor(System.Func{`0},System.Boolean)'
  parent: System.Lazy`1
  langs:
  - csharp
  name: Lazy(Func<T>,Boolean)
  nameWithType: Lazy<T>.Lazy(Func<T>,Boolean)
  fullName: System.Lazy<T>.Lazy(Func<T>,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Lazy (Func<T> valueFactory, bool isThreadSafe);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: To be added.
    - id: isThreadSafe
      type: System.Boolean
      description: To be added.
  overload: System.Lazy`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.#ctor(System.Func{`0},System.`0hreading.Lazy`0hreadSafetyMode)
  id: '#ctor(System.Func{`0},System.`0hreading.Lazy`0hreadSafetyMode)'
  parent: System.Lazy`1
  langs:
  - csharp
  name: Lazy(Func<T>,LazyThreadSafetyMode)
  nameWithType: Lazy<T>.Lazy(Func<T>,LazyThreadSafetyMode)
  fullName: System.Lazy<T>.Lazy(Func<T>,LazyThreadSafetyMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Lazy (Func<T> valueFactory, System.Threading.LazyThreadSafetyMode mode);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: To be added.
    - id: mode
      type: System.Threading.LazyThreadSafetyMode
      description: To be added.
  overload: System.Lazy`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.IsValueCreated
  id: IsValueCreated
  parent: System.Lazy`1
  langs:
  - csharp
  name: IsValueCreated
  nameWithType: Lazy<T>.IsValueCreated
  fullName: System.Lazy<T>.IsValueCreated
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsValueCreated { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Lazy`1.IsValueCreated*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.ToString
  id: ToString
  parent: System.Lazy`1
  langs:
  - csharp
  name: ToString()
  nameWithType: Lazy<T>.ToString()
  fullName: System.Lazy<T>.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Lazy`1.ToString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Lazy`1.Value
  id: Value
  parent: System.Lazy`1
  langs:
  - csharp
  name: Value
  nameWithType: Lazy<T>.Value
  fullName: System.Lazy<T>.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public T Value { get; }
    return:
      type: T
      description: To be added.
  overload: System.Lazy`1.Value*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Lazy`1.#ctor
  parent: System.Lazy`1
  isExternal: false
  name: Lazy()
  nameWithType: Lazy<T>.Lazy()
  fullName: System.Lazy<T>.Lazy()
- uid: System.Lazy`1.#ctor(System.Boolean)
  parent: System.Lazy`1
  isExternal: false
  name: Lazy(Boolean)
  nameWithType: Lazy<T>.Lazy(Boolean)
  fullName: System.Lazy<T>.Lazy(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Lazy`1.#ctor(System.Func{`0})
  parent: System.Lazy`1
  isExternal: false
  name: Lazy(Func<T>)
  nameWithType: Lazy<T>.Lazy(Func<T>)
  fullName: System.Lazy<T>.Lazy(Func<T>)
- uid: System.Func{T}
  parent: System
  isExternal: false
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
- uid: System.Lazy`1.#ctor(System.`0hreading.Lazy`0hreadSafetyMode)
  parent: System.Lazy`1
  isExternal: false
  name: Lazy(LazyThreadSafetyMode)
  nameWithType: Lazy<T>.Lazy(LazyThreadSafetyMode)
  fullName: System.Lazy<T>.Lazy(LazyThreadSafetyMode)
- uid: System.Threading.LazyThreadSafetyMode
  parent: System.Threading
  isExternal: false
  name: LazyThreadSafetyMode
  nameWithType: LazyThreadSafetyMode
  fullName: System.Threading.LazyThreadSafetyMode
- uid: System.Lazy`1.#ctor(System.Func{`0},System.Boolean)
  parent: System.Lazy`1
  isExternal: false
  name: Lazy(Func<T>,Boolean)
  nameWithType: Lazy<T>.Lazy(Func<T>,Boolean)
  fullName: System.Lazy<T>.Lazy(Func<T>,Boolean)
- uid: System.Func{T}
  parent: System
  isExternal: false
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Lazy`1.#ctor(System.Func{`0},System.`0hreading.Lazy`0hreadSafetyMode)
  parent: System.Lazy`1
  isExternal: false
  name: Lazy(Func<T>,LazyThreadSafetyMode)
  nameWithType: Lazy<T>.Lazy(Func<T>,LazyThreadSafetyMode)
  fullName: System.Lazy<T>.Lazy(Func<T>,LazyThreadSafetyMode)
- uid: System.Func{T}
  parent: System
  isExternal: false
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
- uid: System.Threading.LazyThreadSafetyMode
  parent: System.Threading
  isExternal: false
  name: LazyThreadSafetyMode
  nameWithType: LazyThreadSafetyMode
  fullName: System.Threading.LazyThreadSafetyMode
- uid: System.Lazy`1.IsValueCreated
  parent: System.Lazy`1
  isExternal: false
  name: IsValueCreated
  nameWithType: Lazy<T>.IsValueCreated
  fullName: System.Lazy<T>.IsValueCreated
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Lazy`1.ToString
  parent: System.Lazy`1
  isExternal: false
  name: ToString()
  nameWithType: Lazy<T>.ToString()
  fullName: System.Lazy<T>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Lazy`1.Value
  parent: System.Lazy`1
  isExternal: false
  name: Value
  nameWithType: Lazy<T>.Value
  fullName: System.Lazy<T>.Value
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Lazy`1.#ctor*
  parent: System.Lazy`1
  isExternal: false
  name: Lazy<T>
  nameWithType: Lazy<T>.Lazy<T>
- uid: System.Lazy`1.IsValueCreated*
  parent: System.Lazy`1
  isExternal: false
  name: IsValueCreated
  nameWithType: Lazy<T>.IsValueCreated
- uid: System.Lazy`1.ToString*
  parent: System.Lazy`1
  isExternal: false
  name: ToString
  nameWithType: Lazy<T>.ToString
- uid: System.Lazy`1.Value*
  parent: System.Lazy`1
  isExternal: false
  name: Value
  nameWithType: Lazy<T>.Value
