### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.SignatureHelper
  id: SignatureHelper
  children:
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)
  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])
  - System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.AddSentinel
  - System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  - System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  - System.Reflection.Emit.SignatureHelper.GetHashCode
  - System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper
  - System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)
  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.SignatureHelper.GetSignature
  - System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.Emit.SignatureHelper.ToString
  langs:
  - csharp
  name: SignatureHelper
  nameWithType: SignatureHelper
  fullName: System.Reflection.Emit.SignatureHelper
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._SignatureHelper
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  id: AddArgument(System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: AddArgument(Type)
  nameWithType: SignatureHelper.AddArgument(Type)
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void AddArgument (Type clsArgument);
    parameters:
    - id: clsArgument
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.AddArgument*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)
  id: AddArgument(System.Type,System.Boolean)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: AddArgument(Type,Boolean)
  nameWithType: SignatureHelper.AddArgument(Type,Boolean)
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void AddArgument (Type argument, bool pinned);
    parameters:
    - id: argument
      type: System.Type
      description: To be added.
    - id: pinned
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.AddArgument*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])
  id: AddArgument(System.Type,System.Type[],System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: AddArgument(Type,Type[],Type[])
  nameWithType: SignatureHelper.AddArgument(Type,Type[],Type[])
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);
    parameters:
    - id: argument
      type: System.Type
      description: To be added.
    - id: requiredCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: optionalCustomModifiers
      type: System.Type[]
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.AddArgument*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])
  id: AddArguments(System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: AddArguments(Type[],Type[][],Type[][])
  nameWithType: SignatureHelper.AddArguments(Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.AddArguments(Type[],Type[][],Type[][])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);
    parameters:
    - id: arguments
      type: System.Type[]
      description: To be added.
    - id: requiredCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: optionalCustomModifiers
      type: System.Type[][]
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.AddArguments*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.AddSentinel
  id: AddSentinel
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: AddSentinel()
  nameWithType: SignatureHelper.AddSentinel()
  fullName: System.Reflection.Emit.SignatureHelper.AddSentinel()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void AddSentinel ();
    parameters: []
  overload: System.Reflection.Emit.SignatureHelper.AddSentinel*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SignatureHelper.Equals(Object)
  fullName: System.Reflection.Emit.SignatureHelper.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  id: GetFieldSigHelper(System.Reflection.Module)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetFieldSigHelper(Module)
  nameWithType: SignatureHelper.GetFieldSigHelper(Module)
  fullName: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(Module)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SignatureHelper.GetHashCode()
  fullName: System.Reflection.Emit.SignatureHelper.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper
  id: GetLocalVarSigHelper
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetLocalVarSigHelper()
  nameWithType: SignatureHelper.GetLocalVarSigHelper()
  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();
    parameters: []
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  id: GetLocalVarSigHelper(System.Reflection.Module)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetLocalVarSigHelper(Module)
  nameWithType: SignatureHelper.GetLocalVarSigHelper(Module)
  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(Module)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  id: GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetMethodSigHelper(CallingConventions,Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConventions,Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(CallingConventions,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);
    parameters:
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)
  id: GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetMethodSigHelper(CallingConvention,Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConvention,Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(CallingConvention,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);
    parameters:
    - id: unmanagedCallingConvention
      type: System.Runtime.InteropServices.CallingConvention
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  id: GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetMethodSigHelper(Module,CallingConventions,Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(Module,CallingConventions,Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,CallingConventions,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)
  id: GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetMethodSigHelper(Module,CallingConvention,Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(Module,CallingConvention,Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,CallingConvention,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: To be added.
    - id: unmanagedCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  id: GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetMethodSigHelper(Module,Type,Type[])
  nameWithType: SignatureHelper.GetMethodSigHelper(Module,Type,Type[])
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  id: GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetPropertySigHelper(Module,Type,Type[])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module,Type,Type[])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: requiredReturnTypeCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: optionalReturnTypeCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: requiredParameterTypeCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: optionalParameterTypeCustomModifiers
      type: System.Type[][]
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);
    parameters:
    - id: mod
      type: System.Reflection.Module
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: requiredReturnTypeCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: optionalReturnTypeCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: requiredParameterTypeCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: optionalParameterTypeCustomModifiers
      type: System.Type[][]
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.GetSignature
  id: GetSignature
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: GetSignature()
  nameWithType: SignatureHelper.GetSignature()
  fullName: System.Reflection.Emit.SignatureHelper.GetSignature()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public byte[] GetSignature ();
    parameters: []
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.GetSignature*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureHelper.ToString
  id: ToString
  parent: System.Reflection.Emit.SignatureHelper
  langs:
  - csharp
  name: ToString()
  nameWithType: SignatureHelper.ToString()
  fullName: System.Reflection.Emit.SignatureHelper.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Emit.SignatureHelper.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: AddArgument(Type)
  nameWithType: SignatureHelper.AddArgument(Type)
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: AddArgument(Type,Boolean)
  nameWithType: SignatureHelper.AddArgument(Type,Boolean)
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: AddArgument(Type,Type[],Type[])
  nameWithType: SignatureHelper.AddArgument(Type,Type[],Type[])
  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type,Type[],Type[])
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: AddArguments(Type[],Type[][],Type[][])
  nameWithType: SignatureHelper.AddArguments(Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.AddArguments(Type[],Type[][],Type[][])
- uid: System.Type[][]
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[][]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.SignatureHelper.AddSentinel
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: AddSentinel()
  nameWithType: SignatureHelper.AddSentinel()
  fullName: System.Reflection.Emit.SignatureHelper.AddSentinel()
- uid: System.Reflection.Emit.SignatureHelper.Equals(System.Object)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: Equals(Object)
  nameWithType: SignatureHelper.Equals(Object)
  fullName: System.Reflection.Emit.SignatureHelper.Equals(Object)
- uid: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetFieldSigHelper(Module)
  nameWithType: SignatureHelper.GetFieldSigHelper(Module)
  fullName: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(Module)
- uid: System.Reflection.Emit.SignatureHelper
  parent: System.Reflection.Emit
  isExternal: false
  name: SignatureHelper
  nameWithType: SignatureHelper
  fullName: System.Reflection.Emit.SignatureHelper
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.SignatureHelper.GetHashCode
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetHashCode()
  nameWithType: SignatureHelper.GetHashCode()
  fullName: System.Reflection.Emit.SignatureHelper.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetLocalVarSigHelper()
  nameWithType: SignatureHelper.GetLocalVarSigHelper()
  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper()
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetLocalVarSigHelper(Module)
  nameWithType: SignatureHelper.GetLocalVarSigHelper(Module)
  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(Module)
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetMethodSigHelper(CallingConventions,Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConventions,Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(CallingConventions,Type)
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetMethodSigHelper(CallingConvention,Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConvention,Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(CallingConvention,Type)
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetMethodSigHelper(Module,CallingConventions,Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(Module,CallingConventions,Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,CallingConventions,Type)
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetMethodSigHelper(Module,CallingConvention,Type)
  nameWithType: SignatureHelper.GetMethodSigHelper(Module,CallingConvention,Type)
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,CallingConvention,Type)
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetMethodSigHelper(Module,Type,Type[])
  nameWithType: SignatureHelper.GetMethodSigHelper(Module,Type,Type[])
  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,Type,Type[])
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetPropertySigHelper(Module,Type,Type[])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module,Type,Type[])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,Type,Type[])
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: SignatureHelper.GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
- uid: System.Reflection.Emit.SignatureHelper.GetSignature
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetSignature()
  nameWithType: SignatureHelper.GetSignature()
  fullName: System.Reflection.Emit.SignatureHelper.GetSignature()
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.SignatureHelper.ToString
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: ToString()
  nameWithType: SignatureHelper.ToString()
  fullName: System.Reflection.Emit.SignatureHelper.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.SignatureHelper.AddArgument*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: AddArgument
  nameWithType: SignatureHelper.AddArgument
- uid: System.Reflection.Emit.SignatureHelper.AddArguments*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: AddArguments
  nameWithType: SignatureHelper.AddArguments
- uid: System.Reflection.Emit.SignatureHelper.AddSentinel*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: AddSentinel
  nameWithType: SignatureHelper.AddSentinel
- uid: System.Reflection.Emit.SignatureHelper.Equals*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: Equals
  nameWithType: SignatureHelper.Equals
- uid: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetFieldSigHelper
  nameWithType: SignatureHelper.GetFieldSigHelper
- uid: System.Reflection.Emit.SignatureHelper.GetHashCode*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetHashCode
  nameWithType: SignatureHelper.GetHashCode
- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetLocalVarSigHelper
  nameWithType: SignatureHelper.GetLocalVarSigHelper
- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetMethodSigHelper
  nameWithType: SignatureHelper.GetMethodSigHelper
- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetPropertySigHelper
  nameWithType: SignatureHelper.GetPropertySigHelper
- uid: System.Reflection.Emit.SignatureHelper.GetSignature*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: GetSignature
  nameWithType: SignatureHelper.GetSignature
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfo
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount
- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: System.Runtime.InteropServices._SignatureHelper.Invoke
  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke
- uid: System.Reflection.Emit.SignatureHelper.ToString*
  parent: System.Reflection.Emit.SignatureHelper
  isExternal: false
  name: ToString
  nameWithType: SignatureHelper.ToString
