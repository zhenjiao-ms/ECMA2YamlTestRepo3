### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  id: AsymmetricAlgorithm
  children:
  - System.Security.Cryptography.AsymmetricAlgorithm.#ctor
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Create
  - System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  langs:
  - csharp
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class AsymmetricAlgorithm : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: AsymmetricAlgorithm()
  nameWithType: AsymmetricAlgorithm.AsymmetricAlgorithm()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.AsymmetricAlgorithm()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected AsymmetricAlgorithm ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricAlgorithm.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
  id: Clear
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Clear()
  nameWithType: AsymmetricAlgorithm.Clear()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Clear*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Create()
  nameWithType: AsymmetricAlgorithm.Create()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.AsymmetricAlgorithm Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Create*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Create(String)
  nameWithType: AsymmetricAlgorithm.Create(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: To be added.
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Create*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  id: Dispose
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Dispose()
  nameWithType: AsymmetricAlgorithm.Dispose()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AsymmetricAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: AsymmetricAlgorithm.FromXmlString(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: AsymmetricAlgorithm.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  id: KeySize
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: KeySize
  nameWithType: AsymmetricAlgorithm.KeySize
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual int KeySize { get; set; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.KeySize*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  id: KeySizeValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: KeySizeValue
  nameWithType: AsymmetricAlgorithm.KeySizeValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected int KeySizeValue;
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: LegalKeySizes
  nameWithType: AsymmetricAlgorithm.LegalKeySizes
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  id: LegalKeySizesValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: LegalKeySizesValue
  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: AsymmetricAlgorithm.SignatureAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: AsymmetricAlgorithm.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: AsymmetricAlgorithm()
  nameWithType: AsymmetricAlgorithm.AsymmetricAlgorithm()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.AsymmetricAlgorithm()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: AsymmetricAlgorithm.Clear()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Create()
  nameWithType: AsymmetricAlgorithm.Create()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create()
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Create(String)
  nameWithType: AsymmetricAlgorithm.Create(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create(String)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: AsymmetricAlgorithm.Dispose()
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AsymmetricAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: FromXmlString(String)
  nameWithType: AsymmetricAlgorithm.FromXmlString(String)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: AsymmetricAlgorithm.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeySize
  nameWithType: AsymmetricAlgorithm.KeySize
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeySizeValue
  nameWithType: AsymmetricAlgorithm.KeySizeValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: LegalKeySizes
  nameWithType: AsymmetricAlgorithm.LegalKeySizes
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.KeySizes
  parent: System.Security.Cryptography
  isExternal: false
  name: KeySizes
  nameWithType: KeySizes
  fullName: System.Security.Cryptography.KeySizes[]
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: LegalKeySizesValue
  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
- uid: System.Security.Cryptography.KeySizes
  parent: System.Security.Cryptography
  isExternal: false
  name: KeySizes
  nameWithType: KeySizes
  fullName: System.Security.Cryptography.KeySizes[]
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: AsymmetricAlgorithm.SignatureAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: AsymmetricAlgorithm.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Clear
  nameWithType: AsymmetricAlgorithm.Clear
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Create
  nameWithType: AsymmetricAlgorithm.Create
- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: AsymmetricAlgorithm.Dispose
- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: FromXmlString
  nameWithType: AsymmetricAlgorithm.FromXmlString
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: AsymmetricAlgorithm.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: KeySize
  nameWithType: AsymmetricAlgorithm.KeySize
- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: LegalKeySizes
  nameWithType: AsymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: AsymmetricAlgorithm.SignatureAlgorithm
- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString*
  parent: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: ToXmlString
  nameWithType: AsymmetricAlgorithm.ToXmlString
