### YamlMime:ManagedReference
items:
- uid: System.Type
  id: Type
  children:
  - System.Type.#ctor
  - System.Type.Assembly
  - System.Type.AssemblyQualifiedName
  - System.Type.Attributes
  - System.Type.BaseType
  - System.Type.ContainsGenericParameters
  - System.Type.DeclaringMethod
  - System.Type.DeclaringType
  - System.Type.DefaultBinder
  - System.Type.Delimiter
  - System.Type.EmptyTypes
  - System.Type.Equals(System.Object)
  - System.Type.Equals(System.Type)
  - System.Type.FilterAttribute
  - System.Type.FilterName
  - System.Type.FilterNameIgnoreCase
  - System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Type.FullName
  - System.Type.GenericParameterAttributes
  - System.Type.GenericParameterPosition
  - System.Type.GenericTypeArguments
  - System.Type.GetArrayRank
  - System.Type.GetAttributeFlagsImpl
  - System.Type.GetConstructor(System.Type[])
  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructors
  - System.Type.GetConstructors(System.Reflection.BindingFlags)
  - System.Type.GetDefaultMembers
  - System.Type.GetElementType
  - System.Type.GetEnumName(System.Object)
  - System.Type.GetEnumNames
  - System.Type.GetEnumUnderlyingType
  - System.Type.GetEnumValues
  - System.Type.GetEvent(System.String)
  - System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Type.GetEvents
  - System.Type.GetEvents(System.Reflection.BindingFlags)
  - System.Type.GetField(System.String)
  - System.Type.GetField(System.String,System.Reflection.BindingFlags)
  - System.Type.GetFields
  - System.Type.GetFields(System.Reflection.BindingFlags)
  - System.Type.GetGenericArguments
  - System.Type.GetGenericParameterConstraints
  - System.Type.GetGenericTypeDefinition
  - System.Type.GetHashCode
  - System.Type.GetInterface(System.String)
  - System.Type.GetInterface(System.String,System.Boolean)
  - System.Type.GetInterfaceMap(System.Type)
  - System.Type.GetInterfaces
  - System.Type.GetMember(System.String)
  - System.Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Type.GetMembers
  - System.Type.GetMembers(System.Reflection.BindingFlags)
  - System.Type.GetMethod(System.String)
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMethod(System.String,System.Type[])
  - System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethods
  - System.Type.GetMethods(System.Reflection.BindingFlags)
  - System.Type.GetNestedType(System.String)
  - System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Type.GetNestedTypes
  - System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Type.GetProperties
  - System.Type.GetProperties(System.Reflection.BindingFlags)
  - System.Type.GetProperty(System.String)
  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Type.GetProperty(System.String,System.Type)
  - System.Type.GetProperty(System.String,System.Type[])
  - System.Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetType
  - System.Type.GetType(System.String)
  - System.Type.GetType(System.String,System.Boolean)
  - System.Type.GetType(System.String,System.Boolean,System.Boolean)
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
  - System.Type.GetTypeArray(System.Object[])
  - System.Type.GetTypeCode(System.Type)
  - System.Type.GetTypeCodeImpl
  - System.Type.GetTypeFromCLSID(System.Guid)
  - System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
  - System.Type.GetTypeFromCLSID(System.Guid,System.String)
  - System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  - System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  - System.Type.GetTypeFromProgID(System.String)
  - System.Type.GetTypeFromProgID(System.String,System.Boolean)
  - System.Type.GetTypeFromProgID(System.String,System.String)
  - System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
  - System.Type.GetTypeHandle(System.Object)
  - System.Type.GUID
  - System.Type.HasElementType
  - System.Type.HasElementTypeImpl
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Type.IsAbstract
  - System.Type.IsAnsiClass
  - System.Type.IsArray
  - System.Type.IsArrayImpl
  - System.Type.IsAssignableFrom(System.Type)
  - System.Type.IsAutoClass
  - System.Type.IsAutoLayout
  - System.Type.IsByRef
  - System.Type.IsByRefImpl
  - System.Type.IsClass
  - System.Type.IsCOMObject
  - System.Type.IsCOMObjectImpl
  - System.Type.IsConstructedGenericType
  - System.Type.IsContextful
  - System.Type.IsContextfulImpl
  - System.Type.IsEnum
  - System.Type.IsEnumDefined(System.Object)
  - System.Type.IsEquivalentTo(System.Type)
  - System.Type.IsExplicitLayout
  - System.Type.IsGenericParameter
  - System.Type.IsGenericType
  - System.Type.IsGenericTypeDefinition
  - System.Type.IsImport
  - System.Type.IsInstanceOfType(System.Object)
  - System.Type.IsInterface
  - System.Type.IsLayoutSequential
  - System.Type.IsMarshalByRef
  - System.Type.IsMarshalByRefImpl
  - System.Type.IsNested
  - System.Type.IsNestedAssembly
  - System.Type.IsNestedFamANDAssem
  - System.Type.IsNestedFamily
  - System.Type.IsNestedFamORAssem
  - System.Type.IsNestedPrivate
  - System.Type.IsNestedPublic
  - System.Type.IsNotPublic
  - System.Type.IsPointer
  - System.Type.IsPointerImpl
  - System.Type.IsPrimitive
  - System.Type.IsPrimitiveImpl
  - System.Type.IsPublic
  - System.Type.IsSealed
  - System.Type.IsSecurityCritical
  - System.Type.IsSecuritySafeCritical
  - System.Type.IsSecurityTransparent
  - System.Type.IsSerializable
  - System.Type.IsSpecialName
  - System.Type.IsSubclassOf(System.Type)
  - System.Type.IsUnicodeClass
  - System.Type.IsValueType
  - System.Type.IsValueTypeImpl
  - System.Type.IsVisible
  - System.Type.MakeArrayType
  - System.Type.MakeArrayType(System.Int32)
  - System.Type.MakeByRefType
  - System.Type.MakeGenericType(System.Type[])
  - System.Type.MakePointerType
  - System.Type.MemberType
  - System.Type.Missing
  - System.Type.Module
  - System.Type.Namespace
  - System.Type.op_Equality(System.Type,System.Type)
  - System.Type.op_Inequality(System.Type,System.Type)
  - System.Type.ReflectedType
  - System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  - System.Type.StructLayoutAttribute
  - System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
  - System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Type.ToString
  - System.Type.TypeHandle
  - System.Type.TypeInitializer
  - System.Type.UnderlyingSystemType
  langs:
  - csharp
  name: Type
  nameWithType: Type
  fullName: System.Type
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Type))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Type : System.Reflection.MemberInfo, System.Reflection.IReflect, System.Runtime.InteropServices._Type
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  implements:
  - System.Reflection.IReflect
  - System.Runtime.InteropServices._Type
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.Name
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.#ctor
  id: '#ctor'
  parent: System.Type
  langs:
  - csharp
  name: Type()
  nameWithType: Type.Type()
  fullName: System.Type.Type()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected Type ();
    parameters: []
  overload: System.Type.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.Assembly
  id: Assembly
  parent: System.Type
  langs:
  - csharp
  name: Assembly
  nameWithType: Type.Assembly
  fullName: System.Type.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Type.Assembly*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Type
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: Type.AssemblyQualifiedName
  fullName: System.Type.AssemblyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Type.AssemblyQualifiedName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.Attributes
  id: Attributes
  parent: System.Type
  langs:
  - csharp
  name: Attributes
  nameWithType: Type.Attributes
  fullName: System.Type.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.TypeAttributes Attributes { get; }
    return:
      type: System.Reflection.TypeAttributes
      description: To be added.
  overload: System.Type.Attributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.BaseType
  id: BaseType
  parent: System.Type
  langs:
  - csharp
  name: BaseType
  nameWithType: Type.BaseType
  fullName: System.Type.BaseType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Type BaseType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.BaseType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.ContainsGenericParameters
  id: ContainsGenericParameters
  parent: System.Type
  langs:
  - csharp
  name: ContainsGenericParameters
  nameWithType: Type.ContainsGenericParameters
  fullName: System.Type.ContainsGenericParameters
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool ContainsGenericParameters { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.ContainsGenericParameters*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.DeclaringMethod
  id: DeclaringMethod
  parent: System.Type
  langs:
  - csharp
  name: DeclaringMethod
  nameWithType: Type.DeclaringMethod
  fullName: System.Type.DeclaringMethod
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MethodBase DeclaringMethod { get; }
    return:
      type: System.Reflection.MethodBase
      description: To be added.
  overload: System.Type.DeclaringMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.DeclaringType
  id: DeclaringType
  parent: System.Type
  langs:
  - csharp
  name: DeclaringType
  nameWithType: Type.DeclaringType
  fullName: System.Type.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.DeclaringType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.DefaultBinder
  id: DefaultBinder
  parent: System.Type
  langs:
  - csharp
  name: DefaultBinder
  nameWithType: Type.DefaultBinder
  fullName: System.Type.DefaultBinder
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Binder DefaultBinder { get; }
    return:
      type: System.Reflection.Binder
      description: To be added.
  overload: System.Type.DefaultBinder*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.Delimiter
  id: Delimiter
  parent: System.Type
  langs:
  - csharp
  name: Delimiter
  nameWithType: Type.Delimiter
  fullName: System.Type.Delimiter
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly char Delimiter;
    return:
      type: System.Char
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.EmptyTypes
  id: EmptyTypes
  parent: System.Type
  langs:
  - csharp
  name: EmptyTypes
  nameWithType: Type.EmptyTypes
  fullName: System.Type.EmptyTypes
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly Type[] EmptyTypes;
    return:
      type: System.Type[]
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Type
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Type.Equals(Object)
  fullName: System.Type.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.Equals(System.Type)
  id: Equals(System.Type)
  parent: System.Type
  langs:
  - csharp
  name: Equals(Type)
  nameWithType: Type.Equals(Type)
  fullName: System.Type.Equals(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool Equals (Type o);
    parameters:
    - id: o
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.FilterAttribute
  id: FilterAttribute
  parent: System.Type
  langs:
  - csharp
  name: FilterAttribute
  nameWithType: Type.FilterAttribute
  fullName: System.Type.FilterAttribute
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Reflection.MemberFilter FilterAttribute;
    return:
      type: System.Reflection.MemberFilter
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.FilterName
  id: FilterName
  parent: System.Type
  langs:
  - csharp
  name: FilterName
  nameWithType: Type.FilterName
  fullName: System.Type.FilterName
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Reflection.MemberFilter FilterName;
    return:
      type: System.Reflection.MemberFilter
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.FilterNameIgnoreCase
  id: FilterNameIgnoreCase
  parent: System.Type
  langs:
  - csharp
  name: FilterNameIgnoreCase
  nameWithType: Type.FilterNameIgnoreCase
  fullName: System.Type.FilterNameIgnoreCase
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Reflection.MemberFilter FilterNameIgnoreCase;
    return:
      type: System.Reflection.MemberFilter
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  id: FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Type
  langs:
  - csharp
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Type.FindInterfaces(TypeFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);
    parameters:
    - id: filter
      type: System.Reflection.TypeFilter
      description: To be added.
    - id: filterCriteria
      type: System.Object
      description: To be added.
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Type.FindInterfaces*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  id: FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Type
  langs:
  - csharp
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);
    parameters:
    - id: memberType
      type: System.Reflection.MemberTypes
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: filter
      type: System.Reflection.MemberFilter
      description: To be added.
    - id: filterCriteria
      type: System.Object
      description: To be added.
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  overload: System.Type.FindMembers*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.FullName
  id: FullName
  parent: System.Type
  langs:
  - csharp
  name: FullName
  nameWithType: Type.FullName
  fullName: System.Type.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract string FullName { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Type.FullName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GenericParameterAttributes
  id: GenericParameterAttributes
  parent: System.Type
  langs:
  - csharp
  name: GenericParameterAttributes
  nameWithType: Type.GenericParameterAttributes
  fullName: System.Type.GenericParameterAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.GenericParameterAttributes GenericParameterAttributes { get; }
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  overload: System.Type.GenericParameterAttributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Type
  langs:
  - csharp
  name: GenericParameterPosition
  nameWithType: Type.GenericParameterPosition
  fullName: System.Type.GenericParameterPosition
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual int GenericParameterPosition { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Type.GenericParameterPosition*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Type
  langs:
  - csharp
  name: GenericTypeArguments
  nameWithType: Type.GenericTypeArguments
  fullName: System.Type.GenericTypeArguments
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GenericTypeArguments { get; }
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Type.GenericTypeArguments*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetArrayRank
  id: GetArrayRank
  parent: System.Type
  langs:
  - csharp
  name: GetArrayRank()
  nameWithType: Type.GetArrayRank()
  fullName: System.Type.GetArrayRank()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual int GetArrayRank ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Type.GetArrayRank*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetAttributeFlagsImpl
  id: GetAttributeFlagsImpl
  parent: System.Type
  langs:
  - csharp
  name: GetAttributeFlagsImpl()
  nameWithType: Type.GetAttributeFlagsImpl()
  fullName: System.Type.GetAttributeFlagsImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract System.Reflection.TypeAttributes GetAttributeFlagsImpl ();
    parameters: []
    return:
      type: System.Reflection.TypeAttributes
      description: To be added.
  overload: System.Type.GetAttributeFlagsImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetConstructor(System.Type[])
  id: GetConstructor(System.Type[])
  parent: System.Type
  langs:
  - csharp
  name: GetConstructor(Type[])
  nameWithType: Type.GetConstructor(Type[])
  fullName: System.Type.GetConstructor(Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.ConstructorInfo
      description: To be added.
  overload: System.Type.GetConstructor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.ConstructorInfo
      description: To be added.
  overload: System.Type.GetConstructor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.ConstructorInfo
      description: To be added.
  overload: System.Type.GetConstructor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Type.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Type.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.ConstructorInfo
      description: To be added.
  overload: System.Type.GetConstructorImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetConstructors
  id: GetConstructors
  parent: System.Type
  langs:
  - csharp
  name: GetConstructors()
  nameWithType: Type.GetConstructors()
  fullName: System.Type.GetConstructors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors ();
    parameters: []
    return:
      type: System.Reflection.ConstructorInfo[]
      description: To be added.
  overload: System.Type.GetConstructors*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: Type.GetConstructors(BindingFlags)
  fullName: System.Type.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.ConstructorInfo[]
      description: To be added.
  overload: System.Type.GetConstructors*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetDefaultMembers
  id: GetDefaultMembers
  parent: System.Type
  langs:
  - csharp
  name: GetDefaultMembers()
  nameWithType: Type.GetDefaultMembers()
  fullName: System.Type.GetDefaultMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MemberInfo[] GetDefaultMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  overload: System.Type.GetDefaultMembers*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetElementType
  id: GetElementType
  parent: System.Type
  langs:
  - csharp
  name: GetElementType()
  nameWithType: Type.GetElementType()
  fullName: System.Type.GetElementType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetElementType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetEnumName(System.Object)
  id: GetEnumName(System.Object)
  parent: System.Type
  langs:
  - csharp
  name: GetEnumName(Object)
  nameWithType: Type.GetEnumName(Object)
  fullName: System.Type.GetEnumName(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetEnumName (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Type.GetEnumName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetEnumNames
  id: GetEnumNames
  parent: System.Type
  langs:
  - csharp
  name: GetEnumNames()
  nameWithType: Type.GetEnumNames()
  fullName: System.Type.GetEnumNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string[] GetEnumNames ();
    parameters: []
    return:
      type: System.String[]
      description: To be added.
  overload: System.Type.GetEnumNames*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetEnumUnderlyingType
  id: GetEnumUnderlyingType
  parent: System.Type
  langs:
  - csharp
  name: GetEnumUnderlyingType()
  nameWithType: Type.GetEnumUnderlyingType()
  fullName: System.Type.GetEnumUnderlyingType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type GetEnumUnderlyingType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetEnumUnderlyingType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetEnumValues
  id: GetEnumValues
  parent: System.Type
  langs:
  - csharp
  name: GetEnumValues()
  nameWithType: Type.GetEnumValues()
  fullName: System.Type.GetEnumValues()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Array GetEnumValues ();
    parameters: []
    return:
      type: System.Array
      description: To be added.
  overload: System.Type.GetEnumValues*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetEvent(System.String)
  id: GetEvent(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetEvent(String)
  nameWithType: Type.GetEvent(String)
  fullName: System.Type.GetEvent(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.EventInfo
      description: To be added.
  overload: System.Type.GetEvent*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: Type.GetEvent(String,BindingFlags)
  fullName: System.Type.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.EventInfo
      description: To be added.
  overload: System.Type.GetEvent*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetEvents
  id: GetEvents
  parent: System.Type
  langs:
  - csharp
  name: GetEvents()
  nameWithType: Type.GetEvents()
  fullName: System.Type.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: To be added.
  overload: System.Type.GetEvents*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: Type.GetEvents(BindingFlags)
  fullName: System.Type.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.EventInfo[]
      description: To be added.
  overload: System.Type.GetEvents*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetField(System.String)
  id: GetField(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetField(String)
  nameWithType: Type.GetField(String)
  fullName: System.Type.GetField(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Type.GetField*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: Type.GetField(String,BindingFlags)
  fullName: System.Type.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Type.GetField*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetFields
  id: GetFields
  parent: System.Type
  langs:
  - csharp
  name: GetFields()
  nameWithType: Type.GetFields()
  fullName: System.Type.GetFields()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields ();
    parameters: []
    return:
      type: System.Reflection.FieldInfo[]
      description: To be added.
  overload: System.Type.GetFields*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: Type.GetFields(BindingFlags)
  fullName: System.Type.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.FieldInfo[]
      description: To be added.
  overload: System.Type.GetFields*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetGenericArguments
  id: GetGenericArguments
  parent: System.Type
  langs:
  - csharp
  name: GetGenericArguments()
  nameWithType: Type.GetGenericArguments()
  fullName: System.Type.GetGenericArguments()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GetGenericArguments ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Type.GetGenericArguments*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetGenericParameterConstraints
  id: GetGenericParameterConstraints
  parent: System.Type
  langs:
  - csharp
  name: GetGenericParameterConstraints()
  nameWithType: Type.GetGenericParameterConstraints()
  fullName: System.Type.GetGenericParameterConstraints()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GetGenericParameterConstraints ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Type.GetGenericParameterConstraints*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Type
  langs:
  - csharp
  name: GetGenericTypeDefinition()
  nameWithType: Type.GetGenericTypeDefinition()
  fullName: System.Type.GetGenericTypeDefinition()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type GetGenericTypeDefinition ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetGenericTypeDefinition*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetHashCode
  id: GetHashCode
  parent: System.Type
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Type.GetHashCode()
  fullName: System.Type.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Type.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: Type.GetInterface(String)
  fullName: System.Type.GetInterface(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Type GetInterface (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetInterface*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetInterface(String,Boolean)
  nameWithType: Type.GetInterface(String,Boolean)
  fullName: System.Type.GetInterface(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetInterface*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Type
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: Type.GetInterfaceMap(Type)
  fullName: System.Type.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.InterfaceMapping
      description: To be added.
  overload: System.Type.GetInterfaceMap*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetInterfaces
  id: GetInterfaces
  parent: System.Type
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: Type.GetInterfaces()
  fullName: System.Type.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Type.GetInterfaces*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: Type.GetMember(String)
  fullName: System.Type.GetMember(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  overload: System.Type.GetMember*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: Type.GetMember(String,BindingFlags)
  fullName: System.Type.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  overload: System.Type.GetMember*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Type.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: type
      type: System.Reflection.MemberTypes
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  overload: System.Type.GetMember*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMembers
  id: GetMembers
  parent: System.Type
  langs:
  - csharp
  name: GetMembers()
  nameWithType: Type.GetMembers()
  fullName: System.Type.GetMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  overload: System.Type.GetMembers*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: Type.GetMembers(BindingFlags)
  fullName: System.Type.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  overload: System.Type.GetMembers*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethod(System.String)
  id: GetMethod(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetMethod(String)
  nameWithType: Type.GetMethod(String)
  fullName: System.Type.GetMethod(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Type.GetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: Type.GetMethod(String,BindingFlags)
  fullName: System.Type.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Type.GetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethod(System.String,System.Type[])
  id: GetMethod(System.String,System.Type[])
  parent: System.Type
  langs:
  - csharp
  name: GetMethod(String,Type[])
  nameWithType: Type.GetMethod(String,Type[])
  fullName: System.Type.GetMethod(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Type.GetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Type.GetMethod(String,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Type.GetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Type.GetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Type.GetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Type.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Type.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Type.GetMethodImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethods
  id: GetMethods
  parent: System.Type
  langs:
  - csharp
  name: GetMethods()
  nameWithType: Type.GetMethods()
  fullName: System.Type.GetMethods()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: To be added.
  overload: System.Type.GetMethods*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: Type.GetMethods(BindingFlags)
  fullName: System.Type.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MethodInfo[]
      description: To be added.
  overload: System.Type.GetMethods*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetNestedType(System.String)
  id: GetNestedType(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetNestedType(String)
  nameWithType: Type.GetNestedType(String)
  fullName: System.Type.GetNestedType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Type GetNestedType (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetNestedType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetNestedType(String,BindingFlags)
  nameWithType: Type.GetNestedType(String,BindingFlags)
  fullName: System.Type.GetNestedType(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetNestedType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetNestedTypes
  id: GetNestedTypes
  parent: System.Type
  langs:
  - csharp
  name: GetNestedTypes()
  nameWithType: Type.GetNestedTypes()
  fullName: System.Type.GetNestedTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Type[] GetNestedTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Type.GetNestedTypes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: Type.GetNestedTypes(BindingFlags)
  fullName: System.Type.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Type.GetNestedTypes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperties
  id: GetProperties
  parent: System.Type
  langs:
  - csharp
  name: GetProperties()
  nameWithType: Type.GetProperties()
  fullName: System.Type.GetProperties()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties ();
    parameters: []
    return:
      type: System.Reflection.PropertyInfo[]
      description: To be added.
  overload: System.Type.GetProperties*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: Type.GetProperties(BindingFlags)
  fullName: System.Type.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo[]
      description: To be added.
  overload: System.Type.GetProperties*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: Type.GetProperty(String)
  fullName: System.Type.GetProperty(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  overload: System.Type.GetProperty*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: Type.GetProperty(String,BindingFlags)
  fullName: System.Type.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  overload: System.Type.GetProperty*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperty(System.String,System.Type)
  id: GetProperty(System.String,System.Type)
  parent: System.Type
  langs:
  - csharp
  name: GetProperty(String,Type)
  nameWithType: Type.GetProperty(String,Type)
  fullName: System.Type.GetProperty(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  overload: System.Type.GetProperty*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperty(System.String,System.Type[])
  id: GetProperty(System.String,System.Type[])
  parent: System.Type
  langs:
  - csharp
  name: GetProperty(String,Type[])
  nameWithType: Type.GetProperty(String,Type[])
  fullName: System.Type.GetProperty(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  overload: System.Type.GetProperty*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperty(System.String,System.Type,System.Type[])
  id: GetProperty(System.String,System.Type,System.Type[])
  parent: System.Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[])
  nameWithType: Type.GetProperty(String,Type,Type[])
  fullName: System.Type.GetProperty(String,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  overload: System.Type.GetProperty*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Type.GetProperty(String,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  overload: System.Type.GetProperty*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  overload: System.Type.GetProperty*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  langs:
  - csharp
  name: GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: Type.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Type.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  overload: System.Type.GetPropertyImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetType
  id: GetType
  parent: System.Type
  langs:
  - csharp
  name: GetType()
  nameWithType: Type.GetType()
  fullName: System.Type.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetType(System.String)
  id: GetType(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetType(String)
  nameWithType: Type.GetType(String)
  fullName: System.Type.GetType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: Type.GetType(String,Boolean)
  fullName: System.Type.GetType(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: Type.GetType(String,Boolean,Boolean)
  fullName: System.Type.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
  id: GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
  parent: System.Type
  langs:
  - csharp
  name: GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>)
  nameWithType: Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>)
  fullName: System.Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetType (string typeName, Func<System.Reflection.AssemblyName,System.Reflection.Assembly> assemblyResolver, Func<System.Reflection.Assembly,string,bool,Type> typeResolver);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    - id: assemblyResolver
      type: System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly}
      description: To be added.
    - id: typeResolver
      type: System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type}
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
  id: GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean)
  nameWithType: Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean)
  fullName: System.Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetType (string typeName, Func<System.Reflection.AssemblyName,System.Reflection.Assembly> assemblyResolver, Func<System.Reflection.Assembly,string,bool,Type> typeResolver, bool throwOnError);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    - id: assemblyResolver
      type: System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly}
      description: To be added.
    - id: typeResolver
      type: System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type}
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
  id: GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean,Boolean)
  nameWithType: Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean,Boolean)
  fullName: System.Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetType (string typeName, Func<System.Reflection.AssemblyName,System.Reflection.Assembly> assemblyResolver, Func<System.Reflection.Assembly,string,bool,Type> typeResolver, bool throwOnError, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    - id: assemblyResolver
      type: System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly}
      description: To be added.
    - id: typeResolver
      type: System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type}
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeArray(System.Object[])
  id: GetTypeArray(System.Object[])
  parent: System.Type
  langs:
  - csharp
  name: GetTypeArray(Object[])
  nameWithType: Type.GetTypeArray(Object[])
  fullName: System.Type.GetTypeArray(Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type[] GetTypeArray (object[] args);
    parameters:
    - id: args
      type: System.Object[]
      description: To be added.
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Type.GetTypeArray*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeCode(System.Type)
  id: GetTypeCode(System.Type)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeCode(Type)
  nameWithType: Type.GetTypeCode(Type)
  fullName: System.Type.GetTypeCode(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static TypeCode GetTypeCode (Type type);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    return:
      type: System.TypeCode
      description: To be added.
  overload: System.Type.GetTypeCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeCodeImpl
  id: GetTypeCodeImpl
  parent: System.Type
  langs:
  - csharp
  name: GetTypeCodeImpl()
  nameWithType: Type.GetTypeCodeImpl()
  fullName: System.Type.GetTypeCodeImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual TypeCode GetTypeCodeImpl ();
    parameters: []
    return:
      type: System.TypeCode
      description: To be added.
  overload: System.Type.GetTypeCodeImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromCLSID(System.Guid)
  id: GetTypeFromCLSID(System.Guid)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromCLSID(Guid)
  nameWithType: Type.GetTypeFromCLSID(Guid)
  fullName: System.Type.GetTypeFromCLSID(Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromCLSID (Guid clsid);
    parameters:
    - id: clsid
      type: System.Guid
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromCLSID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
  id: GetTypeFromCLSID(System.Guid,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromCLSID(Guid,Boolean)
  nameWithType: Type.GetTypeFromCLSID(Guid,Boolean)
  fullName: System.Type.GetTypeFromCLSID(Guid,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromCLSID (Guid clsid, bool throwOnError);
    parameters:
    - id: clsid
      type: System.Guid
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromCLSID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)
  id: GetTypeFromCLSID(System.Guid,System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromCLSID(Guid,String)
  nameWithType: Type.GetTypeFromCLSID(Guid,String)
  fullName: System.Type.GetTypeFromCLSID(Guid,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromCLSID (Guid clsid, string server);
    parameters:
    - id: clsid
      type: System.Guid
      description: To be added.
    - id: server
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromCLSID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  id: GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromCLSID(Guid,String,Boolean)
  nameWithType: Type.GetTypeFromCLSID(Guid,String,Boolean)
  fullName: System.Type.GetTypeFromCLSID(Guid,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromCLSID (Guid clsid, string server, bool throwOnError);
    parameters:
    - id: clsid
      type: System.Guid
      description: To be added.
    - id: server
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromCLSID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  id: GetTypeFromHandle(System.RuntimeTypeHandle)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromHandle(RuntimeTypeHandle)
  nameWithType: Type.GetTypeFromHandle(RuntimeTypeHandle)
  fullName: System.Type.GetTypeFromHandle(RuntimeTypeHandle)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromHandle (RuntimeTypeHandle handle);
    parameters:
    - id: handle
      type: System.RuntimeTypeHandle
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromHandle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromProgID(System.String)
  id: GetTypeFromProgID(System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromProgID(String)
  nameWithType: Type.GetTypeFromProgID(String)
  fullName: System.Type.GetTypeFromProgID(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromProgID (string progID);
    parameters:
    - id: progID
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromProgID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)
  id: GetTypeFromProgID(System.String,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromProgID(String,Boolean)
  nameWithType: Type.GetTypeFromProgID(String,Boolean)
  fullName: System.Type.GetTypeFromProgID(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromProgID (string progID, bool throwOnError);
    parameters:
    - id: progID
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromProgID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromProgID(System.String,System.String)
  id: GetTypeFromProgID(System.String,System.String)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromProgID(String,String)
  nameWithType: Type.GetTypeFromProgID(String,String)
  fullName: System.Type.GetTypeFromProgID(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromProgID (string progID, string server);
    parameters:
    - id: progID
      type: System.String
      description: To be added.
    - id: server
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromProgID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
  id: GetTypeFromProgID(System.String,System.String,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeFromProgID(String,String,Boolean)
  nameWithType: Type.GetTypeFromProgID(String,String,Boolean)
  fullName: System.Type.GetTypeFromProgID(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type GetTypeFromProgID (string progID, string server, bool throwOnError);
    parameters:
    - id: progID
      type: System.String
      description: To be added.
    - id: server
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.GetTypeFromProgID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GetTypeHandle(System.Object)
  id: GetTypeHandle(System.Object)
  parent: System.Type
  langs:
  - csharp
  name: GetTypeHandle(Object)
  nameWithType: Type.GetTypeHandle(Object)
  fullName: System.Type.GetTypeHandle(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static RuntimeTypeHandle GetTypeHandle (object o);
    parameters:
    - id: o
      type: System.Object
      description: To be added.
    return:
      type: System.RuntimeTypeHandle
      description: To be added.
  overload: System.Type.GetTypeHandle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.GUID
  id: GUID
  parent: System.Type
  langs:
  - csharp
  name: GUID
  nameWithType: Type.GUID
  fullName: System.Type.GUID
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Guid GUID { get; }
    return:
      type: System.Guid
      description: To be added.
  overload: System.Type.GUID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.HasElementType
  id: HasElementType
  parent: System.Type
  langs:
  - csharp
  name: HasElementType
  nameWithType: Type.HasElementType
  fullName: System.Type.HasElementType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool HasElementType { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.HasElementType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.HasElementTypeImpl
  id: HasElementTypeImpl
  parent: System.Type
  langs:
  - csharp
  name: HasElementTypeImpl()
  nameWithType: Type.HasElementTypeImpl()
  fullName: System.Type.HasElementTypeImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract bool HasElementTypeImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.HasElementTypeImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: target
      type: System.Object
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Type.InvokeMember*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: target
      type: System.Object
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Type.InvokeMember*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: target
      type: System.Object
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: namedParameters
      type: System.String[]
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Type.InvokeMember*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsAbstract
  id: IsAbstract
  parent: System.Type
  langs:
  - csharp
  name: IsAbstract
  nameWithType: Type.IsAbstract
  fullName: System.Type.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsAbstract*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsAnsiClass
  id: IsAnsiClass
  parent: System.Type
  langs:
  - csharp
  name: IsAnsiClass
  nameWithType: Type.IsAnsiClass
  fullName: System.Type.IsAnsiClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsAnsiClass { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsAnsiClass*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsArray
  id: IsArray
  parent: System.Type
  langs:
  - csharp
  name: IsArray
  nameWithType: Type.IsArray
  fullName: System.Type.IsArray
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsArray*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsArrayImpl
  id: IsArrayImpl
  parent: System.Type
  langs:
  - csharp
  name: IsArrayImpl()
  nameWithType: Type.IsArrayImpl()
  fullName: System.Type.IsArrayImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract bool IsArrayImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsArrayImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Type
  langs:
  - csharp
  name: IsAssignableFrom(Type)
  nameWithType: Type.IsAssignableFrom(Type)
  fullName: System.Type.IsAssignableFrom(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsAssignableFrom (Type c);
    parameters:
    - id: c
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsAssignableFrom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsAutoClass
  id: IsAutoClass
  parent: System.Type
  langs:
  - csharp
  name: IsAutoClass
  nameWithType: Type.IsAutoClass
  fullName: System.Type.IsAutoClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsAutoClass { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsAutoClass*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsAutoLayout
  id: IsAutoLayout
  parent: System.Type
  langs:
  - csharp
  name: IsAutoLayout
  nameWithType: Type.IsAutoLayout
  fullName: System.Type.IsAutoLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsAutoLayout { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsAutoLayout*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsByRef
  id: IsByRef
  parent: System.Type
  langs:
  - csharp
  name: IsByRef
  nameWithType: Type.IsByRef
  fullName: System.Type.IsByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsByRef { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsByRef*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsByRefImpl
  id: IsByRefImpl
  parent: System.Type
  langs:
  - csharp
  name: IsByRefImpl()
  nameWithType: Type.IsByRefImpl()
  fullName: System.Type.IsByRefImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract bool IsByRefImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsByRefImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsClass
  id: IsClass
  parent: System.Type
  langs:
  - csharp
  name: IsClass
  nameWithType: Type.IsClass
  fullName: System.Type.IsClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsClass { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsClass*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsCOMObject
  id: IsCOMObject
  parent: System.Type
  langs:
  - csharp
  name: IsCOMObject
  nameWithType: Type.IsCOMObject
  fullName: System.Type.IsCOMObject
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsCOMObject { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsCOMObject*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsCOMObjectImpl
  id: IsCOMObjectImpl
  parent: System.Type
  langs:
  - csharp
  name: IsCOMObjectImpl()
  nameWithType: Type.IsCOMObjectImpl()
  fullName: System.Type.IsCOMObjectImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract bool IsCOMObjectImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsCOMObjectImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsConstructedGenericType
  id: IsConstructedGenericType
  parent: System.Type
  langs:
  - csharp
  name: IsConstructedGenericType
  nameWithType: Type.IsConstructedGenericType
  fullName: System.Type.IsConstructedGenericType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsConstructedGenericType { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsConstructedGenericType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsContextful
  id: IsContextful
  parent: System.Type
  langs:
  - csharp
  name: IsContextful
  nameWithType: Type.IsContextful
  fullName: System.Type.IsContextful
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsContextful { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsContextful*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsContextfulImpl
  id: IsContextfulImpl
  parent: System.Type
  langs:
  - csharp
  name: IsContextfulImpl()
  nameWithType: Type.IsContextfulImpl()
  fullName: System.Type.IsContextfulImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual bool IsContextfulImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsContextfulImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsEnum
  id: IsEnum
  parent: System.Type
  langs:
  - csharp
  name: IsEnum
  nameWithType: Type.IsEnum
  fullName: System.Type.IsEnum
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsEnum { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsEnum*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsEnumDefined(System.Object)
  id: IsEnumDefined(System.Object)
  parent: System.Type
  langs:
  - csharp
  name: IsEnumDefined(Object)
  nameWithType: Type.IsEnumDefined(Object)
  fullName: System.Type.IsEnumDefined(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsEnumDefined (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsEnumDefined*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsEquivalentTo(System.Type)
  id: IsEquivalentTo(System.Type)
  parent: System.Type
  langs:
  - csharp
  name: IsEquivalentTo(Type)
  nameWithType: Type.IsEquivalentTo(Type)
  fullName: System.Type.IsEquivalentTo(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsEquivalentTo (Type other);
    parameters:
    - id: other
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsEquivalentTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsExplicitLayout
  id: IsExplicitLayout
  parent: System.Type
  langs:
  - csharp
  name: IsExplicitLayout
  nameWithType: Type.IsExplicitLayout
  fullName: System.Type.IsExplicitLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsExplicitLayout { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsExplicitLayout*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsGenericParameter
  id: IsGenericParameter
  parent: System.Type
  langs:
  - csharp
  name: IsGenericParameter
  nameWithType: Type.IsGenericParameter
  fullName: System.Type.IsGenericParameter
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsGenericParameter { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsGenericParameter*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsGenericType
  id: IsGenericType
  parent: System.Type
  langs:
  - csharp
  name: IsGenericType
  nameWithType: Type.IsGenericType
  fullName: System.Type.IsGenericType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsGenericType { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsGenericType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsGenericTypeDefinition
  id: IsGenericTypeDefinition
  parent: System.Type
  langs:
  - csharp
  name: IsGenericTypeDefinition
  nameWithType: Type.IsGenericTypeDefinition
  fullName: System.Type.IsGenericTypeDefinition
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsGenericTypeDefinition { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsGenericTypeDefinition*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsImport
  id: IsImport
  parent: System.Type
  langs:
  - csharp
  name: IsImport
  nameWithType: Type.IsImport
  fullName: System.Type.IsImport
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsImport { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsImport*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsInstanceOfType(System.Object)
  id: IsInstanceOfType(System.Object)
  parent: System.Type
  langs:
  - csharp
  name: IsInstanceOfType(Object)
  nameWithType: Type.IsInstanceOfType(Object)
  fullName: System.Type.IsInstanceOfType(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsInstanceOfType (object o);
    parameters:
    - id: o
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsInstanceOfType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsInterface
  id: IsInterface
  parent: System.Type
  langs:
  - csharp
  name: IsInterface
  nameWithType: Type.IsInterface
  fullName: System.Type.IsInterface
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsInterface { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsInterface*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsLayoutSequential
  id: IsLayoutSequential
  parent: System.Type
  langs:
  - csharp
  name: IsLayoutSequential
  nameWithType: Type.IsLayoutSequential
  fullName: System.Type.IsLayoutSequential
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsLayoutSequential { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsLayoutSequential*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsMarshalByRef
  id: IsMarshalByRef
  parent: System.Type
  langs:
  - csharp
  name: IsMarshalByRef
  nameWithType: Type.IsMarshalByRef
  fullName: System.Type.IsMarshalByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsMarshalByRef { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsMarshalByRef*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsMarshalByRefImpl
  id: IsMarshalByRefImpl
  parent: System.Type
  langs:
  - csharp
  name: IsMarshalByRefImpl()
  nameWithType: Type.IsMarshalByRefImpl()
  fullName: System.Type.IsMarshalByRefImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual bool IsMarshalByRefImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsMarshalByRefImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsNested
  id: IsNested
  parent: System.Type
  langs:
  - csharp
  name: IsNested
  nameWithType: Type.IsNested
  fullName: System.Type.IsNested
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNested { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsNested*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsNestedAssembly
  id: IsNestedAssembly
  parent: System.Type
  langs:
  - csharp
  name: IsNestedAssembly
  nameWithType: Type.IsNestedAssembly
  fullName: System.Type.IsNestedAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNestedAssembly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsNestedAssembly*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsNestedFamANDAssem
  id: IsNestedFamANDAssem
  parent: System.Type
  langs:
  - csharp
  name: IsNestedFamANDAssem
  nameWithType: Type.IsNestedFamANDAssem
  fullName: System.Type.IsNestedFamANDAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNestedFamANDAssem { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsNestedFamANDAssem*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsNestedFamily
  id: IsNestedFamily
  parent: System.Type
  langs:
  - csharp
  name: IsNestedFamily
  nameWithType: Type.IsNestedFamily
  fullName: System.Type.IsNestedFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNestedFamily { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsNestedFamily*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsNestedFamORAssem
  id: IsNestedFamORAssem
  parent: System.Type
  langs:
  - csharp
  name: IsNestedFamORAssem
  nameWithType: Type.IsNestedFamORAssem
  fullName: System.Type.IsNestedFamORAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNestedFamORAssem { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsNestedFamORAssem*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsNestedPrivate
  id: IsNestedPrivate
  parent: System.Type
  langs:
  - csharp
  name: IsNestedPrivate
  nameWithType: Type.IsNestedPrivate
  fullName: System.Type.IsNestedPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNestedPrivate { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsNestedPrivate*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsNestedPublic
  id: IsNestedPublic
  parent: System.Type
  langs:
  - csharp
  name: IsNestedPublic
  nameWithType: Type.IsNestedPublic
  fullName: System.Type.IsNestedPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNestedPublic { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsNestedPublic*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsNotPublic
  id: IsNotPublic
  parent: System.Type
  langs:
  - csharp
  name: IsNotPublic
  nameWithType: Type.IsNotPublic
  fullName: System.Type.IsNotPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNotPublic { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsNotPublic*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsPointer
  id: IsPointer
  parent: System.Type
  langs:
  - csharp
  name: IsPointer
  nameWithType: Type.IsPointer
  fullName: System.Type.IsPointer
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsPointer { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsPointer*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsPointerImpl
  id: IsPointerImpl
  parent: System.Type
  langs:
  - csharp
  name: IsPointerImpl()
  nameWithType: Type.IsPointerImpl()
  fullName: System.Type.IsPointerImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract bool IsPointerImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsPointerImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsPrimitive
  id: IsPrimitive
  parent: System.Type
  langs:
  - csharp
  name: IsPrimitive
  nameWithType: Type.IsPrimitive
  fullName: System.Type.IsPrimitive
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsPrimitive { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsPrimitive*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsPrimitiveImpl
  id: IsPrimitiveImpl
  parent: System.Type
  langs:
  - csharp
  name: IsPrimitiveImpl()
  nameWithType: Type.IsPrimitiveImpl()
  fullName: System.Type.IsPrimitiveImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract bool IsPrimitiveImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsPrimitiveImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsPublic
  id: IsPublic
  parent: System.Type
  langs:
  - csharp
  name: IsPublic
  nameWithType: Type.IsPublic
  fullName: System.Type.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsPublic*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsSealed
  id: IsSealed
  parent: System.Type
  langs:
  - csharp
  name: IsSealed
  nameWithType: Type.IsSealed
  fullName: System.Type.IsSealed
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsSealed*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsSecurityCritical
  id: IsSecurityCritical
  parent: System.Type
  langs:
  - csharp
  name: IsSecurityCritical
  nameWithType: Type.IsSecurityCritical
  fullName: System.Type.IsSecurityCritical
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsSecurityCritical { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsSecurityCritical*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsSecuritySafeCritical
  id: IsSecuritySafeCritical
  parent: System.Type
  langs:
  - csharp
  name: IsSecuritySafeCritical
  nameWithType: Type.IsSecuritySafeCritical
  fullName: System.Type.IsSecuritySafeCritical
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsSecuritySafeCritical { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsSecuritySafeCritical*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsSecurityTransparent
  id: IsSecurityTransparent
  parent: System.Type
  langs:
  - csharp
  name: IsSecurityTransparent
  nameWithType: Type.IsSecurityTransparent
  fullName: System.Type.IsSecurityTransparent
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsSecurityTransparent { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsSecurityTransparent*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsSerializable
  id: IsSerializable
  parent: System.Type
  langs:
  - csharp
  name: IsSerializable
  nameWithType: Type.IsSerializable
  fullName: System.Type.IsSerializable
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsSerializable { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsSerializable*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsSpecialName
  id: IsSpecialName
  parent: System.Type
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: Type.IsSpecialName
  fullName: System.Type.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsSpecialName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Type
  langs:
  - csharp
  name: IsSubclassOf(Type)
  nameWithType: Type.IsSubclassOf(Type)
  fullName: System.Type.IsSubclassOf(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsSubclassOf (Type c);
    parameters:
    - id: c
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsSubclassOf*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsUnicodeClass
  id: IsUnicodeClass
  parent: System.Type
  langs:
  - csharp
  name: IsUnicodeClass
  nameWithType: Type.IsUnicodeClass
  fullName: System.Type.IsUnicodeClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsUnicodeClass { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsUnicodeClass*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsValueType
  id: IsValueType
  parent: System.Type
  langs:
  - csharp
  name: IsValueType
  nameWithType: Type.IsValueType
  fullName: System.Type.IsValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsValueType { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsValueType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsValueTypeImpl
  id: IsValueTypeImpl
  parent: System.Type
  langs:
  - csharp
  name: IsValueTypeImpl()
  nameWithType: Type.IsValueTypeImpl()
  fullName: System.Type.IsValueTypeImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual bool IsValueTypeImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsValueTypeImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.IsVisible
  id: IsVisible
  parent: System.Type
  langs:
  - csharp
  name: IsVisible
  nameWithType: Type.IsVisible
  fullName: System.Type.IsVisible
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsVisible { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.IsVisible*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.MakeArrayType
  id: MakeArrayType
  parent: System.Type
  langs:
  - csharp
  name: MakeArrayType()
  nameWithType: Type.MakeArrayType()
  fullName: System.Type.MakeArrayType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type MakeArrayType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.MakeArrayType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Type
  langs:
  - csharp
  name: MakeArrayType(Int32)
  nameWithType: Type.MakeArrayType(Int32)
  fullName: System.Type.MakeArrayType(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type MakeArrayType (int rank);
    parameters:
    - id: rank
      type: System.Int32
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.MakeArrayType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.MakeByRefType
  id: MakeByRefType
  parent: System.Type
  langs:
  - csharp
  name: MakeByRefType()
  nameWithType: Type.MakeByRefType()
  fullName: System.Type.MakeByRefType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type MakeByRefType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.MakeByRefType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Type
  langs:
  - csharp
  name: MakeGenericType(Type[])
  nameWithType: Type.MakeGenericType(Type[])
  fullName: System.Type.MakeGenericType(Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type MakeGenericType (Type[] typeArguments);
    parameters:
    - id: typeArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.MakeGenericType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.MakePointerType
  id: MakePointerType
  parent: System.Type
  langs:
  - csharp
  name: MakePointerType()
  nameWithType: Type.MakePointerType()
  fullName: System.Type.MakePointerType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type MakePointerType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.MakePointerType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.MemberType
  id: MemberType
  parent: System.Type
  langs:
  - csharp
  name: MemberType
  nameWithType: Type.MemberType
  fullName: System.Type.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: To be added.
  overload: System.Type.MemberType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.Missing
  id: Missing
  parent: System.Type
  langs:
  - csharp
  name: Missing
  nameWithType: Type.Missing
  fullName: System.Type.Missing
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly object Missing;
    return:
      type: System.Object
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.Module
  id: Module
  parent: System.Type
  langs:
  - csharp
  name: Module
  nameWithType: Type.Module
  fullName: System.Type.Module
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: To be added.
  overload: System.Type.Module*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.Namespace
  id: Namespace
  parent: System.Type
  langs:
  - csharp
  name: Namespace
  nameWithType: Type.Namespace
  fullName: System.Type.Namespace
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract string Namespace { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Type.Namespace*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.op_Equality(System.Type,System.Type)
  id: op_Equality(System.Type,System.Type)
  parent: System.Type
  langs:
  - csharp
  name: op_Equality(Type,Type)
  nameWithType: Type.op_Equality(Type,Type)
  fullName: System.Type.op_Equality(Type,Type)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (Type left, Type right);
    parameters:
    - id: left
      type: System.Type
      description: To be added.
    - id: right
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.op_Equality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.op_Inequality(System.Type,System.Type)
  id: op_Inequality(System.Type,System.Type)
  parent: System.Type
  langs:
  - csharp
  name: op_Inequality(Type,Type)
  nameWithType: Type.op_Inequality(Type,Type)
  fullName: System.Type.op_Inequality(Type,Type)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (Type left, Type right);
    parameters:
    - id: left
      type: System.Type
      description: To be added.
    - id: right
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Type.op_Inequality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.ReflectedType
  id: ReflectedType
  parent: System.Type
  langs:
  - csharp
  name: ReflectedType
  nameWithType: Type.ReflectedType
  fullName: System.Type.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.ReflectedType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  id: ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  langs:
  - csharp
  name: ReflectionOnlyGetType(String,Boolean,Boolean)
  nameWithType: Type.ReflectionOnlyGetType(String,Boolean,Boolean)
  fullName: System.Type.ReflectionOnlyGetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Type ReflectionOnlyGetType (string typeName, bool throwIfNotFound, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    - id: throwIfNotFound
      type: System.Boolean
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.ReflectionOnlyGetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.StructLayoutAttribute
  id: StructLayoutAttribute
  parent: System.Type
  langs:
  - csharp
  name: StructLayoutAttribute
  nameWithType: Type.StructLayoutAttribute
  fullName: System.Type.StructLayoutAttribute
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Runtime.InteropServices.StructLayoutAttribute StructLayoutAttribute { get; }
    return:
      type: System.Runtime.InteropServices.StructLayoutAttribute
      description: To be added.
  overload: System.Type.StructLayoutAttribute*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Type
  langs:
  - csharp
  name: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: Type.System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Type.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  overload: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Type
  langs:
  - csharp
  name: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: Type.System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Type.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  overload: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Type
  langs:
  - csharp
  name: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  nameWithType: Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Type.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  overload: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Type
  langs:
  - csharp
  name: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: Type.System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Type.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  overload: System.Type.System#Runtime#InteropServices#_Type#Invoke*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.ToString
  id: ToString
  parent: System.Type
  langs:
  - csharp
  name: ToString()
  nameWithType: Type.ToString()
  fullName: System.Type.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Type.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.TypeHandle
  id: TypeHandle
  parent: System.Type
  langs:
  - csharp
  name: TypeHandle
  nameWithType: Type.TypeHandle
  fullName: System.Type.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: To be added.
  overload: System.Type.TypeHandle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.TypeInitializer
  id: TypeInitializer
  parent: System.Type
  langs:
  - csharp
  name: TypeInitializer
  nameWithType: Type.TypeInitializer
  fullName: System.Type.TypeInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.ConstructorInfo TypeInitializer { get; }
    return:
      type: System.Reflection.ConstructorInfo
      description: To be added.
  overload: System.Type.TypeInitializer*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Type.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Type
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: Type.UnderlyingSystemType
  fullName: System.Type.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Type.UnderlyingSystemType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Reflection.MemberInfo
  isExternal: false
  name: System.Reflection.MemberInfo
- uid: System.Type.#ctor
  parent: System.Type
  isExternal: false
  name: Type()
  nameWithType: Type.Type()
  fullName: System.Type.Type()
- uid: System.Type.Assembly
  parent: System.Type
  isExternal: false
  name: Assembly
  nameWithType: Type.Assembly
  fullName: System.Type.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Type.AssemblyQualifiedName
  parent: System.Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: Type.AssemblyQualifiedName
  fullName: System.Type.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type.Attributes
  parent: System.Type
  isExternal: false
  name: Attributes
  nameWithType: Type.Attributes
  fullName: System.Type.Attributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Type.BaseType
  parent: System.Type
  isExternal: false
  name: BaseType
  nameWithType: Type.BaseType
  fullName: System.Type.BaseType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type.ContainsGenericParameters
  parent: System.Type
  isExternal: false
  name: ContainsGenericParameters
  nameWithType: Type.ContainsGenericParameters
  fullName: System.Type.ContainsGenericParameters
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type.DeclaringMethod
  parent: System.Type
  isExternal: false
  name: DeclaringMethod
  nameWithType: Type.DeclaringMethod
  fullName: System.Type.DeclaringMethod
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Type.DeclaringType
  parent: System.Type
  isExternal: false
  name: DeclaringType
  nameWithType: Type.DeclaringType
  fullName: System.Type.DeclaringType
- uid: System.Type.DefaultBinder
  parent: System.Type
  isExternal: false
  name: DefaultBinder
  nameWithType: Type.DefaultBinder
  fullName: System.Type.DefaultBinder
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Type.Delimiter
  parent: System.Type
  isExternal: false
  name: Delimiter
  nameWithType: Type.Delimiter
  fullName: System.Type.Delimiter
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Type.EmptyTypes
  parent: System.Type
  isExternal: false
  name: EmptyTypes
  nameWithType: Type.EmptyTypes
  fullName: System.Type.EmptyTypes
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.Equals(System.Object)
  parent: System.Type
  isExternal: false
  name: Equals(Object)
  nameWithType: Type.Equals(Object)
  fullName: System.Type.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type.Equals(System.Type)
  parent: System.Type
  isExternal: false
  name: Equals(Type)
  nameWithType: Type.Equals(Type)
  fullName: System.Type.Equals(Type)
- uid: System.Type.FilterAttribute
  parent: System.Type
  isExternal: false
  name: FilterAttribute
  nameWithType: Type.FilterAttribute
  fullName: System.Type.FilterAttribute
- uid: System.Reflection.MemberFilter
  parent: System.Reflection
  isExternal: false
  name: MemberFilter
  nameWithType: MemberFilter
  fullName: System.Reflection.MemberFilter
- uid: System.Type.FilterName
  parent: System.Type
  isExternal: false
  name: FilterName
  nameWithType: Type.FilterName
  fullName: System.Type.FilterName
- uid: System.Type.FilterNameIgnoreCase
  parent: System.Type
  isExternal: false
  name: FilterNameIgnoreCase
  nameWithType: Type.FilterNameIgnoreCase
  fullName: System.Type.FilterNameIgnoreCase
- uid: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Type
  isExternal: false
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Type.FindInterfaces(TypeFilter,Object)
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Type
  isExternal: false
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Type.FullName
  parent: System.Type
  isExternal: false
  name: FullName
  nameWithType: Type.FullName
  fullName: System.Type.FullName
- uid: System.Type.GenericParameterAttributes
  parent: System.Type
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: Type.GenericParameterAttributes
  fullName: System.Type.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Type.GenericParameterPosition
  parent: System.Type
  isExternal: false
  name: GenericParameterPosition
  nameWithType: Type.GenericParameterPosition
  fullName: System.Type.GenericParameterPosition
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Type.GenericTypeArguments
  parent: System.Type
  isExternal: false
  name: GenericTypeArguments
  nameWithType: Type.GenericTypeArguments
  fullName: System.Type.GenericTypeArguments
- uid: System.Type.GetArrayRank
  parent: System.Type
  isExternal: false
  name: GetArrayRank()
  nameWithType: Type.GetArrayRank()
  fullName: System.Type.GetArrayRank()
- uid: System.Type.GetAttributeFlagsImpl
  parent: System.Type
  isExternal: false
  name: GetAttributeFlagsImpl()
  nameWithType: Type.GetAttributeFlagsImpl()
  fullName: System.Type.GetAttributeFlagsImpl()
- uid: System.Type.GetConstructor(System.Type[])
  parent: System.Type
  isExternal: false
  name: GetConstructor(Type[])
  nameWithType: Type.GetConstructor(Type[])
  fullName: System.Type.GetConstructor(Type[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Type.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Type.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Type.GetConstructors
  parent: System.Type
  isExternal: false
  name: GetConstructors()
  nameWithType: Type.GetConstructors()
  fullName: System.Type.GetConstructors()
- uid: System.Reflection.ConstructorInfo[]
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo[]
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: ConstructorInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: Type.GetConstructors(BindingFlags)
  fullName: System.Type.GetConstructors(BindingFlags)
- uid: System.Type.GetDefaultMembers
  parent: System.Type
  isExternal: false
  name: GetDefaultMembers()
  nameWithType: Type.GetDefaultMembers()
  fullName: System.Type.GetDefaultMembers()
- uid: System.Type.GetElementType
  parent: System.Type
  isExternal: false
  name: GetElementType()
  nameWithType: Type.GetElementType()
  fullName: System.Type.GetElementType()
- uid: System.Type.GetEnumName(System.Object)
  parent: System.Type
  isExternal: false
  name: GetEnumName(Object)
  nameWithType: Type.GetEnumName(Object)
  fullName: System.Type.GetEnumName(Object)
- uid: System.Type.GetEnumNames
  parent: System.Type
  isExternal: false
  name: GetEnumNames()
  nameWithType: Type.GetEnumNames()
  fullName: System.Type.GetEnumNames()
- uid: System.String[]
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.GetEnumUnderlyingType
  parent: System.Type
  isExternal: false
  name: GetEnumUnderlyingType()
  nameWithType: Type.GetEnumUnderlyingType()
  fullName: System.Type.GetEnumUnderlyingType()
- uid: System.Type.GetEnumValues
  parent: System.Type
  isExternal: false
  name: GetEnumValues()
  nameWithType: Type.GetEnumValues()
  fullName: System.Type.GetEnumValues()
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Type.GetEvent(System.String)
  parent: System.Type
  isExternal: false
  name: GetEvent(String)
  nameWithType: Type.GetEvent(String)
  fullName: System.Type.GetEvent(String)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: false
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Type.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: Type.GetEvent(String,BindingFlags)
  fullName: System.Type.GetEvent(String,BindingFlags)
- uid: System.Type.GetEvents
  parent: System.Type
  isExternal: false
  name: GetEvents()
  nameWithType: Type.GetEvents()
  fullName: System.Type.GetEvents()
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: false
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: EventInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.GetEvents(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: Type.GetEvents(BindingFlags)
  fullName: System.Type.GetEvents(BindingFlags)
- uid: System.Type.GetField(System.String)
  parent: System.Type
  isExternal: false
  name: GetField(String)
  nameWithType: Type.GetField(String)
  fullName: System.Type.GetField(String)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Type.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: Type.GetField(String,BindingFlags)
  fullName: System.Type.GetField(String,BindingFlags)
- uid: System.Type.GetFields
  parent: System.Type
  isExternal: false
  name: GetFields()
  nameWithType: Type.GetFields()
  fullName: System.Type.GetFields()
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.GetFields(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: Type.GetFields(BindingFlags)
  fullName: System.Type.GetFields(BindingFlags)
- uid: System.Type.GetGenericArguments
  parent: System.Type
  isExternal: false
  name: GetGenericArguments()
  nameWithType: Type.GetGenericArguments()
  fullName: System.Type.GetGenericArguments()
- uid: System.Type.GetGenericParameterConstraints
  parent: System.Type
  isExternal: false
  name: GetGenericParameterConstraints()
  nameWithType: Type.GetGenericParameterConstraints()
  fullName: System.Type.GetGenericParameterConstraints()
- uid: System.Type.GetGenericTypeDefinition
  parent: System.Type
  isExternal: false
  name: GetGenericTypeDefinition()
  nameWithType: Type.GetGenericTypeDefinition()
  fullName: System.Type.GetGenericTypeDefinition()
- uid: System.Type.GetHashCode
  parent: System.Type
  isExternal: false
  name: GetHashCode()
  nameWithType: Type.GetHashCode()
  fullName: System.Type.GetHashCode()
- uid: System.Type.GetInterface(System.String)
  parent: System.Type
  isExternal: false
  name: GetInterface(String)
  nameWithType: Type.GetInterface(String)
  fullName: System.Type.GetInterface(String)
- uid: System.Type.GetInterface(System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetInterface(String,Boolean)
  nameWithType: Type.GetInterface(String,Boolean)
  fullName: System.Type.GetInterface(String,Boolean)
- uid: System.Type.GetInterfaceMap(System.Type)
  parent: System.Type
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: Type.GetInterfaceMap(Type)
  fullName: System.Type.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: false
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Type.GetInterfaces
  parent: System.Type
  isExternal: false
  name: GetInterfaces()
  nameWithType: Type.GetInterfaces()
  fullName: System.Type.GetInterfaces()
- uid: System.Type.GetMember(System.String)
  parent: System.Type
  isExternal: false
  name: GetMember(String)
  nameWithType: Type.GetMember(String)
  fullName: System.Type.GetMember(String)
- uid: System.Type.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: Type.GetMember(String,BindingFlags)
  fullName: System.Type.GetMember(String,BindingFlags)
- uid: System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Type.GetMember(String,MemberTypes,BindingFlags)
- uid: System.Type.GetMembers
  parent: System.Type
  isExternal: false
  name: GetMembers()
  nameWithType: Type.GetMembers()
  fullName: System.Type.GetMembers()
- uid: System.Type.GetMembers(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: Type.GetMembers(BindingFlags)
  fullName: System.Type.GetMembers(BindingFlags)
- uid: System.Type.GetMethod(System.String)
  parent: System.Type
  isExternal: false
  name: GetMethod(String)
  nameWithType: Type.GetMethod(String)
  fullName: System.Type.GetMethod(String)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: Type.GetMethod(String,BindingFlags)
  fullName: System.Type.GetMethod(String,BindingFlags)
- uid: System.Type.GetMethod(System.String,System.Type[])
  parent: System.Type
  isExternal: false
  name: GetMethod(String,Type[])
  nameWithType: Type.GetMethod(String,Type[])
  fullName: System.Type.GetMethod(String,Type[])
- uid: System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Type.GetMethod(String,Type[],ParameterModifier[])
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Type.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Type.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Type.GetMethods
  parent: System.Type
  isExternal: false
  name: GetMethods()
  nameWithType: Type.GetMethods()
  fullName: System.Type.GetMethods()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.GetMethods(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: Type.GetMethods(BindingFlags)
  fullName: System.Type.GetMethods(BindingFlags)
- uid: System.Type.GetNestedType(System.String)
  parent: System.Type
  isExternal: false
  name: GetNestedType(String)
  nameWithType: Type.GetNestedType(String)
  fullName: System.Type.GetNestedType(String)
- uid: System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetNestedType(String,BindingFlags)
  nameWithType: Type.GetNestedType(String,BindingFlags)
  fullName: System.Type.GetNestedType(String,BindingFlags)
- uid: System.Type.GetNestedTypes
  parent: System.Type
  isExternal: false
  name: GetNestedTypes()
  nameWithType: Type.GetNestedTypes()
  fullName: System.Type.GetNestedTypes()
- uid: System.Type.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: Type.GetNestedTypes(BindingFlags)
  fullName: System.Type.GetNestedTypes(BindingFlags)
- uid: System.Type.GetProperties
  parent: System.Type
  isExternal: false
  name: GetProperties()
  nameWithType: Type.GetProperties()
  fullName: System.Type.GetProperties()
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.GetProperties(System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: Type.GetProperties(BindingFlags)
  fullName: System.Type.GetProperties(BindingFlags)
- uid: System.Type.GetProperty(System.String)
  parent: System.Type
  isExternal: false
  name: GetProperty(String)
  nameWithType: Type.GetProperty(String)
  fullName: System.Type.GetProperty(String)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Type
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: Type.GetProperty(String,BindingFlags)
  fullName: System.Type.GetProperty(String,BindingFlags)
- uid: System.Type.GetProperty(System.String,System.Type)
  parent: System.Type
  isExternal: false
  name: GetProperty(String,Type)
  nameWithType: Type.GetProperty(String,Type)
  fullName: System.Type.GetProperty(String,Type)
- uid: System.Type.GetProperty(System.String,System.Type[])
  parent: System.Type
  isExternal: false
  name: GetProperty(String,Type[])
  nameWithType: Type.GetProperty(String,Type[])
  fullName: System.Type.GetProperty(String,Type[])
- uid: System.Type.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Type
  isExternal: false
  name: GetProperty(String,Type,Type[])
  nameWithType: Type.GetProperty(String,Type,Type[])
  fullName: System.Type.GetProperty(String,Type,Type[])
- uid: System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Type.GetProperty(String,Type,Type[],ParameterModifier[])
- uid: System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Type
  isExternal: false
  name: GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: Type.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Type.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Type.GetType
  parent: System.Type
  isExternal: false
  name: GetType()
  nameWithType: Type.GetType()
  fullName: System.Type.GetType()
- uid: System.Type.GetType(System.String)
  parent: System.Type
  isExternal: false
  name: GetType(String)
  nameWithType: Type.GetType(String)
  fullName: System.Type.GetType(String)
- uid: System.Type.GetType(System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: Type.GetType(String,Boolean)
  fullName: System.Type.GetType(String,Boolean)
- uid: System.Type.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: Type.GetType(String,Boolean,Boolean)
  fullName: System.Type.GetType(String,Boolean,Boolean)
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
  parent: System.Type
  isExternal: false
  name: GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>)
  nameWithType: Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>)
  fullName: System.Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>)
- uid: System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly}
  parent: System
  isExternal: false
  name: Func<AssemblyName,Assembly>
  nameWithType: Func<AssemblyName,Assembly>
  fullName: System.Func<System.Reflection.AssemblyName,System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Reflection.AssemblyName,System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: AssemblyName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type}
  parent: System
  isExternal: false
  name: Func<Assembly,String,Boolean,Type>
  nameWithType: Func<Assembly,String,Boolean,Type>
  fullName: System.Func<System.Reflection.Assembly,System.String,System.Boolean,System.Type>
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: Func<System.Reflection.Assembly,System.String,System.Boolean,System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean)
  nameWithType: Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean)
  fullName: System.Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean)
- uid: System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean,Boolean)
  nameWithType: Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean,Boolean)
  fullName: System.Type.GetType(String,Func<AssemblyName,Assembly>,Func<Assembly,String,Boolean,Type>,Boolean,Boolean)
- uid: System.Type.GetTypeArray(System.Object[])
  parent: System.Type
  isExternal: false
  name: GetTypeArray(Object[])
  nameWithType: Type.GetTypeArray(Object[])
  fullName: System.Type.GetTypeArray(Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type.GetTypeCode(System.Type)
  parent: System.Type
  isExternal: false
  name: GetTypeCode(Type)
  nameWithType: Type.GetTypeCode(Type)
  fullName: System.Type.GetTypeCode(Type)
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Type.GetTypeCodeImpl
  parent: System.Type
  isExternal: false
  name: GetTypeCodeImpl()
  nameWithType: Type.GetTypeCodeImpl()
  fullName: System.Type.GetTypeCodeImpl()
- uid: System.Type.GetTypeFromCLSID(System.Guid)
  parent: System.Type
  isExternal: false
  name: GetTypeFromCLSID(Guid)
  nameWithType: Type.GetTypeFromCLSID(Guid)
  fullName: System.Type.GetTypeFromCLSID(Guid)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetTypeFromCLSID(Guid,Boolean)
  nameWithType: Type.GetTypeFromCLSID(Guid,Boolean)
  fullName: System.Type.GetTypeFromCLSID(Guid,Boolean)
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String)
  parent: System.Type
  isExternal: false
  name: GetTypeFromCLSID(Guid,String)
  nameWithType: Type.GetTypeFromCLSID(Guid,String)
  fullName: System.Type.GetTypeFromCLSID(Guid,String)
- uid: System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetTypeFromCLSID(Guid,String,Boolean)
  nameWithType: Type.GetTypeFromCLSID(Guid,String,Boolean)
  fullName: System.Type.GetTypeFromCLSID(Guid,String,Boolean)
- uid: System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  parent: System.Type
  isExternal: false
  name: GetTypeFromHandle(RuntimeTypeHandle)
  nameWithType: Type.GetTypeFromHandle(RuntimeTypeHandle)
  fullName: System.Type.GetTypeFromHandle(RuntimeTypeHandle)
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Type.GetTypeFromProgID(System.String)
  parent: System.Type
  isExternal: false
  name: GetTypeFromProgID(String)
  nameWithType: Type.GetTypeFromProgID(String)
  fullName: System.Type.GetTypeFromProgID(String)
- uid: System.Type.GetTypeFromProgID(System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetTypeFromProgID(String,Boolean)
  nameWithType: Type.GetTypeFromProgID(String,Boolean)
  fullName: System.Type.GetTypeFromProgID(String,Boolean)
- uid: System.Type.GetTypeFromProgID(System.String,System.String)
  parent: System.Type
  isExternal: false
  name: GetTypeFromProgID(String,String)
  nameWithType: Type.GetTypeFromProgID(String,String)
  fullName: System.Type.GetTypeFromProgID(String,String)
- uid: System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
  parent: System.Type
  isExternal: false
  name: GetTypeFromProgID(String,String,Boolean)
  nameWithType: Type.GetTypeFromProgID(String,String,Boolean)
  fullName: System.Type.GetTypeFromProgID(String,String,Boolean)
- uid: System.Type.GetTypeHandle(System.Object)
  parent: System.Type
  isExternal: false
  name: GetTypeHandle(Object)
  nameWithType: Type.GetTypeHandle(Object)
  fullName: System.Type.GetTypeHandle(Object)
- uid: System.Type.GUID
  parent: System.Type
  isExternal: false
  name: GUID
  nameWithType: Type.GUID
  fullName: System.Type.GUID
- uid: System.Type.HasElementType
  parent: System.Type
  isExternal: false
  name: HasElementType
  nameWithType: Type.HasElementType
  fullName: System.Type.HasElementType
- uid: System.Type.HasElementTypeImpl
  parent: System.Type
  isExternal: false
  name: HasElementTypeImpl()
  nameWithType: Type.HasElementTypeImpl()
  fullName: System.Type.HasElementTypeImpl()
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Type.IsAbstract
  parent: System.Type
  isExternal: false
  name: IsAbstract
  nameWithType: Type.IsAbstract
  fullName: System.Type.IsAbstract
- uid: System.Type.IsAnsiClass
  parent: System.Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: Type.IsAnsiClass
  fullName: System.Type.IsAnsiClass
- uid: System.Type.IsArray
  parent: System.Type
  isExternal: false
  name: IsArray
  nameWithType: Type.IsArray
  fullName: System.Type.IsArray
- uid: System.Type.IsArrayImpl
  parent: System.Type
  isExternal: false
  name: IsArrayImpl()
  nameWithType: Type.IsArrayImpl()
  fullName: System.Type.IsArrayImpl()
- uid: System.Type.IsAssignableFrom(System.Type)
  parent: System.Type
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: Type.IsAssignableFrom(Type)
  fullName: System.Type.IsAssignableFrom(Type)
- uid: System.Type.IsAutoClass
  parent: System.Type
  isExternal: false
  name: IsAutoClass
  nameWithType: Type.IsAutoClass
  fullName: System.Type.IsAutoClass
- uid: System.Type.IsAutoLayout
  parent: System.Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: Type.IsAutoLayout
  fullName: System.Type.IsAutoLayout
- uid: System.Type.IsByRef
  parent: System.Type
  isExternal: false
  name: IsByRef
  nameWithType: Type.IsByRef
  fullName: System.Type.IsByRef
- uid: System.Type.IsByRefImpl
  parent: System.Type
  isExternal: false
  name: IsByRefImpl()
  nameWithType: Type.IsByRefImpl()
  fullName: System.Type.IsByRefImpl()
- uid: System.Type.IsClass
  parent: System.Type
  isExternal: false
  name: IsClass
  nameWithType: Type.IsClass
  fullName: System.Type.IsClass
- uid: System.Type.IsCOMObject
  parent: System.Type
  isExternal: false
  name: IsCOMObject
  nameWithType: Type.IsCOMObject
  fullName: System.Type.IsCOMObject
- uid: System.Type.IsCOMObjectImpl
  parent: System.Type
  isExternal: false
  name: IsCOMObjectImpl()
  nameWithType: Type.IsCOMObjectImpl()
  fullName: System.Type.IsCOMObjectImpl()
- uid: System.Type.IsConstructedGenericType
  parent: System.Type
  isExternal: false
  name: IsConstructedGenericType
  nameWithType: Type.IsConstructedGenericType
  fullName: System.Type.IsConstructedGenericType
- uid: System.Type.IsContextful
  parent: System.Type
  isExternal: false
  name: IsContextful
  nameWithType: Type.IsContextful
  fullName: System.Type.IsContextful
- uid: System.Type.IsContextfulImpl
  parent: System.Type
  isExternal: false
  name: IsContextfulImpl()
  nameWithType: Type.IsContextfulImpl()
  fullName: System.Type.IsContextfulImpl()
- uid: System.Type.IsEnum
  parent: System.Type
  isExternal: false
  name: IsEnum
  nameWithType: Type.IsEnum
  fullName: System.Type.IsEnum
- uid: System.Type.IsEnumDefined(System.Object)
  parent: System.Type
  isExternal: false
  name: IsEnumDefined(Object)
  nameWithType: Type.IsEnumDefined(Object)
  fullName: System.Type.IsEnumDefined(Object)
- uid: System.Type.IsEquivalentTo(System.Type)
  parent: System.Type
  isExternal: false
  name: IsEquivalentTo(Type)
  nameWithType: Type.IsEquivalentTo(Type)
  fullName: System.Type.IsEquivalentTo(Type)
- uid: System.Type.IsExplicitLayout
  parent: System.Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: Type.IsExplicitLayout
  fullName: System.Type.IsExplicitLayout
- uid: System.Type.IsGenericParameter
  parent: System.Type
  isExternal: false
  name: IsGenericParameter
  nameWithType: Type.IsGenericParameter
  fullName: System.Type.IsGenericParameter
- uid: System.Type.IsGenericType
  parent: System.Type
  isExternal: false
  name: IsGenericType
  nameWithType: Type.IsGenericType
  fullName: System.Type.IsGenericType
- uid: System.Type.IsGenericTypeDefinition
  parent: System.Type
  isExternal: false
  name: IsGenericTypeDefinition
  nameWithType: Type.IsGenericTypeDefinition
  fullName: System.Type.IsGenericTypeDefinition
- uid: System.Type.IsImport
  parent: System.Type
  isExternal: false
  name: IsImport
  nameWithType: Type.IsImport
  fullName: System.Type.IsImport
- uid: System.Type.IsInstanceOfType(System.Object)
  parent: System.Type
  isExternal: false
  name: IsInstanceOfType(Object)
  nameWithType: Type.IsInstanceOfType(Object)
  fullName: System.Type.IsInstanceOfType(Object)
- uid: System.Type.IsInterface
  parent: System.Type
  isExternal: false
  name: IsInterface
  nameWithType: Type.IsInterface
  fullName: System.Type.IsInterface
- uid: System.Type.IsLayoutSequential
  parent: System.Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: Type.IsLayoutSequential
  fullName: System.Type.IsLayoutSequential
- uid: System.Type.IsMarshalByRef
  parent: System.Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: Type.IsMarshalByRef
  fullName: System.Type.IsMarshalByRef
- uid: System.Type.IsMarshalByRefImpl
  parent: System.Type
  isExternal: false
  name: IsMarshalByRefImpl()
  nameWithType: Type.IsMarshalByRefImpl()
  fullName: System.Type.IsMarshalByRefImpl()
- uid: System.Type.IsNested
  parent: System.Type
  isExternal: false
  name: IsNested
  nameWithType: Type.IsNested
  fullName: System.Type.IsNested
- uid: System.Type.IsNestedAssembly
  parent: System.Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: Type.IsNestedAssembly
  fullName: System.Type.IsNestedAssembly
- uid: System.Type.IsNestedFamANDAssem
  parent: System.Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: Type.IsNestedFamANDAssem
  fullName: System.Type.IsNestedFamANDAssem
- uid: System.Type.IsNestedFamily
  parent: System.Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: Type.IsNestedFamily
  fullName: System.Type.IsNestedFamily
- uid: System.Type.IsNestedFamORAssem
  parent: System.Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: Type.IsNestedFamORAssem
  fullName: System.Type.IsNestedFamORAssem
- uid: System.Type.IsNestedPrivate
  parent: System.Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: Type.IsNestedPrivate
  fullName: System.Type.IsNestedPrivate
- uid: System.Type.IsNestedPublic
  parent: System.Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: Type.IsNestedPublic
  fullName: System.Type.IsNestedPublic
- uid: System.Type.IsNotPublic
  parent: System.Type
  isExternal: false
  name: IsNotPublic
  nameWithType: Type.IsNotPublic
  fullName: System.Type.IsNotPublic
- uid: System.Type.IsPointer
  parent: System.Type
  isExternal: false
  name: IsPointer
  nameWithType: Type.IsPointer
  fullName: System.Type.IsPointer
- uid: System.Type.IsPointerImpl
  parent: System.Type
  isExternal: false
  name: IsPointerImpl()
  nameWithType: Type.IsPointerImpl()
  fullName: System.Type.IsPointerImpl()
- uid: System.Type.IsPrimitive
  parent: System.Type
  isExternal: false
  name: IsPrimitive
  nameWithType: Type.IsPrimitive
  fullName: System.Type.IsPrimitive
- uid: System.Type.IsPrimitiveImpl
  parent: System.Type
  isExternal: false
  name: IsPrimitiveImpl()
  nameWithType: Type.IsPrimitiveImpl()
  fullName: System.Type.IsPrimitiveImpl()
- uid: System.Type.IsPublic
  parent: System.Type
  isExternal: false
  name: IsPublic
  nameWithType: Type.IsPublic
  fullName: System.Type.IsPublic
- uid: System.Type.IsSealed
  parent: System.Type
  isExternal: false
  name: IsSealed
  nameWithType: Type.IsSealed
  fullName: System.Type.IsSealed
- uid: System.Type.IsSecurityCritical
  parent: System.Type
  isExternal: false
  name: IsSecurityCritical
  nameWithType: Type.IsSecurityCritical
  fullName: System.Type.IsSecurityCritical
- uid: System.Type.IsSecuritySafeCritical
  parent: System.Type
  isExternal: false
  name: IsSecuritySafeCritical
  nameWithType: Type.IsSecuritySafeCritical
  fullName: System.Type.IsSecuritySafeCritical
- uid: System.Type.IsSecurityTransparent
  parent: System.Type
  isExternal: false
  name: IsSecurityTransparent
  nameWithType: Type.IsSecurityTransparent
  fullName: System.Type.IsSecurityTransparent
- uid: System.Type.IsSerializable
  parent: System.Type
  isExternal: false
  name: IsSerializable
  nameWithType: Type.IsSerializable
  fullName: System.Type.IsSerializable
- uid: System.Type.IsSpecialName
  parent: System.Type
  isExternal: false
  name: IsSpecialName
  nameWithType: Type.IsSpecialName
  fullName: System.Type.IsSpecialName
- uid: System.Type.IsSubclassOf(System.Type)
  parent: System.Type
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: Type.IsSubclassOf(Type)
  fullName: System.Type.IsSubclassOf(Type)
- uid: System.Type.IsUnicodeClass
  parent: System.Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: Type.IsUnicodeClass
  fullName: System.Type.IsUnicodeClass
- uid: System.Type.IsValueType
  parent: System.Type
  isExternal: false
  name: IsValueType
  nameWithType: Type.IsValueType
  fullName: System.Type.IsValueType
- uid: System.Type.IsValueTypeImpl
  parent: System.Type
  isExternal: false
  name: IsValueTypeImpl()
  nameWithType: Type.IsValueTypeImpl()
  fullName: System.Type.IsValueTypeImpl()
- uid: System.Type.IsVisible
  parent: System.Type
  isExternal: false
  name: IsVisible
  nameWithType: Type.IsVisible
  fullName: System.Type.IsVisible
- uid: System.Type.MakeArrayType
  parent: System.Type
  isExternal: false
  name: MakeArrayType()
  nameWithType: Type.MakeArrayType()
  fullName: System.Type.MakeArrayType()
- uid: System.Type.MakeArrayType(System.Int32)
  parent: System.Type
  isExternal: false
  name: MakeArrayType(Int32)
  nameWithType: Type.MakeArrayType(Int32)
  fullName: System.Type.MakeArrayType(Int32)
- uid: System.Type.MakeByRefType
  parent: System.Type
  isExternal: false
  name: MakeByRefType()
  nameWithType: Type.MakeByRefType()
  fullName: System.Type.MakeByRefType()
- uid: System.Type.MakeGenericType(System.Type[])
  parent: System.Type
  isExternal: false
  name: MakeGenericType(Type[])
  nameWithType: Type.MakeGenericType(Type[])
  fullName: System.Type.MakeGenericType(Type[])
- uid: System.Type.MakePointerType
  parent: System.Type
  isExternal: false
  name: MakePointerType()
  nameWithType: Type.MakePointerType()
  fullName: System.Type.MakePointerType()
- uid: System.Type.MemberType
  parent: System.Type
  isExternal: false
  name: MemberType
  nameWithType: Type.MemberType
  fullName: System.Type.MemberType
- uid: System.Type.Missing
  parent: System.Type
  isExternal: false
  name: Missing
  nameWithType: Type.Missing
  fullName: System.Type.Missing
- uid: System.Type.Module
  parent: System.Type
  isExternal: false
  name: Module
  nameWithType: Type.Module
  fullName: System.Type.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Type.Namespace
  parent: System.Type
  isExternal: false
  name: Namespace
  nameWithType: Type.Namespace
  fullName: System.Type.Namespace
- uid: System.Type.op_Equality(System.Type,System.Type)
  parent: System.Type
  isExternal: false
  name: op_Equality(Type,Type)
  nameWithType: Type.op_Equality(Type,Type)
  fullName: System.Type.op_Equality(Type,Type)
- uid: System.Type.op_Inequality(System.Type,System.Type)
  parent: System.Type
  isExternal: false
  name: op_Inequality(Type,Type)
  nameWithType: Type.op_Inequality(Type,Type)
  fullName: System.Type.op_Inequality(Type,Type)
- uid: System.Type.ReflectedType
  parent: System.Type
  isExternal: false
  name: ReflectedType
  nameWithType: Type.ReflectedType
  fullName: System.Type.ReflectedType
- uid: System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  parent: System.Type
  isExternal: false
  name: ReflectionOnlyGetType(String,Boolean,Boolean)
  nameWithType: Type.ReflectionOnlyGetType(String,Boolean,Boolean)
  fullName: System.Type.ReflectionOnlyGetType(String,Boolean,Boolean)
- uid: System.Type.StructLayoutAttribute
  parent: System.Type
  isExternal: false
  name: StructLayoutAttribute
  nameWithType: Type.StructLayoutAttribute
  fullName: System.Type.StructLayoutAttribute
- uid: System.Runtime.InteropServices.StructLayoutAttribute
  parent: System.Runtime.InteropServices
  isExternal: false
  name: StructLayoutAttribute
  nameWithType: StructLayoutAttribute
  fullName: System.Runtime.InteropServices.StructLayoutAttribute
- uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Type
  isExternal: false
  name: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: Type.System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Type
  isExternal: false
  name: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: Type.System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
  parent: System.Type
  isExternal: false
  name: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  nameWithType: Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  fullName: System.Type.System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
- uid: System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Type
  isExternal: false
  name: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: Type.System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Type.System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Type.ToString
  parent: System.Type
  isExternal: false
  name: ToString()
  nameWithType: Type.ToString()
  fullName: System.Type.ToString()
- uid: System.Type.TypeHandle
  parent: System.Type
  isExternal: false
  name: TypeHandle
  nameWithType: Type.TypeHandle
  fullName: System.Type.TypeHandle
- uid: System.Type.TypeInitializer
  parent: System.Type
  isExternal: false
  name: TypeInitializer
  nameWithType: Type.TypeInitializer
  fullName: System.Type.TypeInitializer
- uid: System.Type.UnderlyingSystemType
  parent: System.Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: Type.UnderlyingSystemType
  fullName: System.Type.UnderlyingSystemType
- uid: System.Type.#ctor*
  parent: System.Type
  isExternal: false
  name: Type
  nameWithType: Type.Type
- uid: System.Type.Assembly*
  parent: System.Type
  isExternal: false
  name: Assembly
  nameWithType: Type.Assembly
- uid: System.Type.AssemblyQualifiedName*
  parent: System.Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: Type.AssemblyQualifiedName
- uid: System.Type.Attributes*
  parent: System.Type
  isExternal: false
  name: Attributes
  nameWithType: Type.Attributes
- uid: System.Type.BaseType*
  parent: System.Type
  isExternal: false
  name: BaseType
  nameWithType: Type.BaseType
- uid: System.Type.ContainsGenericParameters*
  parent: System.Type
  isExternal: false
  name: ContainsGenericParameters
  nameWithType: Type.ContainsGenericParameters
- uid: System.Type.DeclaringMethod*
  parent: System.Type
  isExternal: false
  name: DeclaringMethod
  nameWithType: Type.DeclaringMethod
- uid: System.Type.DeclaringType*
  parent: System.Type
  isExternal: false
  name: DeclaringType
  nameWithType: Type.DeclaringType
- uid: System.Type.DefaultBinder*
  parent: System.Type
  isExternal: false
  name: DefaultBinder
  nameWithType: Type.DefaultBinder
- uid: System.Type.Equals*
  parent: System.Type
  isExternal: false
  name: Equals
  nameWithType: Type.Equals
- uid: System.Type.FindInterfaces*
  parent: System.Type
  isExternal: false
  name: FindInterfaces
  nameWithType: Type.FindInterfaces
- uid: System.Type.FindMembers*
  parent: System.Type
  isExternal: false
  name: FindMembers
  nameWithType: Type.FindMembers
- uid: System.Type.FullName*
  parent: System.Type
  isExternal: false
  name: FullName
  nameWithType: Type.FullName
- uid: System.Type.GenericParameterAttributes*
  parent: System.Type
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: Type.GenericParameterAttributes
- uid: System.Type.GenericParameterPosition*
  parent: System.Type
  isExternal: false
  name: GenericParameterPosition
  nameWithType: Type.GenericParameterPosition
- uid: System.Type.GenericTypeArguments*
  parent: System.Type
  isExternal: false
  name: GenericTypeArguments
  nameWithType: Type.GenericTypeArguments
- uid: System.Type.GetArrayRank*
  parent: System.Type
  isExternal: false
  name: GetArrayRank
  nameWithType: Type.GetArrayRank
- uid: System.Type.GetAttributeFlagsImpl*
  parent: System.Type
  isExternal: false
  name: GetAttributeFlagsImpl
  nameWithType: Type.GetAttributeFlagsImpl
- uid: System.Type.GetConstructor*
  parent: System.Type
  isExternal: false
  name: GetConstructor
  nameWithType: Type.GetConstructor
- uid: System.Type.GetConstructorImpl*
  parent: System.Type
  isExternal: false
  name: GetConstructorImpl
  nameWithType: Type.GetConstructorImpl
- uid: System.Type.GetConstructors*
  parent: System.Type
  isExternal: false
  name: GetConstructors
  nameWithType: Type.GetConstructors
- uid: System.Type.GetDefaultMembers*
  parent: System.Type
  isExternal: false
  name: GetDefaultMembers
  nameWithType: Type.GetDefaultMembers
- uid: System.Type.GetElementType*
  parent: System.Type
  isExternal: false
  name: GetElementType
  nameWithType: Type.GetElementType
- uid: System.Type.GetEnumName*
  parent: System.Type
  isExternal: false
  name: GetEnumName
  nameWithType: Type.GetEnumName
- uid: System.Type.GetEnumNames*
  parent: System.Type
  isExternal: false
  name: GetEnumNames
  nameWithType: Type.GetEnumNames
- uid: System.Type.GetEnumUnderlyingType*
  parent: System.Type
  isExternal: false
  name: GetEnumUnderlyingType
  nameWithType: Type.GetEnumUnderlyingType
- uid: System.Type.GetEnumValues*
  parent: System.Type
  isExternal: false
  name: GetEnumValues
  nameWithType: Type.GetEnumValues
- uid: System.Type.GetEvent*
  parent: System.Type
  isExternal: false
  name: GetEvent
  nameWithType: Type.GetEvent
- uid: System.Type.GetEvents*
  parent: System.Type
  isExternal: false
  name: GetEvents
  nameWithType: Type.GetEvents
- uid: System.Type.GetField*
  parent: System.Type
  isExternal: false
  name: GetField
  nameWithType: Type.GetField
- uid: System.Type.GetFields*
  parent: System.Type
  isExternal: false
  name: GetFields
  nameWithType: Type.GetFields
- uid: System.Type.GetGenericArguments*
  parent: System.Type
  isExternal: false
  name: GetGenericArguments
  nameWithType: Type.GetGenericArguments
- uid: System.Type.GetGenericParameterConstraints*
  parent: System.Type
  isExternal: false
  name: GetGenericParameterConstraints
  nameWithType: Type.GetGenericParameterConstraints
- uid: System.Type.GetGenericTypeDefinition*
  parent: System.Type
  isExternal: false
  name: GetGenericTypeDefinition
  nameWithType: Type.GetGenericTypeDefinition
- uid: System.Type.GetHashCode*
  parent: System.Type
  isExternal: false
  name: GetHashCode
  nameWithType: Type.GetHashCode
- uid: System.Type.GetInterface*
  parent: System.Type
  isExternal: false
  name: GetInterface
  nameWithType: Type.GetInterface
- uid: System.Type.GetInterfaceMap*
  parent: System.Type
  isExternal: false
  name: GetInterfaceMap
  nameWithType: Type.GetInterfaceMap
- uid: System.Type.GetInterfaces*
  parent: System.Type
  isExternal: false
  name: GetInterfaces
  nameWithType: Type.GetInterfaces
- uid: System.Type.GetMember*
  parent: System.Type
  isExternal: false
  name: GetMember
  nameWithType: Type.GetMember
- uid: System.Type.GetMembers*
  parent: System.Type
  isExternal: false
  name: GetMembers
  nameWithType: Type.GetMembers
- uid: System.Type.GetMethod*
  parent: System.Type
  isExternal: false
  name: GetMethod
  nameWithType: Type.GetMethod
- uid: System.Type.GetMethodImpl*
  parent: System.Type
  isExternal: false
  name: GetMethodImpl
  nameWithType: Type.GetMethodImpl
- uid: System.Type.GetMethods*
  parent: System.Type
  isExternal: false
  name: GetMethods
  nameWithType: Type.GetMethods
- uid: System.Type.GetNestedType*
  parent: System.Type
  isExternal: false
  name: GetNestedType
  nameWithType: Type.GetNestedType
- uid: System.Type.GetNestedTypes*
  parent: System.Type
  isExternal: false
  name: GetNestedTypes
  nameWithType: Type.GetNestedTypes
- uid: System.Type.GetProperties*
  parent: System.Type
  isExternal: false
  name: GetProperties
  nameWithType: Type.GetProperties
- uid: System.Type.GetProperty*
  parent: System.Type
  isExternal: false
  name: GetProperty
  nameWithType: Type.GetProperty
- uid: System.Type.GetPropertyImpl*
  parent: System.Type
  isExternal: false
  name: GetPropertyImpl
  nameWithType: Type.GetPropertyImpl
- uid: System.Type.GetType*
  parent: System.Type
  isExternal: false
  name: GetType
  nameWithType: Type.GetType
- uid: System.Type.GetTypeArray*
  parent: System.Type
  isExternal: false
  name: GetTypeArray
  nameWithType: Type.GetTypeArray
- uid: System.Type.GetTypeCode*
  parent: System.Type
  isExternal: false
  name: GetTypeCode
  nameWithType: Type.GetTypeCode
- uid: System.Type.GetTypeCodeImpl*
  parent: System.Type
  isExternal: false
  name: GetTypeCodeImpl
  nameWithType: Type.GetTypeCodeImpl
- uid: System.Type.GetTypeFromCLSID*
  parent: System.Type
  isExternal: false
  name: GetTypeFromCLSID
  nameWithType: Type.GetTypeFromCLSID
- uid: System.Type.GetTypeFromHandle*
  parent: System.Type
  isExternal: false
  name: GetTypeFromHandle
  nameWithType: Type.GetTypeFromHandle
- uid: System.Type.GetTypeFromProgID*
  parent: System.Type
  isExternal: false
  name: GetTypeFromProgID
  nameWithType: Type.GetTypeFromProgID
- uid: System.Type.GetTypeHandle*
  parent: System.Type
  isExternal: false
  name: GetTypeHandle
  nameWithType: Type.GetTypeHandle
- uid: System.Type.GUID*
  parent: System.Type
  isExternal: false
  name: GUID
  nameWithType: Type.GUID
- uid: System.Type.HasElementType*
  parent: System.Type
  isExternal: false
  name: HasElementType
  nameWithType: Type.HasElementType
- uid: System.Type.HasElementTypeImpl*
  parent: System.Type
  isExternal: false
  name: HasElementTypeImpl
  nameWithType: Type.HasElementTypeImpl
- uid: System.Type.InvokeMember*
  parent: System.Type
  isExternal: false
  name: InvokeMember
  nameWithType: Type.InvokeMember
- uid: System.Type.IsAbstract*
  parent: System.Type
  isExternal: false
  name: IsAbstract
  nameWithType: Type.IsAbstract
- uid: System.Type.IsAnsiClass*
  parent: System.Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: Type.IsAnsiClass
- uid: System.Type.IsArray*
  parent: System.Type
  isExternal: false
  name: IsArray
  nameWithType: Type.IsArray
- uid: System.Type.IsArrayImpl*
  parent: System.Type
  isExternal: false
  name: IsArrayImpl
  nameWithType: Type.IsArrayImpl
- uid: System.Type.IsAssignableFrom*
  parent: System.Type
  isExternal: false
  name: IsAssignableFrom
  nameWithType: Type.IsAssignableFrom
- uid: System.Type.IsAutoClass*
  parent: System.Type
  isExternal: false
  name: IsAutoClass
  nameWithType: Type.IsAutoClass
- uid: System.Type.IsAutoLayout*
  parent: System.Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: Type.IsAutoLayout
- uid: System.Type.IsByRef*
  parent: System.Type
  isExternal: false
  name: IsByRef
  nameWithType: Type.IsByRef
- uid: System.Type.IsByRefImpl*
  parent: System.Type
  isExternal: false
  name: IsByRefImpl
  nameWithType: Type.IsByRefImpl
- uid: System.Type.IsClass*
  parent: System.Type
  isExternal: false
  name: IsClass
  nameWithType: Type.IsClass
- uid: System.Type.IsCOMObject*
  parent: System.Type
  isExternal: false
  name: IsCOMObject
  nameWithType: Type.IsCOMObject
- uid: System.Type.IsCOMObjectImpl*
  parent: System.Type
  isExternal: false
  name: IsCOMObjectImpl
  nameWithType: Type.IsCOMObjectImpl
- uid: System.Type.IsConstructedGenericType*
  parent: System.Type
  isExternal: false
  name: IsConstructedGenericType
  nameWithType: Type.IsConstructedGenericType
- uid: System.Type.IsContextful*
  parent: System.Type
  isExternal: false
  name: IsContextful
  nameWithType: Type.IsContextful
- uid: System.Type.IsContextfulImpl*
  parent: System.Type
  isExternal: false
  name: IsContextfulImpl
  nameWithType: Type.IsContextfulImpl
- uid: System.Type.IsEnum*
  parent: System.Type
  isExternal: false
  name: IsEnum
  nameWithType: Type.IsEnum
- uid: System.Type.IsEnumDefined*
  parent: System.Type
  isExternal: false
  name: IsEnumDefined
  nameWithType: Type.IsEnumDefined
- uid: System.Type.IsEquivalentTo*
  parent: System.Type
  isExternal: false
  name: IsEquivalentTo
  nameWithType: Type.IsEquivalentTo
- uid: System.Type.IsExplicitLayout*
  parent: System.Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: Type.IsExplicitLayout
- uid: System.Type.IsGenericParameter*
  parent: System.Type
  isExternal: false
  name: IsGenericParameter
  nameWithType: Type.IsGenericParameter
- uid: System.Type.IsGenericType*
  parent: System.Type
  isExternal: false
  name: IsGenericType
  nameWithType: Type.IsGenericType
- uid: System.Type.IsGenericTypeDefinition*
  parent: System.Type
  isExternal: false
  name: IsGenericTypeDefinition
  nameWithType: Type.IsGenericTypeDefinition
- uid: System.Type.IsImport*
  parent: System.Type
  isExternal: false
  name: IsImport
  nameWithType: Type.IsImport
- uid: System.Type.IsInstanceOfType*
  parent: System.Type
  isExternal: false
  name: IsInstanceOfType
  nameWithType: Type.IsInstanceOfType
- uid: System.Type.IsInterface*
  parent: System.Type
  isExternal: false
  name: IsInterface
  nameWithType: Type.IsInterface
- uid: System.Type.IsLayoutSequential*
  parent: System.Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: Type.IsLayoutSequential
- uid: System.Type.IsMarshalByRef*
  parent: System.Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: Type.IsMarshalByRef
- uid: System.Type.IsMarshalByRefImpl*
  parent: System.Type
  isExternal: false
  name: IsMarshalByRefImpl
  nameWithType: Type.IsMarshalByRefImpl
- uid: System.Type.IsNested*
  parent: System.Type
  isExternal: false
  name: IsNested
  nameWithType: Type.IsNested
- uid: System.Type.IsNestedAssembly*
  parent: System.Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: Type.IsNestedAssembly
- uid: System.Type.IsNestedFamANDAssem*
  parent: System.Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: Type.IsNestedFamANDAssem
- uid: System.Type.IsNestedFamily*
  parent: System.Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: Type.IsNestedFamily
- uid: System.Type.IsNestedFamORAssem*
  parent: System.Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: Type.IsNestedFamORAssem
- uid: System.Type.IsNestedPrivate*
  parent: System.Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: Type.IsNestedPrivate
- uid: System.Type.IsNestedPublic*
  parent: System.Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: Type.IsNestedPublic
- uid: System.Type.IsNotPublic*
  parent: System.Type
  isExternal: false
  name: IsNotPublic
  nameWithType: Type.IsNotPublic
- uid: System.Type.IsPointer*
  parent: System.Type
  isExternal: false
  name: IsPointer
  nameWithType: Type.IsPointer
- uid: System.Type.IsPointerImpl*
  parent: System.Type
  isExternal: false
  name: IsPointerImpl
  nameWithType: Type.IsPointerImpl
- uid: System.Type.IsPrimitive*
  parent: System.Type
  isExternal: false
  name: IsPrimitive
  nameWithType: Type.IsPrimitive
- uid: System.Type.IsPrimitiveImpl*
  parent: System.Type
  isExternal: false
  name: IsPrimitiveImpl
  nameWithType: Type.IsPrimitiveImpl
- uid: System.Type.IsPublic*
  parent: System.Type
  isExternal: false
  name: IsPublic
  nameWithType: Type.IsPublic
- uid: System.Type.IsSealed*
  parent: System.Type
  isExternal: false
  name: IsSealed
  nameWithType: Type.IsSealed
- uid: System.Type.IsSecurityCritical*
  parent: System.Type
  isExternal: false
  name: IsSecurityCritical
  nameWithType: Type.IsSecurityCritical
- uid: System.Type.IsSecuritySafeCritical*
  parent: System.Type
  isExternal: false
  name: IsSecuritySafeCritical
  nameWithType: Type.IsSecuritySafeCritical
- uid: System.Type.IsSecurityTransparent*
  parent: System.Type
  isExternal: false
  name: IsSecurityTransparent
  nameWithType: Type.IsSecurityTransparent
- uid: System.Type.IsSerializable*
  parent: System.Type
  isExternal: false
  name: IsSerializable
  nameWithType: Type.IsSerializable
- uid: System.Type.IsSpecialName*
  parent: System.Type
  isExternal: false
  name: IsSpecialName
  nameWithType: Type.IsSpecialName
- uid: System.Type.IsSubclassOf*
  parent: System.Type
  isExternal: false
  name: IsSubclassOf
  nameWithType: Type.IsSubclassOf
- uid: System.Type.IsUnicodeClass*
  parent: System.Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: Type.IsUnicodeClass
- uid: System.Type.IsValueType*
  parent: System.Type
  isExternal: false
  name: IsValueType
  nameWithType: Type.IsValueType
- uid: System.Type.IsValueTypeImpl*
  parent: System.Type
  isExternal: false
  name: IsValueTypeImpl
  nameWithType: Type.IsValueTypeImpl
- uid: System.Type.IsVisible*
  parent: System.Type
  isExternal: false
  name: IsVisible
  nameWithType: Type.IsVisible
- uid: System.Type.MakeArrayType*
  parent: System.Type
  isExternal: false
  name: MakeArrayType
  nameWithType: Type.MakeArrayType
- uid: System.Type.MakeByRefType*
  parent: System.Type
  isExternal: false
  name: MakeByRefType
  nameWithType: Type.MakeByRefType
- uid: System.Type.MakeGenericType*
  parent: System.Type
  isExternal: false
  name: MakeGenericType
  nameWithType: Type.MakeGenericType
- uid: System.Type.MakePointerType*
  parent: System.Type
  isExternal: false
  name: MakePointerType
  nameWithType: Type.MakePointerType
- uid: System.Type.MemberType*
  parent: System.Type
  isExternal: false
  name: MemberType
  nameWithType: Type.MemberType
- uid: System.Type.Module*
  parent: System.Type
  isExternal: false
  name: Module
  nameWithType: Type.Module
- uid: System.Type.Namespace*
  parent: System.Type
  isExternal: false
  name: Namespace
  nameWithType: Type.Namespace
- uid: System.Type.op_Equality*
  parent: System.Type
  isExternal: false
  name: op_Equality
  nameWithType: Type.op_Equality
- uid: System.Type.op_Inequality*
  parent: System.Type
  isExternal: false
  name: op_Inequality
  nameWithType: Type.op_Inequality
- uid: System.Type.ReflectedType*
  parent: System.Type
  isExternal: false
  name: ReflectedType
  nameWithType: Type.ReflectedType
- uid: System.Type.ReflectionOnlyGetType*
  parent: System.Type
  isExternal: false
  name: ReflectionOnlyGetType
  nameWithType: Type.ReflectionOnlyGetType
- uid: System.Type.StructLayoutAttribute*
  parent: System.Type
  isExternal: false
  name: StructLayoutAttribute
  nameWithType: Type.StructLayoutAttribute
- uid: System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames*
  parent: System.Type
  isExternal: false
  name: System.Runtime.InteropServices._Type.GetIDsOfNames
  nameWithType: Type.System.Runtime.InteropServices._Type.GetIDsOfNames
- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo*
  parent: System.Type
  isExternal: false
  name: System.Runtime.InteropServices._Type.GetTypeInfo
  nameWithType: Type.System.Runtime.InteropServices._Type.GetTypeInfo
- uid: System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount*
  parent: System.Type
  isExternal: false
  name: System.Runtime.InteropServices._Type.GetTypeInfoCount
  nameWithType: Type.System.Runtime.InteropServices._Type.GetTypeInfoCount
- uid: System.Type.System#Runtime#InteropServices#_Type#Invoke*
  parent: System.Type
  isExternal: false
  name: System.Runtime.InteropServices._Type.Invoke
  nameWithType: Type.System.Runtime.InteropServices._Type.Invoke
- uid: System.Type.ToString*
  parent: System.Type
  isExternal: false
  name: ToString
  nameWithType: Type.ToString
- uid: System.Type.TypeHandle*
  parent: System.Type
  isExternal: false
  name: TypeHandle
  nameWithType: Type.TypeHandle
- uid: System.Type.TypeInitializer*
  parent: System.Type
  isExternal: false
  name: TypeInitializer
  nameWithType: Type.TypeInitializer
- uid: System.Type.UnderlyingSystemType*
  parent: System.Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: Type.UnderlyingSystemType
