### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.ICollection`1
  id: ICollection`1
  children:
  - System.Collections.Generic.ICollection`1.Add(`0)
  - System.Collections.Generic.ICollection`1.Clear
  - System.Collections.Generic.ICollection`1.Contains(`0)
  - System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.ICollection`1.Count
  - System.Collections.Generic.ICollection`1.IsReadOnly
  - System.Collections.Generic.ICollection`1.Remove(`0)
  langs:
  - csharp
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  type: Interface
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public interface ICollection<T> : System.Collections.Generic.IEnumerable<T>'
    typeParameters:
    - id: T
      description: To be added.
  implements:
  - System.Collections.Generic.IEnumerable<T>
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  id: Add(`0)
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Add (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.ICollection`1.Clear
  id: Clear
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  name: CopyTo(T[],Int32)
  nameWithType: ICollection<T>.CopyTo(T[],Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void CopyTo (T[] array, int arrayIndex);
    parameters:
    - id: array
      type: T[]
      description: To be added.
    - id: arrayIndex
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.ICollection`1.Count
  id: Count
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.ICollection`1.Clear
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: CopyTo(T[],Int32)
  nameWithType: ICollection<T>.CopyTo(T[],Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[],Int32)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
