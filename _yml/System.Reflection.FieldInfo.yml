### YamlMime:ManagedReference
items:
- uid: System.Reflection.FieldInfo
  id: FieldInfo
  children:
  - System.Reflection.FieldInfo.#ctor
  - System.Reflection.FieldInfo.Attributes
  - System.Reflection.FieldInfo.Equals(System.Object)
  - System.Reflection.FieldInfo.FieldHandle
  - System.Reflection.FieldInfo.FieldType
  - System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)
  - System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)
  - System.Reflection.FieldInfo.GetHashCode
  - System.Reflection.FieldInfo.GetOptionalCustomModifiers
  - System.Reflection.FieldInfo.GetRawConstantValue
  - System.Reflection.FieldInfo.GetRequiredCustomModifiers
  - System.Reflection.FieldInfo.GetValue(System.Object)
  - System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)
  - System.Reflection.FieldInfo.IsAssembly
  - System.Reflection.FieldInfo.IsFamily
  - System.Reflection.FieldInfo.IsFamilyAndAssembly
  - System.Reflection.FieldInfo.IsFamilyOrAssembly
  - System.Reflection.FieldInfo.IsInitOnly
  - System.Reflection.FieldInfo.IsLiteral
  - System.Reflection.FieldInfo.IsNotSerialized
  - System.Reflection.FieldInfo.IsPinvokeImpl
  - System.Reflection.FieldInfo.IsPrivate
  - System.Reflection.FieldInfo.IsPublic
  - System.Reflection.FieldInfo.IsSecurityCritical
  - System.Reflection.FieldInfo.IsSecuritySafeCritical
  - System.Reflection.FieldInfo.IsSecurityTransparent
  - System.Reflection.FieldInfo.IsSpecialName
  - System.Reflection.FieldInfo.IsStatic
  - System.Reflection.FieldInfo.MemberType
  - System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)
  - System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)
  - System.Reflection.FieldInfo.SetValue(System.Object,System.Object)
  - System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  - System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._FieldInfo))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class FieldInfo : System.Reflection.MemberInfo, System.Runtime.InteropServices._FieldInfo
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  implements:
  - System.Runtime.InteropServices._FieldInfo
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.DeclaringType
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.Module
  - System.Reflection.MemberInfo.Name
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.ReflectedType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.#ctor
  id: '#ctor'
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: FieldInfo()
  nameWithType: FieldInfo.FieldInfo()
  fullName: System.Reflection.FieldInfo.FieldInfo()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected FieldInfo ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.Attributes
  id: Attributes
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: FieldInfo.Attributes
  fullName: System.Reflection.FieldInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.FieldAttributes Attributes { get; }
    return:
      type: System.Reflection.FieldAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FieldInfo.Equals(Object)
  fullName: System.Reflection.FieldInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.FieldHandle
  id: FieldHandle
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: FieldHandle
  nameWithType: FieldInfo.FieldHandle
  fullName: System.Reflection.FieldInfo.FieldHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract RuntimeFieldHandle FieldHandle { get; }
    return:
      type: System.RuntimeFieldHandle
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.FieldType
  id: FieldType
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: FieldType
  nameWithType: FieldInfo.FieldType
  fullName: System.Reflection.FieldInfo.FieldType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract Type FieldType { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)
  id: GetFieldFromHandle(System.RuntimeFieldHandle)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: GetFieldFromHandle(RuntimeFieldHandle)
  nameWithType: FieldInfo.GetFieldFromHandle(RuntimeFieldHandle)
  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(RuntimeFieldHandle)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.FieldInfo GetFieldFromHandle (RuntimeFieldHandle handle);
    parameters:
    - id: handle
      type: System.RuntimeFieldHandle
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.FieldInfo.GetFieldFromHandle*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)
  id: GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)
  nameWithType: FieldInfo.GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)
  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.FieldInfo GetFieldFromHandle (RuntimeFieldHandle handle, RuntimeTypeHandle declaringType);
    parameters:
    - id: handle
      type: System.RuntimeFieldHandle
      description: To be added.
    - id: declaringType
      type: System.RuntimeTypeHandle
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.FieldInfo.GetFieldFromHandle*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.GetHashCode
  id: GetHashCode
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FieldInfo.GetHashCode()
  fullName: System.Reflection.FieldInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.GetOptionalCustomModifiers
  id: GetOptionalCustomModifiers
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: GetOptionalCustomModifiers()
  nameWithType: FieldInfo.GetOptionalCustomModifiers()
  fullName: System.Reflection.FieldInfo.GetOptionalCustomModifiers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GetOptionalCustomModifiers ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.GetRawConstantValue
  id: GetRawConstantValue
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: GetRawConstantValue()
  nameWithType: FieldInfo.GetRawConstantValue()
  fullName: System.Reflection.FieldInfo.GetRawConstantValue()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual object GetRawConstantValue ();
    parameters: []
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.GetRequiredCustomModifiers
  id: GetRequiredCustomModifiers
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: GetRequiredCustomModifiers()
  nameWithType: FieldInfo.GetRequiredCustomModifiers()
  fullName: System.Reflection.FieldInfo.GetRequiredCustomModifiers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GetRequiredCustomModifiers ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: FieldInfo.GetValue(Object)
  fullName: System.Reflection.FieldInfo.GetValue(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract object GetValue (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)
  id: GetValueDirect(System.TypedReference)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: GetValueDirect(TypedReference)
  nameWithType: FieldInfo.GetValueDirect(TypedReference)
  fullName: System.Reflection.FieldInfo.GetValueDirect(TypedReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual object GetValueDirect (TypedReference obj);
    parameters:
    - id: obj
      type: System.TypedReference
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsAssembly
  id: IsAssembly
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsAssembly
  nameWithType: FieldInfo.IsAssembly
  fullName: System.Reflection.FieldInfo.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsFamily
  id: IsFamily
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsFamily
  nameWithType: FieldInfo.IsFamily
  fullName: System.Reflection.FieldInfo.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: FieldInfo.IsFamilyAndAssembly
  fullName: System.Reflection.FieldInfo.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: FieldInfo.IsFamilyOrAssembly
  fullName: System.Reflection.FieldInfo.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsInitOnly
  id: IsInitOnly
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsInitOnly
  nameWithType: FieldInfo.IsInitOnly
  fullName: System.Reflection.FieldInfo.IsInitOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsInitOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsLiteral
  id: IsLiteral
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsLiteral
  nameWithType: FieldInfo.IsLiteral
  fullName: System.Reflection.FieldInfo.IsLiteral
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsLiteral { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsNotSerialized
  id: IsNotSerialized
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsNotSerialized
  nameWithType: FieldInfo.IsNotSerialized
  fullName: System.Reflection.FieldInfo.IsNotSerialized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsNotSerialized { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsPinvokeImpl
  id: IsPinvokeImpl
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsPinvokeImpl
  nameWithType: FieldInfo.IsPinvokeImpl
  fullName: System.Reflection.FieldInfo.IsPinvokeImpl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsPinvokeImpl { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsPrivate
  id: IsPrivate
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsPrivate
  nameWithType: FieldInfo.IsPrivate
  fullName: System.Reflection.FieldInfo.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsPublic
  id: IsPublic
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: FieldInfo.IsPublic
  fullName: System.Reflection.FieldInfo.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsSecurityCritical
  id: IsSecurityCritical
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsSecurityCritical
  nameWithType: FieldInfo.IsSecurityCritical
  fullName: System.Reflection.FieldInfo.IsSecurityCritical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsSecurityCritical { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsSecuritySafeCritical
  id: IsSecuritySafeCritical
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsSecuritySafeCritical
  nameWithType: FieldInfo.IsSecuritySafeCritical
  fullName: System.Reflection.FieldInfo.IsSecuritySafeCritical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsSecuritySafeCritical { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsSecurityTransparent
  id: IsSecurityTransparent
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsSecurityTransparent
  nameWithType: FieldInfo.IsSecurityTransparent
  fullName: System.Reflection.FieldInfo.IsSecurityTransparent
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsSecurityTransparent { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: FieldInfo.IsSpecialName
  fullName: System.Reflection.FieldInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.IsStatic
  id: IsStatic
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: IsStatic
  nameWithType: FieldInfo.IsStatic
  fullName: System.Reflection.FieldInfo.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.MemberType
  id: MemberType
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: FieldInfo.MemberType
  fullName: System.Reflection.FieldInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)
  id: op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: op_Equality(FieldInfo,FieldInfo)
  nameWithType: FieldInfo.op_Equality(FieldInfo,FieldInfo)
  fullName: System.Reflection.FieldInfo.op_Equality(FieldInfo,FieldInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Reflection.FieldInfo left, System.Reflection.FieldInfo right);
    parameters:
    - id: left
      type: System.Reflection.FieldInfo
      description: To be added.
    - id: right
      type: System.Reflection.FieldInfo
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)
  id: op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: op_Inequality(FieldInfo,FieldInfo)
  nameWithType: FieldInfo.op_Inequality(FieldInfo,FieldInfo)
  fullName: System.Reflection.FieldInfo.op_Inequality(FieldInfo,FieldInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Reflection.FieldInfo left, System.Reflection.FieldInfo right);
    parameters:
    - id: left
      type: System.Reflection.FieldInfo
      description: To be added.
    - id: right
      type: System.Reflection.FieldInfo
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: FieldInfo.SetValue(Object,Object)
  fullName: System.Reflection.FieldInfo.SetValue(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetValue (object obj, object value);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
  overload: System.Reflection.FieldInfo.SetValue*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  nameWithType: FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  fullName: System.Reflection.FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
  overload: System.Reflection.FieldInfo.SetValue*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)
  id: SetValueDirect(System.TypedReference,System.Object)
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: SetValueDirect(TypedReference,Object)
  nameWithType: FieldInfo.SetValueDirect(TypedReference,Object)
  fullName: System.Reflection.FieldInfo.SetValueDirect(TypedReference,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void SetValueDirect (TypedReference obj, object value);
    parameters:
    - id: obj
      type: System.TypedReference
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _FieldInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType
  id: System#Runtime#InteropServices#_FieldInfo#GetType
  isEii: true
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: System.Runtime.InteropServices._FieldInfo.GetType()
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: Type _FieldInfo.GetType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _FieldInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _FieldInfo.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.FieldInfo
  langs:
  - csharp
  name: System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _FieldInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Reflection.MemberInfo
  isExternal: false
  name: System.Reflection.MemberInfo
- uid: System.Reflection.FieldInfo.#ctor
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: FieldInfo()
  nameWithType: FieldInfo.FieldInfo()
  fullName: System.Reflection.FieldInfo.FieldInfo()
- uid: System.Reflection.FieldInfo.Attributes
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: Attributes
  nameWithType: FieldInfo.Attributes
  fullName: System.Reflection.FieldInfo.Attributes
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.FieldInfo.Equals(System.Object)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: FieldInfo.Equals(Object)
  fullName: System.Reflection.FieldInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.FieldInfo.FieldHandle
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: FieldHandle
  nameWithType: FieldInfo.FieldHandle
  fullName: System.Reflection.FieldInfo.FieldHandle
- uid: System.RuntimeFieldHandle
  parent: System
  isExternal: false
  name: RuntimeFieldHandle
  nameWithType: RuntimeFieldHandle
  fullName: System.RuntimeFieldHandle
- uid: System.Reflection.FieldInfo.FieldType
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: FieldType
  nameWithType: FieldInfo.FieldType
  fullName: System.Reflection.FieldInfo.FieldType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetFieldFromHandle(RuntimeFieldHandle)
  nameWithType: FieldInfo.GetFieldFromHandle(RuntimeFieldHandle)
  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(RuntimeFieldHandle)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.RuntimeFieldHandle
  parent: System
  isExternal: false
  name: RuntimeFieldHandle
  nameWithType: RuntimeFieldHandle
  fullName: System.RuntimeFieldHandle
- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)
  nameWithType: FieldInfo.GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)
  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.RuntimeFieldHandle
  parent: System
  isExternal: false
  name: RuntimeFieldHandle
  nameWithType: RuntimeFieldHandle
  fullName: System.RuntimeFieldHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Reflection.FieldInfo.GetHashCode
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: FieldInfo.GetHashCode()
  fullName: System.Reflection.FieldInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.FieldInfo.GetOptionalCustomModifiers
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetOptionalCustomModifiers()
  nameWithType: FieldInfo.GetOptionalCustomModifiers()
  fullName: System.Reflection.FieldInfo.GetOptionalCustomModifiers()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.FieldInfo.GetRawConstantValue
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetRawConstantValue()
  nameWithType: FieldInfo.GetRawConstantValue()
  fullName: System.Reflection.FieldInfo.GetRawConstantValue()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.FieldInfo.GetRequiredCustomModifiers
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetRequiredCustomModifiers()
  nameWithType: FieldInfo.GetRequiredCustomModifiers()
  fullName: System.Reflection.FieldInfo.GetRequiredCustomModifiers()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.FieldInfo.GetValue(System.Object)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetValue(Object)
  nameWithType: FieldInfo.GetValue(Object)
  fullName: System.Reflection.FieldInfo.GetValue(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetValueDirect(TypedReference)
  nameWithType: FieldInfo.GetValueDirect(TypedReference)
  fullName: System.Reflection.FieldInfo.GetValueDirect(TypedReference)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TypedReference
  parent: System
  isExternal: false
  name: TypedReference
  nameWithType: TypedReference
  fullName: System.TypedReference
- uid: System.Reflection.FieldInfo.IsAssembly
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsAssembly
  nameWithType: FieldInfo.IsAssembly
  fullName: System.Reflection.FieldInfo.IsAssembly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsFamily
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsFamily
  nameWithType: FieldInfo.IsFamily
  fullName: System.Reflection.FieldInfo.IsFamily
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsFamilyAndAssembly
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: FieldInfo.IsFamilyAndAssembly
  fullName: System.Reflection.FieldInfo.IsFamilyAndAssembly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsFamilyOrAssembly
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: FieldInfo.IsFamilyOrAssembly
  fullName: System.Reflection.FieldInfo.IsFamilyOrAssembly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsInitOnly
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsInitOnly
  nameWithType: FieldInfo.IsInitOnly
  fullName: System.Reflection.FieldInfo.IsInitOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsLiteral
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsLiteral
  nameWithType: FieldInfo.IsLiteral
  fullName: System.Reflection.FieldInfo.IsLiteral
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsNotSerialized
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsNotSerialized
  nameWithType: FieldInfo.IsNotSerialized
  fullName: System.Reflection.FieldInfo.IsNotSerialized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsPinvokeImpl
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsPinvokeImpl
  nameWithType: FieldInfo.IsPinvokeImpl
  fullName: System.Reflection.FieldInfo.IsPinvokeImpl
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsPrivate
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsPrivate
  nameWithType: FieldInfo.IsPrivate
  fullName: System.Reflection.FieldInfo.IsPrivate
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsPublic
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsPublic
  nameWithType: FieldInfo.IsPublic
  fullName: System.Reflection.FieldInfo.IsPublic
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsSecurityCritical
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsSecurityCritical
  nameWithType: FieldInfo.IsSecurityCritical
  fullName: System.Reflection.FieldInfo.IsSecurityCritical
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsSecuritySafeCritical
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsSecuritySafeCritical
  nameWithType: FieldInfo.IsSecuritySafeCritical
  fullName: System.Reflection.FieldInfo.IsSecuritySafeCritical
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsSecurityTransparent
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsSecurityTransparent
  nameWithType: FieldInfo.IsSecurityTransparent
  fullName: System.Reflection.FieldInfo.IsSecurityTransparent
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsSpecialName
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: FieldInfo.IsSpecialName
  fullName: System.Reflection.FieldInfo.IsSpecialName
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.IsStatic
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: IsStatic
  nameWithType: FieldInfo.IsStatic
  fullName: System.Reflection.FieldInfo.IsStatic
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo.MemberType
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: MemberType
  nameWithType: FieldInfo.MemberType
  fullName: System.Reflection.FieldInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: op_Equality(FieldInfo,FieldInfo)
  nameWithType: FieldInfo.op_Equality(FieldInfo,FieldInfo)
  fullName: System.Reflection.FieldInfo.op_Equality(FieldInfo,FieldInfo)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: op_Inequality(FieldInfo,FieldInfo)
  nameWithType: FieldInfo.op_Inequality(FieldInfo,FieldInfo)
  fullName: System.Reflection.FieldInfo.op_Inequality(FieldInfo,FieldInfo)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: FieldInfo.SetValue(Object,Object)
  fullName: System.Reflection.FieldInfo.SetValue(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  nameWithType: FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  fullName: System.Reflection.FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: SetValueDirect(TypedReference,Object)
  nameWithType: FieldInfo.SetValueDirect(TypedReference,Object)
  fullName: System.Reflection.FieldInfo.SetValueDirect(TypedReference,Object)
- uid: System.TypedReference
  parent: System
  isExternal: false
  name: TypedReference
  nameWithType: TypedReference
  fullName: System.TypedReference
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: System.Runtime.InteropServices._FieldInfo.GetType()
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.FieldInfo.GetFieldFromHandle*
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: GetFieldFromHandle
  nameWithType: FieldInfo.GetFieldFromHandle
- uid: System.Reflection.FieldInfo.SetValue*
  parent: System.Reflection.FieldInfo
  isExternal: false
  name: SetValue
  nameWithType: FieldInfo.SetValue
