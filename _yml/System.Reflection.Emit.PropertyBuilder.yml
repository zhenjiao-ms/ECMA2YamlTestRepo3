### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.PropertyBuilder
  id: PropertyBuilder
  children:
  - System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.PropertyBuilder.Attributes
  - System.Reflection.Emit.PropertyBuilder.CanRead
  - System.Reflection.Emit.PropertyBuilder.CanWrite
  - System.Reflection.Emit.PropertyBuilder.DeclaringType
  - System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  - System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])
  - System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.Module
  - System.Reflection.Emit.PropertyBuilder.Name
  - System.Reflection.Emit.PropertyBuilder.PropertyToken
  - System.Reflection.Emit.PropertyBuilder.PropertyType
  - System.Reflection.Emit.PropertyBuilder.ReflectedType
  - System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)
  - System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])
  - System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: System.Reflection.Emit.PropertyBuilder
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyBuilder))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PropertyBuilder : System.Reflection.PropertyInfo, System.Runtime.InteropServices._PropertyBuilder
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.PropertyInfo
  implements:
  - System.Runtime.InteropServices._PropertyBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.PropertyInfo.Equals(System.Object)
  - System.Reflection.PropertyInfo.GetAccessors
  - System.Reflection.PropertyInfo.GetConstantValue
  - System.Reflection.PropertyInfo.GetGetMethod
  - System.Reflection.PropertyInfo.GetHashCode
  - System.Reflection.PropertyInfo.GetMethod
  - System.Reflection.PropertyInfo.GetOptionalCustomModifiers
  - System.Reflection.PropertyInfo.GetRawConstantValue
  - System.Reflection.PropertyInfo.GetRequiredCustomModifiers
  - System.Reflection.PropertyInfo.GetSetMethod
  - System.Reflection.PropertyInfo.GetValue(System.Object)
  - System.Reflection.PropertyInfo.IsSpecialName
  - System.Reflection.PropertyInfo.MemberType
  - System.Reflection.PropertyInfo.op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfo.op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfo.SetMethod
  - System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetType
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  id: AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: AddOtherMethod(MethodBuilder)
  nameWithType: PropertyBuilder.AddOtherMethod(MethodBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.AddOtherMethod(MethodBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void AddOtherMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.AddOtherMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: Attributes
  nameWithType: PropertyBuilder.Attributes
  fullName: System.Reflection.Emit.PropertyBuilder.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.PropertyAttributes Attributes { get; }
    return:
      type: System.Reflection.PropertyAttributes
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.Attributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.CanRead
  id: CanRead
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: CanRead
  nameWithType: PropertyBuilder.CanRead
  fullName: System.Reflection.Emit.PropertyBuilder.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.CanRead*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.CanWrite
  id: CanWrite
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: CanWrite
  nameWithType: PropertyBuilder.CanWrite
  fullName: System.Reflection.Emit.PropertyBuilder.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.CanWrite*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: DeclaringType
  nameWithType: PropertyBuilder.DeclaringType
  fullName: System.Reflection.Emit.PropertyBuilder.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.DeclaringType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetAccessors(Boolean)
  nameWithType: PropertyBuilder.GetAccessors(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetAccessors(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: To be added.
    return:
      type: System.Reflection.MethodInfo[]
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.GetAccessors*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetGetMethod(Boolean)
  nameWithType: PropertyBuilder.GetGetMethod(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetGetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MethodInfo GetGetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.GetGetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  id: GetIndexParameters
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetIndexParameters()
  nameWithType: PropertyBuilder.GetIndexParameters()
  fullName: System.Reflection.Emit.PropertyBuilder.GetIndexParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.ParameterInfo[] GetIndexParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.GetIndexParameters*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetSetMethod(Boolean)
  nameWithType: PropertyBuilder.GetSetMethod(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetSetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MethodInfo GetSetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.GetSetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetValue(Object,Object[])
  nameWithType: PropertyBuilder.GetValue(Object,Object[])
  fullName: System.Reflection.Emit.PropertyBuilder.GetValue(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object GetValue (object obj, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    - id: index
      type: System.Object[]
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.GetValue*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: PropertyBuilder.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Reflection.Emit.PropertyBuilder.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: index
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.GetValue*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: PropertyBuilder.IsDefined(Type,Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.IsDefined*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.Module
  id: Module
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: Module
  nameWithType: PropertyBuilder.Module
  fullName: System.Reflection.Emit.PropertyBuilder.Module
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.Module*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.Name
  id: Name
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: Name
  nameWithType: PropertyBuilder.Name
  fullName: System.Reflection.Emit.PropertyBuilder.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.Name*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.PropertyToken
  id: PropertyToken
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: PropertyToken
  nameWithType: PropertyBuilder.PropertyToken
  fullName: System.Reflection.Emit.PropertyBuilder.PropertyToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.PropertyToken PropertyToken { get; }
    return:
      type: System.Reflection.Emit.PropertyToken
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.PropertyToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.PropertyType
  id: PropertyType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: PropertyType
  nameWithType: PropertyBuilder.PropertyType
  fullName: System.Reflection.Emit.PropertyBuilder.PropertyType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type PropertyType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.PropertyType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: ReflectedType
  nameWithType: PropertyBuilder.ReflectedType
  fullName: System.Reflection.Emit.PropertyBuilder.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.ReflectedType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)
  id: SetConstant(System.Object)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetConstant(Object)
  nameWithType: PropertyBuilder.SetConstant(Object)
  fullName: System.Reflection.Emit.PropertyBuilder.SetConstant(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetConstant (object defaultValue);
    parameters:
    - id: defaultValue
      type: System.Object
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.SetConstant*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: PropertyBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: PropertyBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: To be added.
    - id: binaryAttribute
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  id: SetGetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetGetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetGetMethod(MethodBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.SetGetMethod(MethodBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetGetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.SetGetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  id: SetSetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetSetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetSetMethod(MethodBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.SetSetMethod(MethodBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetSetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.SetSetMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetValue(Object,Object,Object[])
  nameWithType: PropertyBuilder.SetValue(Object,Object,Object[])
  fullName: System.Reflection.Emit.PropertyBuilder.SetValue(Object,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void SetValue (object obj, object value, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
    - id: index
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.SetValue*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: PropertyBuilder.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Reflection.Emit.PropertyBuilder.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: index
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.SetValue*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _PropertyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _PropertyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(UInt32)
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _PropertyBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._PropertyBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _PropertyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Reflection.PropertyInfo
  isExternal: false
  name: System.Reflection.PropertyInfo
- uid: System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: AddOtherMethod(MethodBuilder)
  nameWithType: PropertyBuilder.AddOtherMethod(MethodBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.AddOtherMethod(MethodBuilder)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.Emit.PropertyBuilder.Attributes
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Attributes
  nameWithType: PropertyBuilder.Attributes
  fullName: System.Reflection.Emit.PropertyBuilder.Attributes
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Reflection.Emit.PropertyBuilder.CanRead
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: CanRead
  nameWithType: PropertyBuilder.CanRead
  fullName: System.Reflection.Emit.PropertyBuilder.CanRead
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.PropertyBuilder.CanWrite
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: CanWrite
  nameWithType: PropertyBuilder.CanWrite
  fullName: System.Reflection.Emit.PropertyBuilder.CanWrite
- uid: System.Reflection.Emit.PropertyBuilder.DeclaringType
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: PropertyBuilder.DeclaringType
  fullName: System.Reflection.Emit.PropertyBuilder.DeclaringType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetAccessors(Boolean)
  nameWithType: PropertyBuilder.GetAccessors(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetAccessors(Boolean)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(Type,Boolean)
- uid: System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetGetMethod(Boolean)
  nameWithType: PropertyBuilder.GetGetMethod(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetGetMethod(Boolean)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetIndexParameters()
  nameWithType: PropertyBuilder.GetIndexParameters()
  fullName: System.Reflection.Emit.PropertyBuilder.GetIndexParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetSetMethod(Boolean)
  nameWithType: PropertyBuilder.GetSetMethod(Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.GetSetMethod(Boolean)
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetValue(Object,Object[])
  nameWithType: PropertyBuilder.GetValue(Object,Object[])
  fullName: System.Reflection.Emit.PropertyBuilder.GetValue(Object,Object[])
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: PropertyBuilder.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Reflection.Emit.PropertyBuilder.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: PropertyBuilder.IsDefined(Type,Boolean)
  fullName: System.Reflection.Emit.PropertyBuilder.IsDefined(Type,Boolean)
- uid: System.Reflection.Emit.PropertyBuilder.Module
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Module
  nameWithType: PropertyBuilder.Module
  fullName: System.Reflection.Emit.PropertyBuilder.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.PropertyBuilder.Name
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Name
  nameWithType: PropertyBuilder.Name
  fullName: System.Reflection.Emit.PropertyBuilder.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.PropertyBuilder.PropertyToken
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyToken
  nameWithType: PropertyBuilder.PropertyToken
  fullName: System.Reflection.Emit.PropertyBuilder.PropertyToken
- uid: System.Reflection.Emit.PropertyToken
  parent: System.Reflection.Emit
  isExternal: false
  name: PropertyToken
  nameWithType: PropertyToken
  fullName: System.Reflection.Emit.PropertyToken
- uid: System.Reflection.Emit.PropertyBuilder.PropertyType
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyType
  nameWithType: PropertyBuilder.PropertyType
  fullName: System.Reflection.Emit.PropertyBuilder.PropertyType
- uid: System.Reflection.Emit.PropertyBuilder.ReflectedType
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: PropertyBuilder.ReflectedType
  fullName: System.Reflection.Emit.PropertyBuilder.ReflectedType
- uid: System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetConstant(Object)
  nameWithType: PropertyBuilder.SetConstant(Object)
  fullName: System.Reflection.Emit.PropertyBuilder.SetConstant(Object)
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: PropertyBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: PropertyBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetGetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetGetMethod(MethodBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.SetGetMethod(MethodBuilder)
- uid: System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetSetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetSetMethod(MethodBuilder)
  fullName: System.Reflection.Emit.PropertyBuilder.SetSetMethod(MethodBuilder)
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetValue(Object,Object,Object[])
  nameWithType: PropertyBuilder.SetValue(Object,Object,Object[])
  fullName: System.Reflection.Emit.PropertyBuilder.SetValue(Object,Object,Object[])
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: PropertyBuilder.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Reflection.Emit.PropertyBuilder.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(UInt32)
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.PropertyBuilder.AddOtherMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: AddOtherMethod
  nameWithType: PropertyBuilder.AddOtherMethod
- uid: System.Reflection.Emit.PropertyBuilder.Attributes*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Attributes
  nameWithType: PropertyBuilder.Attributes
- uid: System.Reflection.Emit.PropertyBuilder.CanRead*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: CanRead
  nameWithType: PropertyBuilder.CanRead
- uid: System.Reflection.Emit.PropertyBuilder.CanWrite*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: CanWrite
  nameWithType: PropertyBuilder.CanWrite
- uid: System.Reflection.Emit.PropertyBuilder.DeclaringType*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: PropertyBuilder.DeclaringType
- uid: System.Reflection.Emit.PropertyBuilder.GetAccessors*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetAccessors
  nameWithType: PropertyBuilder.GetAccessors
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetCustomAttributes
  nameWithType: PropertyBuilder.GetCustomAttributes
- uid: System.Reflection.Emit.PropertyBuilder.GetGetMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetGetMethod
  nameWithType: PropertyBuilder.GetGetMethod
- uid: System.Reflection.Emit.PropertyBuilder.GetIndexParameters*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetIndexParameters
  nameWithType: PropertyBuilder.GetIndexParameters
- uid: System.Reflection.Emit.PropertyBuilder.GetSetMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetSetMethod
  nameWithType: PropertyBuilder.GetSetMethod
- uid: System.Reflection.Emit.PropertyBuilder.GetValue*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetValue
  nameWithType: PropertyBuilder.GetValue
- uid: System.Reflection.Emit.PropertyBuilder.IsDefined*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: IsDefined
  nameWithType: PropertyBuilder.IsDefined
- uid: System.Reflection.Emit.PropertyBuilder.Module*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Module
  nameWithType: PropertyBuilder.Module
- uid: System.Reflection.Emit.PropertyBuilder.Name*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Name
  nameWithType: PropertyBuilder.Name
- uid: System.Reflection.Emit.PropertyBuilder.PropertyToken*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyToken
  nameWithType: PropertyBuilder.PropertyToken
- uid: System.Reflection.Emit.PropertyBuilder.PropertyType*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyType
  nameWithType: PropertyBuilder.PropertyType
- uid: System.Reflection.Emit.PropertyBuilder.ReflectedType*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: PropertyBuilder.ReflectedType
- uid: System.Reflection.Emit.PropertyBuilder.SetConstant*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetConstant
  nameWithType: PropertyBuilder.SetConstant
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetCustomAttribute
  nameWithType: PropertyBuilder.SetCustomAttribute
- uid: System.Reflection.Emit.PropertyBuilder.SetGetMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetGetMethod
  nameWithType: PropertyBuilder.SetGetMethod
- uid: System.Reflection.Emit.PropertyBuilder.SetSetMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetSetMethod
  nameWithType: PropertyBuilder.SetSetMethod
- uid: System.Reflection.Emit.PropertyBuilder.SetValue*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetValue
  nameWithType: PropertyBuilder.SetValue
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.Invoke
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.Invoke
