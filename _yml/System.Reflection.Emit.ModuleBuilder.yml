### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.ModuleBuilder
  id: ModuleBuilder
  children:
  - System.Reflection.Emit.ModuleBuilder.Assembly
  - System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions
  - System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)
  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  - System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)
  - System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  - System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  - System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)
  - System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  - System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  - System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])
  - System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)
  - System.Reflection.Emit.ModuleBuilder.Equals(System.Object)
  - System.Reflection.Emit.ModuleBuilder.FullyQualifiedName
  - System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)
  - System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})
  - System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData
  - System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)
  - System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)
  - System.Reflection.Emit.ModuleBuilder.GetHashCode
  - System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)
  - System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)
  - System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})
  - System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)
  - System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)
  - System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)
  - System.Reflection.Emit.ModuleBuilder.GetSignerCertificate
  - System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)
  - System.Reflection.Emit.ModuleBuilder.GetSymWriter
  - System.Reflection.Emit.ModuleBuilder.GetType(System.String)
  - System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)
  - System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)
  - System.Reflection.Emit.ModuleBuilder.GetTypes
  - System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)
  - System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)
  - System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.ModuleBuilder.IsResource
  - System.Reflection.Emit.ModuleBuilder.IsTransient
  - System.Reflection.Emit.ModuleBuilder.MDStreamVersion
  - System.Reflection.Emit.ModuleBuilder.MetadataToken
  - System.Reflection.Emit.ModuleBuilder.ModuleVersionId
  - System.Reflection.Emit.ModuleBuilder.Name
  - System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])
  - System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])
  - System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])
  - System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)
  - System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)
  - System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])
  - System.Reflection.Emit.ModuleBuilder.ScopeName
  - System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  - System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)
  - System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: ModuleBuilder
  nameWithType: ModuleBuilder
  fullName: System.Reflection.Emit.ModuleBuilder
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ModuleBuilder))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class ModuleBuilder : System.Reflection.Module, System.Runtime.InteropServices._ModuleBuilder
  inheritance:
  - System.Object
  - System.Reflection.Module
  implements:
  - System.Runtime.InteropServices._ModuleBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Reflection.Module.CustomAttributes
  - System.Reflection.Module.FilterTypeName
  - System.Reflection.Module.FilterTypeNameIgnoreCase
  - System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)
  - System.Reflection.Module.GetField(System.String)
  - System.Reflection.Module.GetFields
  - System.Reflection.Module.GetMethod(System.String)
  - System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Module.GetMethod(System.String,System.Type[])
  - System.Reflection.Module.GetMethods
  - System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.Module.ModuleHandle
  - System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)
  - System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)
  - System.Reflection.Module.ResolveField(System.Int32)
  - System.Reflection.Module.ResolveMember(System.Int32)
  - System.Reflection.Module.ResolveMethod(System.Int32)
  - System.Reflection.Module.ResolveType(System.Int32)
  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.Module.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: Assembly
  nameWithType: ModuleBuilder.Assembly
  fullName: System.Reflection.Emit.ModuleBuilder.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.Assembly*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions
  id: CreateGlobalFunctions
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: CreateGlobalFunctions()
  nameWithType: ModuleBuilder.CreateGlobalFunctions()
  fullName: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void CreateGlobalFunctions ();
    parameters: []
  overload: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: ModuleBuilder.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: To be added.
    - id: language
      type: System.Guid
      description: To be added.
    - id: languageVendor
      type: System.Guid
      description: To be added.
    - id: documentType
      type: System.Guid
      description: To be added.
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineDocument*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)
  id: DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineEnum(String,TypeAttributes,Type)
  nameWithType: ModuleBuilder.DefineEnum(String,TypeAttributes,Type)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineEnum(String,TypeAttributes,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.EnumBuilder DefineEnum (string name, System.Reflection.TypeAttributes visibility, Type underlyingType);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: visibility
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: underlyingType
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.EnumBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineEnum*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineGlobalMethod(String,MethodAttributes,Type,Type[])
  nameWithType: ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  nameWithType: ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: requiredReturnTypeCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: optionalReturnTypeCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: requiredParameterTypeCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: optionalParameterTypeCustomModifiers
      type: System.Type[][]
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  id: DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineInitializedData(String,Byte[],FieldAttributes)
  nameWithType: ModuleBuilder.DefineInitializedData(String,Byte[],FieldAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(String,Byte[],FieldAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.FieldBuilder DefineInitializedData (string name, byte[] data, System.Reflection.FieldAttributes attributes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: data
      type: System.Byte[]
      description: To be added.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineInitializedData*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)
  id: DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineManifestResource(String,Stream,ResourceAttributes)
  nameWithType: ModuleBuilder.DefineManifestResource(String,Stream,ResourceAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineManifestResource(String,Stream,ResourceAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DefineManifestResource (string name, System.IO.Stream stream, System.Reflection.ResourceAttributes attribute);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: stream
      type: System.IO.Stream
      description: To be added.
    - id: attribute
      type: System.Reflection.ResourceAttributes
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineManifestResource*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  id: DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  nameWithType: ModuleBuilder.DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: dllName
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: nativeCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: To be added.
    - id: nativeCharSet
      type: System.Runtime.InteropServices.CharSet
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  id: DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  nameWithType: ModuleBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: dllName
      type: System.String
      description: To be added.
    - id: entryName
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: nativeCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: To be added.
    - id: nativeCharSet
      type: System.Runtime.InteropServices.CharSet
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)
  id: DefineResource(System.String,System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineResource(String,String)
  nameWithType: ModuleBuilder.DefineResource(String,String)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineResource(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Resources.IResourceWriter DefineResource (string name, string description);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: description
      type: System.String
      description: To be added.
    return:
      type: System.Resources.IResourceWriter
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineResource*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)
  id: DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineResource(String,String,ResourceAttributes)
  nameWithType: ModuleBuilder.DefineResource(String,String,ResourceAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineResource(String,String,ResourceAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Resources.IResourceWriter DefineResource (string name, string description, System.Reflection.ResourceAttributes attribute);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: description
      type: System.String
      description: To be added.
    - id: attribute
      type: System.Reflection.ResourceAttributes
      description: To be added.
    return:
      type: System.Resources.IResourceWriter
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineResource*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String)
  id: DefineType(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineType(String)
  nameWithType: ModuleBuilder.DefineType(String)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineType (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)
  id: DefineType(System.String,System.Reflection.TypeAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineType(String,TypeAttributes)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineType(String,TypeAttributes,Type)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineType(String,TypeAttributes,Type,Int32)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type,Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, int typesize);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    - id: typesize
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineType(String,TypeAttributes,Type,PackingSize)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type,PackingSize)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type,PackingSize)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packsize);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    - id: packsize
      type: System.Reflection.Emit.PackingSize
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineType(String,TypeAttributes,Type,Type[])
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, Type[] interfaces);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    - id: interfaces
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineType(String,TypeAttributes,Type,PackingSize,Int32)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type,PackingSize,Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type,PackingSize,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packingSize, int typesize);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    - id: packingSize
      type: System.Reflection.Emit.PackingSize
      description: To be added.
    - id: typesize
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  id: DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineUninitializedData(String,Int32,FieldAttributes)
  nameWithType: ModuleBuilder.DefineUninitializedData(String,Int32,FieldAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(String,Int32,FieldAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.FieldBuilder DefineUninitializedData (string name, int size, System.Reflection.FieldAttributes attributes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: size
      type: System.Int32
      description: To be added.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])
  id: DefineUnmanagedResource(System.Byte[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineUnmanagedResource(Byte[])
  nameWithType: ModuleBuilder.DefineUnmanagedResource(Byte[])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DefineUnmanagedResource (byte[] resource);
    parameters:
    - id: resource
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)
  id: DefineUnmanagedResource(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: DefineUnmanagedResource(String)
  nameWithType: ModuleBuilder.DefineUnmanagedResource(String)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DefineUnmanagedResource (string resourceFileName);
    parameters:
    - id: resourceFileName
      type: System.String
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ModuleBuilder.Equals(Object)
  fullName: System.Reflection.Emit.ModuleBuilder.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName
  id: FullyQualifiedName
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: FullyQualifiedName
  nameWithType: ModuleBuilder.FullyQualifiedName
  fullName: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string FullyQualifiedName { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetArrayMethod(Type,String,CallingConventions,Type,Type[])
  nameWithType: ModuleBuilder.GetArrayMethod(Type,String,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(Type,String,CallingConventions,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetArrayMethod (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);
    parameters:
    - id: arrayClass
      type: System.Type
      description: To be added.
    - id: methodName
      type: System.String
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetArrayMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetArrayMethodToken(Type,String,CallingConventions,Type,Type[])
  nameWithType: ModuleBuilder.GetArrayMethodToken(Type,String,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(Type,String,CallingConventions,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodToken GetArrayMethodToken (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);
    parameters:
    - id: arrayClass
      type: System.Type
      description: To be added.
    - id: methodName
      type: System.String
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)
  id: GetConstructorToken(System.Reflection.ConstructorInfo)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetConstructorToken(ConstructorInfo)
  nameWithType: ModuleBuilder.GetConstructorToken(ConstructorInfo)
  fullName: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(ConstructorInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo con);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetConstructorToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})
  id: GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetConstructorToken(ConstructorInfo,IEnumerable<Type>)
  nameWithType: ModuleBuilder.GetConstructorToken(ConstructorInfo,IEnumerable<Type>)
  fullName: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(ConstructorInfo,IEnumerable<Type>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable<Type> optionalParameterTypes);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: To be added.
    - id: optionalParameterTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetConstructorToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: ModuleBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: ModuleBuilder.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData
  id: GetCustomAttributesData
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetCustomAttributesData()
  nameWithType: ModuleBuilder.GetCustomAttributesData()
  fullName: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: ModuleBuilder.GetField(String,BindingFlags)
  fullName: System.Reflection.Emit.ModuleBuilder.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetField*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: ModuleBuilder.GetFields(BindingFlags)
  fullName: System.Reflection.Emit.ModuleBuilder.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.FieldInfo[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetFields*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)
  id: GetFieldToken(System.Reflection.FieldInfo)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetFieldToken(FieldInfo)
  nameWithType: ModuleBuilder.GetFieldToken(FieldInfo)
  fullName: System.Reflection.Emit.ModuleBuilder.GetFieldToken(FieldInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.FieldToken GetFieldToken (System.Reflection.FieldInfo field);
    parameters:
    - id: field
      type: System.Reflection.FieldInfo
      description: To be added.
    return:
      type: System.Reflection.Emit.FieldToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetFieldToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ModuleBuilder.GetHashCode()
  fullName: System.Reflection.Emit.ModuleBuilder.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: ModuleBuilder.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Emit.ModuleBuilder.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetMethodImpl*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: ModuleBuilder.GetMethods(BindingFlags)
  fullName: System.Reflection.Emit.ModuleBuilder.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MethodInfo[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetMethods*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)
  id: GetMethodToken(System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetMethodToken(MethodInfo)
  nameWithType: ModuleBuilder.GetMethodToken(MethodInfo)
  fullName: System.Reflection.Emit.ModuleBuilder.GetMethodToken(MethodInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetMethodToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})
  id: GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetMethodToken(MethodInfo,IEnumerable<Type>)
  nameWithType: ModuleBuilder.GetMethodToken(MethodInfo,IEnumerable<Type>)
  fullName: System.Reflection.Emit.ModuleBuilder.GetMethodToken(MethodInfo,IEnumerable<Type>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable<Type> optionalParameterTypes);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: optionalParameterTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetMethodToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)
  id: GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetPEKind(PortableExecutableKinds,ImageFileMachine)
  nameWithType: ModuleBuilder.GetPEKind(PortableExecutableKinds,ImageFileMachine)
  fullName: System.Reflection.Emit.ModuleBuilder.GetPEKind(PortableExecutableKinds,ImageFileMachine)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void GetPEKind (out System.Reflection.PortableExecutableKinds peKind, out System.Reflection.ImageFileMachine machine);
    parameters:
    - id: peKind
      type: System.Reflection.PortableExecutableKinds
      description: To be added.
    - id: machine
      type: System.Reflection.ImageFileMachine
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetPEKind*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)
  id: GetSignatureToken(System.Reflection.Emit.SignatureHelper)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetSignatureToken(SignatureHelper)
  nameWithType: ModuleBuilder.GetSignatureToken(SignatureHelper)
  fullName: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(SignatureHelper)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.SignatureToken GetSignatureToken (System.Reflection.Emit.SignatureHelper sigHelper);
    parameters:
    - id: sigHelper
      type: System.Reflection.Emit.SignatureHelper
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetSignatureToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)
  id: GetSignatureToken(System.Byte[],System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetSignatureToken(Byte[],Int32)
  nameWithType: ModuleBuilder.GetSignatureToken(Byte[],Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.SignatureToken GetSignatureToken (byte[] sigBytes, int sigLength);
    parameters:
    - id: sigBytes
      type: System.Byte[]
      description: To be added.
    - id: sigLength
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Emit.SignatureToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetSignatureToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate
  id: GetSignerCertificate
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetSignerCertificate()
  nameWithType: ModuleBuilder.GetSignerCertificate()
  fullName: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate ();
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)
  id: GetStringConstant(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetStringConstant(String)
  nameWithType: ModuleBuilder.GetStringConstant(String)
  fullName: System.Reflection.Emit.ModuleBuilder.GetStringConstant(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.StringToken GetStringConstant (string str);
    parameters:
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Emit.StringToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetStringConstant*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetSymWriter
  id: GetSymWriter
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetSymWriter()
  nameWithType: ModuleBuilder.GetSymWriter()
  fullName: System.Reflection.Emit.ModuleBuilder.GetSymWriter()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolWriter
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetSymWriter*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String)
  id: GetType(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetType(String)
  nameWithType: ModuleBuilder.GetType(String)
  fullName: System.Reflection.Emit.ModuleBuilder.GetType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type GetType (string className);
    parameters:
    - id: className
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: ModuleBuilder.GetType(String,Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.GetType(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type GetType (string className, bool ignoreCase);
    parameters:
    - id: className
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: ModuleBuilder.GetType(String,Boolean,Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type GetType (string className, bool throwOnError, bool ignoreCase);
    parameters:
    - id: className
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetTypes
  id: GetTypes
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetTypes()
  nameWithType: ModuleBuilder.GetTypes()
  fullName: System.Reflection.Emit.ModuleBuilder.GetTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type[] GetTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetTypes*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)
  id: GetTypeToken(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetTypeToken(String)
  nameWithType: ModuleBuilder.GetTypeToken(String)
  fullName: System.Reflection.Emit.ModuleBuilder.GetTypeToken(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeToken GetTypeToken (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetTypeToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)
  id: GetTypeToken(System.Type)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: GetTypeToken(Type)
  nameWithType: ModuleBuilder.GetTypeToken(Type)
  fullName: System.Reflection.Emit.ModuleBuilder.GetTypeToken(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeToken GetTypeToken (Type type);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeToken
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.GetTypeToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: ModuleBuilder.IsDefined(Type,Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.IsDefined*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.IsResource
  id: IsResource
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: IsResource()
  nameWithType: ModuleBuilder.IsResource()
  fullName: System.Reflection.Emit.ModuleBuilder.IsResource()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsResource ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.IsResource*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.IsTransient
  id: IsTransient
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: IsTransient()
  nameWithType: ModuleBuilder.IsTransient()
  fullName: System.Reflection.Emit.ModuleBuilder.IsTransient()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsTransient ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.IsTransient*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.MDStreamVersion
  id: MDStreamVersion
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: MDStreamVersion
  nameWithType: ModuleBuilder.MDStreamVersion
  fullName: System.Reflection.Emit.ModuleBuilder.MDStreamVersion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int MDStreamVersion { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.MDStreamVersion*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.MetadataToken
  id: MetadataToken
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: MetadataToken
  nameWithType: ModuleBuilder.MetadataToken
  fullName: System.Reflection.Emit.ModuleBuilder.MetadataToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int MetadataToken { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.MetadataToken*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.ModuleVersionId
  id: ModuleVersionId
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: ModuleVersionId
  nameWithType: ModuleBuilder.ModuleVersionId
  fullName: System.Reflection.Emit.ModuleBuilder.ModuleVersionId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Guid ModuleVersionId { get; }
    return:
      type: System.Guid
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.ModuleVersionId*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: Name
  nameWithType: ModuleBuilder.Name
  fullName: System.Reflection.Emit.ModuleBuilder.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.Name*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])
  id: ResolveField(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: ResolveField(Int32,Type[],Type[])
  nameWithType: ModuleBuilder.ResolveField(Int32,Type[],Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveField(Int32,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.FieldInfo ResolveField (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    - id: genericTypeArguments
      type: System.Type[]
      description: To be added.
    - id: genericMethodArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.ResolveField*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])
  id: ResolveMember(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: ResolveMember(Int32,Type[],Type[])
  nameWithType: ModuleBuilder.ResolveMember(Int32,Type[],Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveMember(Int32,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MemberInfo ResolveMember (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    - id: genericTypeArguments
      type: System.Type[]
      description: To be added.
    - id: genericMethodArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.MemberInfo
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.ResolveMember*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])
  id: ResolveMethod(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: ResolveMethod(Int32,Type[],Type[])
  nameWithType: ModuleBuilder.ResolveMethod(Int32,Type[],Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveMethod(Int32,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MethodBase ResolveMethod (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    - id: genericTypeArguments
      type: System.Type[]
      description: To be added.
    - id: genericMethodArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.MethodBase
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.ResolveMethod*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)
  id: ResolveSignature(System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: ResolveSignature(Int32)
  nameWithType: ModuleBuilder.ResolveSignature(Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveSignature(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override byte[] ResolveSignature (int metadataToken);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.ResolveSignature*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)
  id: ResolveString(System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: ResolveString(Int32)
  nameWithType: ModuleBuilder.ResolveString(Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveString(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ResolveString (int metadataToken);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.ResolveString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])
  id: ResolveType(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: ResolveType(Int32,Type[],Type[])
  nameWithType: ModuleBuilder.ResolveType(Int32,Type[],Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveType(Int32,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type ResolveType (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    - id: genericTypeArguments
      type: System.Type[]
      description: To be added.
    - id: genericMethodArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.ResolveType*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.ScopeName
  id: ScopeName
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: ScopeName
  nameWithType: ModuleBuilder.ScopeName
  fullName: System.Reflection.Emit.ModuleBuilder.ScopeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ScopeName { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.ScopeName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: ModuleBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: To be added.
    - id: binaryAttribute
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  id: SetSymCustomAttribute(System.String,System.Byte[])
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: SetSymCustomAttribute(String,Byte[])
  nameWithType: ModuleBuilder.SetSymCustomAttribute(String,Byte[])
  fullName: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetSymCustomAttribute (string name, byte[] data);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: data
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)
  id: SetUserEntryPoint(System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: SetUserEntryPoint(MethodInfo)
  nameWithType: ModuleBuilder.SetUserEntryPoint(MethodInfo)
  fullName: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(MethodInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetUserEntryPoint (System.Reflection.MethodInfo entryPoint);
    parameters:
    - id: entryPoint
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _ModuleBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _ModuleBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(UInt32)
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _ModuleBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ModuleBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._ModuleBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _ModuleBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Reflection.Module
  isExternal: false
  name: System.Reflection.Module
- uid: System.Reflection.Emit.ModuleBuilder.Assembly
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: Assembly
  nameWithType: ModuleBuilder.Assembly
  fullName: System.Reflection.Emit.ModuleBuilder.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: CreateGlobalFunctions()
  nameWithType: ModuleBuilder.CreateGlobalFunctions()
  fullName: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions()
- uid: System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: ModuleBuilder.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocumentWriter
  nameWithType: ISymbolDocumentWriter
  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineEnum(String,TypeAttributes,Type)
  nameWithType: ModuleBuilder.DefineEnum(String,TypeAttributes,Type)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineEnum(String,TypeAttributes,Type)
- uid: System.Reflection.Emit.EnumBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: EnumBuilder
  nameWithType: EnumBuilder
  fullName: System.Reflection.Emit.EnumBuilder
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineGlobalMethod(String,MethodAttributes,Type,Type[])
  nameWithType: ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,Type,Type[])
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  nameWithType: ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[])
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
- uid: System.Type[][]
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[][]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineInitializedData(String,Byte[],FieldAttributes)
  nameWithType: ModuleBuilder.DefineInitializedData(String,Byte[],FieldAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(String,Byte[],FieldAttributes)
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: FieldBuilder
  nameWithType: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineManifestResource(String,Stream,ResourceAttributes)
  nameWithType: ModuleBuilder.DefineManifestResource(String,Stream,ResourceAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineManifestResource(String,Stream,ResourceAttributes)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Reflection.ResourceAttributes
  parent: System.Reflection
  isExternal: false
  name: ResourceAttributes
  nameWithType: ResourceAttributes
  fullName: System.Reflection.ResourceAttributes
- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  nameWithType: ModuleBuilder.DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
- uid: System.Runtime.InteropServices.CharSet
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CharSet
  nameWithType: CharSet
  fullName: System.Runtime.InteropServices.CharSet
- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  nameWithType: ModuleBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
- uid: System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineResource(String,String)
  nameWithType: ModuleBuilder.DefineResource(String,String)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineResource(String,String)
- uid: System.Resources.IResourceWriter
  parent: System.Resources
  isExternal: false
  name: IResourceWriter
  nameWithType: IResourceWriter
  fullName: System.Resources.IResourceWriter
- uid: System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineResource(String,String,ResourceAttributes)
  nameWithType: ModuleBuilder.DefineResource(String,String,ResourceAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineResource(String,String,ResourceAttributes)
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineType(String)
  nameWithType: ModuleBuilder.DefineType(String)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String)
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineType(String,TypeAttributes)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes)
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineType(String,TypeAttributes,Type)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type)
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineType(String,TypeAttributes,Type,Int32)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type,Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineType(String,TypeAttributes,Type,PackingSize)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type,PackingSize)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type,PackingSize)
- uid: System.Reflection.Emit.PackingSize
  parent: System.Reflection.Emit
  isExternal: false
  name: PackingSize
  nameWithType: PackingSize
  fullName: System.Reflection.Emit.PackingSize
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineType(String,TypeAttributes,Type,Type[])
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type,Type[])
- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineType(String,TypeAttributes,Type,PackingSize,Int32)
  nameWithType: ModuleBuilder.DefineType(String,TypeAttributes,Type,PackingSize,Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(String,TypeAttributes,Type,PackingSize,Int32)
- uid: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineUninitializedData(String,Int32,FieldAttributes)
  nameWithType: ModuleBuilder.DefineUninitializedData(String,Int32,FieldAttributes)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(String,Int32,FieldAttributes)
- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineUnmanagedResource(Byte[])
  nameWithType: ModuleBuilder.DefineUnmanagedResource(Byte[])
  fullName: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(Byte[])
- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineUnmanagedResource(String)
  nameWithType: ModuleBuilder.DefineUnmanagedResource(String)
  fullName: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(String)
- uid: System.Reflection.Emit.ModuleBuilder.Equals(System.Object)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: Equals(Object)
  nameWithType: ModuleBuilder.Equals(Object)
  fullName: System.Reflection.Emit.ModuleBuilder.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: FullyQualifiedName
  nameWithType: ModuleBuilder.FullyQualifiedName
  fullName: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName
- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetArrayMethod(Type,String,CallingConventions,Type,Type[])
  nameWithType: ModuleBuilder.GetArrayMethod(Type,String,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(Type,String,CallingConventions,Type,Type[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetArrayMethodToken(Type,String,CallingConventions,Type,Type[])
  nameWithType: ModuleBuilder.GetArrayMethodToken(Type,String,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(Type,String,CallingConventions,Type,Type[])
- uid: System.Reflection.Emit.MethodToken
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodToken
  nameWithType: MethodToken
  fullName: System.Reflection.Emit.MethodToken
- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetConstructorToken(ConstructorInfo)
  nameWithType: ModuleBuilder.GetConstructorToken(ConstructorInfo)
  fullName: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(ConstructorInfo)
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetConstructorToken(ConstructorInfo,IEnumerable<Type>)
  nameWithType: ModuleBuilder.GetConstructorToken(ConstructorInfo,IEnumerable<Type>)
  fullName: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(ConstructorInfo,IEnumerable<Type>)
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: ModuleBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: ModuleBuilder.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(Type,Boolean)
- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: ModuleBuilder.GetCustomAttributesData()
  fullName: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData()
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<CustomAttributeData>
  nameWithType: IList<CustomAttributeData>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Reflection.CustomAttributeData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    nameWithType: CustomAttributeData
    fullName: CustomAttributeData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: ModuleBuilder.GetField(String,BindingFlags)
  fullName: System.Reflection.Emit.ModuleBuilder.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: ModuleBuilder.GetFields(BindingFlags)
  fullName: System.Reflection.Emit.ModuleBuilder.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetFieldToken(FieldInfo)
  nameWithType: ModuleBuilder.GetFieldToken(FieldInfo)
  fullName: System.Reflection.Emit.ModuleBuilder.GetFieldToken(FieldInfo)
- uid: System.Reflection.Emit.FieldToken
  parent: System.Reflection.Emit
  isExternal: false
  name: FieldToken
  nameWithType: FieldToken
  fullName: System.Reflection.Emit.FieldToken
- uid: System.Reflection.Emit.ModuleBuilder.GetHashCode
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetHashCode()
  nameWithType: ModuleBuilder.GetHashCode()
  fullName: System.Reflection.Emit.ModuleBuilder.GetHashCode()
- uid: System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: ModuleBuilder.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Emit.ModuleBuilder.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: ModuleBuilder.GetMethods(BindingFlags)
  fullName: System.Reflection.Emit.ModuleBuilder.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetMethodToken(MethodInfo)
  nameWithType: ModuleBuilder.GetMethodToken(MethodInfo)
  fullName: System.Reflection.Emit.ModuleBuilder.GetMethodToken(MethodInfo)
- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetMethodToken(MethodInfo,IEnumerable<Type>)
  nameWithType: ModuleBuilder.GetMethodToken(MethodInfo,IEnumerable<Type>)
  fullName: System.Reflection.Emit.ModuleBuilder.GetMethodToken(MethodInfo,IEnumerable<Type>)
- uid: System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetPEKind(PortableExecutableKinds,ImageFileMachine)
  nameWithType: ModuleBuilder.GetPEKind(PortableExecutableKinds,ImageFileMachine)
  fullName: System.Reflection.Emit.ModuleBuilder.GetPEKind(PortableExecutableKinds,ImageFileMachine)
- uid: System.Reflection.PortableExecutableKinds
  parent: System.Reflection
  isExternal: false
  name: PortableExecutableKinds
  nameWithType: PortableExecutableKinds
  fullName: System.Reflection.PortableExecutableKinds
- uid: System.Reflection.ImageFileMachine
  parent: System.Reflection
  isExternal: false
  name: ImageFileMachine
  nameWithType: ImageFileMachine
  fullName: System.Reflection.ImageFileMachine
- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetSignatureToken(SignatureHelper)
  nameWithType: ModuleBuilder.GetSignatureToken(SignatureHelper)
  fullName: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(SignatureHelper)
- uid: System.Reflection.Emit.SignatureToken
  parent: System.Reflection.Emit
  isExternal: false
  name: SignatureToken
  nameWithType: SignatureToken
  fullName: System.Reflection.Emit.SignatureToken
- uid: System.Reflection.Emit.SignatureHelper
  parent: System.Reflection.Emit
  isExternal: false
  name: SignatureHelper
  nameWithType: SignatureHelper
  fullName: System.Reflection.Emit.SignatureHelper
- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetSignatureToken(Byte[],Int32)
  nameWithType: ModuleBuilder.GetSignatureToken(Byte[],Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(Byte[],Int32)
- uid: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetSignerCertificate()
  nameWithType: ModuleBuilder.GetSignerCertificate()
  fullName: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetStringConstant(String)
  nameWithType: ModuleBuilder.GetStringConstant(String)
  fullName: System.Reflection.Emit.ModuleBuilder.GetStringConstant(String)
- uid: System.Reflection.Emit.StringToken
  parent: System.Reflection.Emit
  isExternal: false
  name: StringToken
  nameWithType: StringToken
  fullName: System.Reflection.Emit.StringToken
- uid: System.Reflection.Emit.ModuleBuilder.GetSymWriter
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetSymWriter()
  nameWithType: ModuleBuilder.GetSymWriter()
  fullName: System.Reflection.Emit.ModuleBuilder.GetSymWriter()
- uid: System.Diagnostics.SymbolStore.ISymbolWriter
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolWriter
  nameWithType: ISymbolWriter
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter
- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetType(String)
  nameWithType: ModuleBuilder.GetType(String)
  fullName: System.Reflection.Emit.ModuleBuilder.GetType(String)
- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: ModuleBuilder.GetType(String,Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.GetType(String,Boolean)
- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: ModuleBuilder.GetType(String,Boolean,Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.GetType(String,Boolean,Boolean)
- uid: System.Reflection.Emit.ModuleBuilder.GetTypes
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetTypes()
  nameWithType: ModuleBuilder.GetTypes()
  fullName: System.Reflection.Emit.ModuleBuilder.GetTypes()
- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetTypeToken(String)
  nameWithType: ModuleBuilder.GetTypeToken(String)
  fullName: System.Reflection.Emit.ModuleBuilder.GetTypeToken(String)
- uid: System.Reflection.Emit.TypeToken
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeToken
  nameWithType: TypeToken
  fullName: System.Reflection.Emit.TypeToken
- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetTypeToken(Type)
  nameWithType: ModuleBuilder.GetTypeToken(Type)
  fullName: System.Reflection.Emit.ModuleBuilder.GetTypeToken(Type)
- uid: System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: ModuleBuilder.IsDefined(Type,Boolean)
  fullName: System.Reflection.Emit.ModuleBuilder.IsDefined(Type,Boolean)
- uid: System.Reflection.Emit.ModuleBuilder.IsResource
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: IsResource()
  nameWithType: ModuleBuilder.IsResource()
  fullName: System.Reflection.Emit.ModuleBuilder.IsResource()
- uid: System.Reflection.Emit.ModuleBuilder.IsTransient
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: IsTransient()
  nameWithType: ModuleBuilder.IsTransient()
  fullName: System.Reflection.Emit.ModuleBuilder.IsTransient()
- uid: System.Reflection.Emit.ModuleBuilder.MDStreamVersion
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: MDStreamVersion
  nameWithType: ModuleBuilder.MDStreamVersion
  fullName: System.Reflection.Emit.ModuleBuilder.MDStreamVersion
- uid: System.Reflection.Emit.ModuleBuilder.MetadataToken
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: MetadataToken
  nameWithType: ModuleBuilder.MetadataToken
  fullName: System.Reflection.Emit.ModuleBuilder.MetadataToken
- uid: System.Reflection.Emit.ModuleBuilder.ModuleVersionId
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ModuleVersionId
  nameWithType: ModuleBuilder.ModuleVersionId
  fullName: System.Reflection.Emit.ModuleBuilder.ModuleVersionId
- uid: System.Reflection.Emit.ModuleBuilder.Name
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: Name
  nameWithType: ModuleBuilder.Name
  fullName: System.Reflection.Emit.ModuleBuilder.Name
- uid: System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveField(Int32,Type[],Type[])
  nameWithType: ModuleBuilder.ResolveField(Int32,Type[],Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveField(Int32,Type[],Type[])
- uid: System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveMember(Int32,Type[],Type[])
  nameWithType: ModuleBuilder.ResolveMember(Int32,Type[],Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveMember(Int32,Type[],Type[])
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveMethod(Int32,Type[],Type[])
  nameWithType: ModuleBuilder.ResolveMethod(Int32,Type[],Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveMethod(Int32,Type[],Type[])
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveSignature(Int32)
  nameWithType: ModuleBuilder.ResolveSignature(Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveSignature(Int32)
- uid: System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveString(Int32)
  nameWithType: ModuleBuilder.ResolveString(Int32)
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveString(Int32)
- uid: System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveType(Int32,Type[],Type[])
  nameWithType: ModuleBuilder.ResolveType(Int32,Type[],Type[])
  fullName: System.Reflection.Emit.ModuleBuilder.ResolveType(Int32,Type[],Type[])
- uid: System.Reflection.Emit.ModuleBuilder.ScopeName
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ScopeName
  nameWithType: ModuleBuilder.ScopeName
  fullName: System.Reflection.Emit.ModuleBuilder.ScopeName
- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: ModuleBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
- uid: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: SetSymCustomAttribute(String,Byte[])
  nameWithType: ModuleBuilder.SetSymCustomAttribute(String,Byte[])
  fullName: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(String,Byte[])
- uid: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: SetUserEntryPoint(MethodInfo)
  nameWithType: ModuleBuilder.SetUserEntryPoint(MethodInfo)
  fullName: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(MethodInfo)
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(UInt32)
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ModuleBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.ModuleBuilder.Assembly*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: Assembly
  nameWithType: ModuleBuilder.Assembly
- uid: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: CreateGlobalFunctions
  nameWithType: ModuleBuilder.CreateGlobalFunctions
- uid: System.Reflection.Emit.ModuleBuilder.DefineDocument*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineDocument
  nameWithType: ModuleBuilder.DefineDocument
- uid: System.Reflection.Emit.ModuleBuilder.DefineEnum*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineEnum
  nameWithType: ModuleBuilder.DefineEnum
- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineGlobalMethod
  nameWithType: ModuleBuilder.DefineGlobalMethod
- uid: System.Reflection.Emit.ModuleBuilder.DefineInitializedData*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineInitializedData
  nameWithType: ModuleBuilder.DefineInitializedData
- uid: System.Reflection.Emit.ModuleBuilder.DefineManifestResource*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineManifestResource
  nameWithType: ModuleBuilder.DefineManifestResource
- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefinePInvokeMethod
  nameWithType: ModuleBuilder.DefinePInvokeMethod
- uid: System.Reflection.Emit.ModuleBuilder.DefineResource*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineResource
  nameWithType: ModuleBuilder.DefineResource
- uid: System.Reflection.Emit.ModuleBuilder.DefineType*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineType
  nameWithType: ModuleBuilder.DefineType
- uid: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineUninitializedData
  nameWithType: ModuleBuilder.DefineUninitializedData
- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: DefineUnmanagedResource
  nameWithType: ModuleBuilder.DefineUnmanagedResource
- uid: System.Reflection.Emit.ModuleBuilder.Equals*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: Equals
  nameWithType: ModuleBuilder.Equals
- uid: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: FullyQualifiedName
  nameWithType: ModuleBuilder.FullyQualifiedName
- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethod*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetArrayMethod
  nameWithType: ModuleBuilder.GetArrayMethod
- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetArrayMethodToken
  nameWithType: ModuleBuilder.GetArrayMethodToken
- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetConstructorToken
  nameWithType: ModuleBuilder.GetConstructorToken
- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetCustomAttributes
  nameWithType: ModuleBuilder.GetCustomAttributes
- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetCustomAttributesData
  nameWithType: ModuleBuilder.GetCustomAttributesData
- uid: System.Reflection.Emit.ModuleBuilder.GetField*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetField
  nameWithType: ModuleBuilder.GetField
- uid: System.Reflection.Emit.ModuleBuilder.GetFields*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetFields
  nameWithType: ModuleBuilder.GetFields
- uid: System.Reflection.Emit.ModuleBuilder.GetFieldToken*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetFieldToken
  nameWithType: ModuleBuilder.GetFieldToken
- uid: System.Reflection.Emit.ModuleBuilder.GetHashCode*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetHashCode
  nameWithType: ModuleBuilder.GetHashCode
- uid: System.Reflection.Emit.ModuleBuilder.GetMethodImpl*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetMethodImpl
  nameWithType: ModuleBuilder.GetMethodImpl
- uid: System.Reflection.Emit.ModuleBuilder.GetMethods*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetMethods
  nameWithType: ModuleBuilder.GetMethods
- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetMethodToken
  nameWithType: ModuleBuilder.GetMethodToken
- uid: System.Reflection.Emit.ModuleBuilder.GetPEKind*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetPEKind
  nameWithType: ModuleBuilder.GetPEKind
- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetSignatureToken
  nameWithType: ModuleBuilder.GetSignatureToken
- uid: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetSignerCertificate
  nameWithType: ModuleBuilder.GetSignerCertificate
- uid: System.Reflection.Emit.ModuleBuilder.GetStringConstant*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetStringConstant
  nameWithType: ModuleBuilder.GetStringConstant
- uid: System.Reflection.Emit.ModuleBuilder.GetSymWriter*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetSymWriter
  nameWithType: ModuleBuilder.GetSymWriter
- uid: System.Reflection.Emit.ModuleBuilder.GetType*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetType
  nameWithType: ModuleBuilder.GetType
- uid: System.Reflection.Emit.ModuleBuilder.GetTypes*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetTypes
  nameWithType: ModuleBuilder.GetTypes
- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: GetTypeToken
  nameWithType: ModuleBuilder.GetTypeToken
- uid: System.Reflection.Emit.ModuleBuilder.IsDefined*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: IsDefined
  nameWithType: ModuleBuilder.IsDefined
- uid: System.Reflection.Emit.ModuleBuilder.IsResource*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: IsResource
  nameWithType: ModuleBuilder.IsResource
- uid: System.Reflection.Emit.ModuleBuilder.IsTransient*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: IsTransient
  nameWithType: ModuleBuilder.IsTransient
- uid: System.Reflection.Emit.ModuleBuilder.MDStreamVersion*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: MDStreamVersion
  nameWithType: ModuleBuilder.MDStreamVersion
- uid: System.Reflection.Emit.ModuleBuilder.MetadataToken*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: MetadataToken
  nameWithType: ModuleBuilder.MetadataToken
- uid: System.Reflection.Emit.ModuleBuilder.ModuleVersionId*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ModuleVersionId
  nameWithType: ModuleBuilder.ModuleVersionId
- uid: System.Reflection.Emit.ModuleBuilder.Name*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: Name
  nameWithType: ModuleBuilder.Name
- uid: System.Reflection.Emit.ModuleBuilder.ResolveField*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveField
  nameWithType: ModuleBuilder.ResolveField
- uid: System.Reflection.Emit.ModuleBuilder.ResolveMember*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveMember
  nameWithType: ModuleBuilder.ResolveMember
- uid: System.Reflection.Emit.ModuleBuilder.ResolveMethod*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveMethod
  nameWithType: ModuleBuilder.ResolveMethod
- uid: System.Reflection.Emit.ModuleBuilder.ResolveSignature*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveSignature
  nameWithType: ModuleBuilder.ResolveSignature
- uid: System.Reflection.Emit.ModuleBuilder.ResolveString*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveString
  nameWithType: ModuleBuilder.ResolveString
- uid: System.Reflection.Emit.ModuleBuilder.ResolveType*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ResolveType
  nameWithType: ModuleBuilder.ResolveType
- uid: System.Reflection.Emit.ModuleBuilder.ScopeName*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: ScopeName
  nameWithType: ModuleBuilder.ScopeName
- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: SetCustomAttribute
  nameWithType: ModuleBuilder.SetCustomAttribute
- uid: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: SetSymCustomAttribute
  nameWithType: ModuleBuilder.SetSymCustomAttribute
- uid: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: SetUserEntryPoint
  nameWithType: ModuleBuilder.SetUserEntryPoint
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount
- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke*
  parent: System.Reflection.Emit.ModuleBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ModuleBuilder.Invoke
  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.Invoke
