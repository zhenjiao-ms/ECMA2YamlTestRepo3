### YamlMime:ManagedReference
items:
- uid: System.Threading.Interlocked
  id: Interlocked
  children:
  - System.Threading.Interlocked.Add(System.Int32@,System.Int32)
  - System.Threading.Interlocked.Add(System.Int64@,System.Int64)
  - System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)
  - System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)
  - System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)
  - System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)
  - System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)
  - System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)
  - System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)
  - System.Threading.Interlocked.Decrement(System.Int32@)
  - System.Threading.Interlocked.Decrement(System.Int64@)
  - System.Threading.Interlocked.Exchange(System.Double@,System.Double)
  - System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)
  - System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)
  - System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)
  - System.Threading.Interlocked.Exchange(System.Object@,System.Object)
  - System.Threading.Interlocked.Exchange(System.Single@,System.Single)
  - System.Threading.Interlocked.Exchange``1(``0@,``0)
  - System.Threading.Interlocked.Increment(System.Int32@)
  - System.Threading.Interlocked.Increment(System.Int64@)
  - System.Threading.Interlocked.MemoryBarrier
  - System.Threading.Interlocked.Read(System.Int64@)
  langs:
  - csharp
  name: Interlocked
  nameWithType: Interlocked
  fullName: System.Threading.Interlocked
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static class Interlocked
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Add(System.Int32@,System.Int32)
  id: Add(System.Int32@,System.Int32)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Add(Int32,Int32)
  nameWithType: Interlocked.Add(Int32,Int32)
  fullName: System.Threading.Interlocked.Add(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int Add (ref int location1, int value);
    parameters:
    - id: location1
      type: System.Int32
      description: To be added.
    - id: value
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Interlocked.Add*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Add(System.Int64@,System.Int64)
  id: Add(System.Int64@,System.Int64)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Add(Int64,Int64)
  nameWithType: Interlocked.Add(Int64,Int64)
  fullName: System.Threading.Interlocked.Add(Int64,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static long Add (ref long location1, long value);
    parameters:
    - id: location1
      type: System.Int64
      description: To be added.
    - id: value
      type: System.Int64
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Interlocked.Add*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)
  id: CompareExchange(System.Double@,System.Double,System.Double)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: CompareExchange(Double,Double,Double)
  nameWithType: Interlocked.CompareExchange(Double,Double,Double)
  fullName: System.Threading.Interlocked.CompareExchange(Double,Double,Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static double CompareExchange (ref double location1, double value, double comparand);
    parameters:
    - id: location1
      type: System.Double
      description: To be added.
    - id: value
      type: System.Double
      description: To be added.
    - id: comparand
      type: System.Double
      description: To be added.
    return:
      type: System.Double
      description: To be added.
  overload: System.Threading.Interlocked.CompareExchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)
  id: CompareExchange(System.Int32@,System.Int32,System.Int32)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: CompareExchange(Int32,Int32,Int32)
  nameWithType: Interlocked.CompareExchange(Int32,Int32,Int32)
  fullName: System.Threading.Interlocked.CompareExchange(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int CompareExchange (ref int location1, int value, int comparand);
    parameters:
    - id: location1
      type: System.Int32
      description: To be added.
    - id: value
      type: System.Int32
      description: To be added.
    - id: comparand
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Interlocked.CompareExchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)
  id: CompareExchange(System.Int64@,System.Int64,System.Int64)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: CompareExchange(Int64,Int64,Int64)
  nameWithType: Interlocked.CompareExchange(Int64,Int64,Int64)
  fullName: System.Threading.Interlocked.CompareExchange(Int64,Int64,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static long CompareExchange (ref long location1, long value, long comparand);
    parameters:
    - id: location1
      type: System.Int64
      description: To be added.
    - id: value
      type: System.Int64
      description: To be added.
    - id: comparand
      type: System.Int64
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Interlocked.CompareExchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)
  id: CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: CompareExchange(IntPtr,IntPtr,IntPtr)
  nameWithType: Interlocked.CompareExchange(IntPtr,IntPtr,IntPtr)
  fullName: System.Threading.Interlocked.CompareExchange(IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static IntPtr CompareExchange (ref IntPtr location1, IntPtr value, IntPtr comparand);
    parameters:
    - id: location1
      type: System.IntPtr
      description: To be added.
    - id: value
      type: System.IntPtr
      description: To be added.
    - id: comparand
      type: System.IntPtr
      description: To be added.
    return:
      type: System.IntPtr
      description: To be added.
  overload: System.Threading.Interlocked.CompareExchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)
  id: CompareExchange(System.Object@,System.Object,System.Object)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: CompareExchange(Object,Object,Object)
  nameWithType: Interlocked.CompareExchange(Object,Object,Object)
  fullName: System.Threading.Interlocked.CompareExchange(Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object CompareExchange (ref object location1, object value, object comparand);
    parameters:
    - id: location1
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
    - id: comparand
      type: System.Object
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Threading.Interlocked.CompareExchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)
  id: CompareExchange(System.Single@,System.Single,System.Single)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: CompareExchange(Single,Single,Single)
  nameWithType: Interlocked.CompareExchange(Single,Single,Single)
  fullName: System.Threading.Interlocked.CompareExchange(Single,Single,Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static float CompareExchange (ref float location1, float value, float comparand);
    parameters:
    - id: location1
      type: System.Single
      description: To be added.
    - id: value
      type: System.Single
      description: To be added.
    - id: comparand
      type: System.Single
      description: To be added.
    return:
      type: System.Single
      description: To be added.
  overload: System.Threading.Interlocked.CompareExchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)
  id: CompareExchange``1(``0@,``0,``0)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: CompareExchange(T,T,T)
  nameWithType: Interlocked.CompareExchange(T,T,T)
  fullName: System.Threading.Interlocked.CompareExchange(T,T,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public static T CompareExchange<T> (ref T location1, T value, T comparand) where T : class;'
    parameters:
    - id: location1
      type: T
      description: To be added.
    - id: value
      type: T
      description: To be added.
    - id: comparand
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Threading.Interlocked.CompareExchange<T>*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Decrement(System.Int32@)
  id: Decrement(System.Int32@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Decrement(Int32)
  nameWithType: Interlocked.Decrement(Int32)
  fullName: System.Threading.Interlocked.Decrement(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int Decrement (ref int location);
    parameters:
    - id: location
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Interlocked.Decrement*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Decrement(System.Int64@)
  id: Decrement(System.Int64@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Decrement(Int64)
  nameWithType: Interlocked.Decrement(Int64)
  fullName: System.Threading.Interlocked.Decrement(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static long Decrement (ref long location);
    parameters:
    - id: location
      type: System.Int64
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Interlocked.Decrement*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Exchange(System.Double@,System.Double)
  id: Exchange(System.Double@,System.Double)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Exchange(Double,Double)
  nameWithType: Interlocked.Exchange(Double,Double)
  fullName: System.Threading.Interlocked.Exchange(Double,Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static double Exchange (ref double location1, double value);
    parameters:
    - id: location1
      type: System.Double
      description: To be added.
    - id: value
      type: System.Double
      description: To be added.
    return:
      type: System.Double
      description: To be added.
  overload: System.Threading.Interlocked.Exchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)
  id: Exchange(System.Int32@,System.Int32)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Exchange(Int32,Int32)
  nameWithType: Interlocked.Exchange(Int32,Int32)
  fullName: System.Threading.Interlocked.Exchange(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int Exchange (ref int location1, int value);
    parameters:
    - id: location1
      type: System.Int32
      description: To be added.
    - id: value
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Interlocked.Exchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)
  id: Exchange(System.Int64@,System.Int64)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Exchange(Int64,Int64)
  nameWithType: Interlocked.Exchange(Int64,Int64)
  fullName: System.Threading.Interlocked.Exchange(Int64,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static long Exchange (ref long location1, long value);
    parameters:
    - id: location1
      type: System.Int64
      description: To be added.
    - id: value
      type: System.Int64
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Interlocked.Exchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)
  id: Exchange(System.IntPtr@,System.IntPtr)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Exchange(IntPtr,IntPtr)
  nameWithType: Interlocked.Exchange(IntPtr,IntPtr)
  fullName: System.Threading.Interlocked.Exchange(IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static IntPtr Exchange (ref IntPtr location1, IntPtr value);
    parameters:
    - id: location1
      type: System.IntPtr
      description: To be added.
    - id: value
      type: System.IntPtr
      description: To be added.
    return:
      type: System.IntPtr
      description: To be added.
  overload: System.Threading.Interlocked.Exchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Exchange(System.Object@,System.Object)
  id: Exchange(System.Object@,System.Object)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Exchange(Object,Object)
  nameWithType: Interlocked.Exchange(Object,Object)
  fullName: System.Threading.Interlocked.Exchange(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object Exchange (ref object location1, object value);
    parameters:
    - id: location1
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Threading.Interlocked.Exchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Exchange(System.Single@,System.Single)
  id: Exchange(System.Single@,System.Single)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Exchange(Single,Single)
  nameWithType: Interlocked.Exchange(Single,Single)
  fullName: System.Threading.Interlocked.Exchange(Single,Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static float Exchange (ref float location1, float value);
    parameters:
    - id: location1
      type: System.Single
      description: To be added.
    - id: value
      type: System.Single
      description: To be added.
    return:
      type: System.Single
      description: To be added.
  overload: System.Threading.Interlocked.Exchange*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Exchange``1(``0@,``0)
  id: Exchange``1(``0@,``0)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Exchange(T,T)
  nameWithType: Interlocked.Exchange(T,T)
  fullName: System.Threading.Interlocked.Exchange(T,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public static T Exchange<T> (ref T location1, T value) where T : class;'
    parameters:
    - id: location1
      type: T
      description: To be added.
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Threading.Interlocked.Exchange<T>*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Increment(System.Int32@)
  id: Increment(System.Int32@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Increment(Int32)
  nameWithType: Interlocked.Increment(Int32)
  fullName: System.Threading.Interlocked.Increment(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int Increment (ref int location);
    parameters:
    - id: location
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Interlocked.Increment*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Increment(System.Int64@)
  id: Increment(System.Int64@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Increment(Int64)
  nameWithType: Interlocked.Increment(Int64)
  fullName: System.Threading.Interlocked.Increment(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static long Increment (ref long location);
    parameters:
    - id: location
      type: System.Int64
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Interlocked.Increment*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.MemoryBarrier
  id: MemoryBarrier
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: MemoryBarrier()
  nameWithType: Interlocked.MemoryBarrier()
  fullName: System.Threading.Interlocked.MemoryBarrier()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static void MemoryBarrier ();
    parameters: []
  overload: System.Threading.Interlocked.MemoryBarrier*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Interlocked.Read(System.Int64@)
  id: Read(System.Int64@)
  parent: System.Threading.Interlocked
  langs:
  - csharp
  name: Read(Int64)
  nameWithType: Interlocked.Read(Int64)
  fullName: System.Threading.Interlocked.Read(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static long Read (ref long location);
    parameters:
    - id: location
      type: System.Int64
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Interlocked.Read*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.Interlocked.Add(System.Int32@,System.Int32)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Add(Int32,Int32)
  nameWithType: Interlocked.Add(Int32,Int32)
  fullName: System.Threading.Interlocked.Add(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Interlocked.Add(System.Int64@,System.Int64)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Add(Int64,Int64)
  nameWithType: Interlocked.Add(Int64,Int64)
  fullName: System.Threading.Interlocked.Add(Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange(Double,Double,Double)
  nameWithType: Interlocked.CompareExchange(Double,Double,Double)
  fullName: System.Threading.Interlocked.CompareExchange(Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange(Int32,Int32,Int32)
  nameWithType: Interlocked.CompareExchange(Int32,Int32,Int32)
  fullName: System.Threading.Interlocked.CompareExchange(Int32,Int32,Int32)
- uid: System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange(Int64,Int64,Int64)
  nameWithType: Interlocked.CompareExchange(Int64,Int64,Int64)
  fullName: System.Threading.Interlocked.CompareExchange(Int64,Int64,Int64)
- uid: System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange(IntPtr,IntPtr,IntPtr)
  nameWithType: Interlocked.CompareExchange(IntPtr,IntPtr,IntPtr)
  fullName: System.Threading.Interlocked.CompareExchange(IntPtr,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange(Object,Object,Object)
  nameWithType: Interlocked.CompareExchange(Object,Object,Object)
  fullName: System.Threading.Interlocked.CompareExchange(Object,Object,Object)
- uid: System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange(Single,Single,Single)
  nameWithType: Interlocked.CompareExchange(Single,Single,Single)
  fullName: System.Threading.Interlocked.CompareExchange(Single,Single,Single)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange(T,T,T)
  nameWithType: Interlocked.CompareExchange(T,T,T)
  fullName: System.Threading.Interlocked.CompareExchange(T,T,T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Interlocked.Decrement(System.Int32@)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Decrement(Int32)
  nameWithType: Interlocked.Decrement(Int32)
  fullName: System.Threading.Interlocked.Decrement(Int32)
- uid: System.Threading.Interlocked.Decrement(System.Int64@)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Decrement(Int64)
  nameWithType: Interlocked.Decrement(Int64)
  fullName: System.Threading.Interlocked.Decrement(Int64)
- uid: System.Threading.Interlocked.Exchange(System.Double@,System.Double)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange(Double,Double)
  nameWithType: Interlocked.Exchange(Double,Double)
  fullName: System.Threading.Interlocked.Exchange(Double,Double)
- uid: System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange(Int32,Int32)
  nameWithType: Interlocked.Exchange(Int32,Int32)
  fullName: System.Threading.Interlocked.Exchange(Int32,Int32)
- uid: System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange(Int64,Int64)
  nameWithType: Interlocked.Exchange(Int64,Int64)
  fullName: System.Threading.Interlocked.Exchange(Int64,Int64)
- uid: System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange(IntPtr,IntPtr)
  nameWithType: Interlocked.Exchange(IntPtr,IntPtr)
  fullName: System.Threading.Interlocked.Exchange(IntPtr,IntPtr)
- uid: System.Threading.Interlocked.Exchange(System.Object@,System.Object)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange(Object,Object)
  nameWithType: Interlocked.Exchange(Object,Object)
  fullName: System.Threading.Interlocked.Exchange(Object,Object)
- uid: System.Threading.Interlocked.Exchange(System.Single@,System.Single)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange(Single,Single)
  nameWithType: Interlocked.Exchange(Single,Single)
  fullName: System.Threading.Interlocked.Exchange(Single,Single)
- uid: System.Threading.Interlocked.Exchange``1(``0@,``0)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange(T,T)
  nameWithType: Interlocked.Exchange(T,T)
  fullName: System.Threading.Interlocked.Exchange(T,T)
- uid: System.Threading.Interlocked.Increment(System.Int32@)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Increment(Int32)
  nameWithType: Interlocked.Increment(Int32)
  fullName: System.Threading.Interlocked.Increment(Int32)
- uid: System.Threading.Interlocked.Increment(System.Int64@)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Increment(Int64)
  nameWithType: Interlocked.Increment(Int64)
  fullName: System.Threading.Interlocked.Increment(Int64)
- uid: System.Threading.Interlocked.MemoryBarrier
  parent: System.Threading.Interlocked
  isExternal: false
  name: MemoryBarrier()
  nameWithType: Interlocked.MemoryBarrier()
  fullName: System.Threading.Interlocked.MemoryBarrier()
- uid: System.Threading.Interlocked.Read(System.Int64@)
  parent: System.Threading.Interlocked
  isExternal: false
  name: Read(Int64)
  nameWithType: Interlocked.Read(Int64)
  fullName: System.Threading.Interlocked.Read(Int64)
- uid: System.Threading.Interlocked.Add*
  parent: System.Threading.Interlocked
  isExternal: false
  name: Add
  nameWithType: Interlocked.Add
- uid: System.Threading.Interlocked.CompareExchange*
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange
  nameWithType: Interlocked.CompareExchange
- uid: System.Threading.Interlocked.CompareExchange<T>*
  parent: System.Threading.Interlocked
  isExternal: false
  name: CompareExchange<T>
  nameWithType: Interlocked.CompareExchange<T>
- uid: System.Threading.Interlocked.Decrement*
  parent: System.Threading.Interlocked
  isExternal: false
  name: Decrement
  nameWithType: Interlocked.Decrement
- uid: System.Threading.Interlocked.Exchange*
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange
  nameWithType: Interlocked.Exchange
- uid: System.Threading.Interlocked.Exchange<T>*
  parent: System.Threading.Interlocked
  isExternal: false
  name: Exchange<T>
  nameWithType: Interlocked.Exchange<T>
- uid: System.Threading.Interlocked.Increment*
  parent: System.Threading.Interlocked
  isExternal: false
  name: Increment
  nameWithType: Interlocked.Increment
- uid: System.Threading.Interlocked.MemoryBarrier*
  parent: System.Threading.Interlocked
  isExternal: false
  name: MemoryBarrier
  nameWithType: Interlocked.MemoryBarrier
- uid: System.Threading.Interlocked.Read*
  parent: System.Threading.Interlocked
  isExternal: false
  name: Read
  nameWithType: Interlocked.Read
