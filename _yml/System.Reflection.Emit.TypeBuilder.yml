### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.TypeBuilder
  id: TypeBuilder
  children:
  - System.Reflection.Emit.TypeBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  - System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)
  - System.Reflection.Emit.TypeBuilder.Assembly
  - System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName
  - System.Reflection.Emit.TypeBuilder.BaseType
  - System.Reflection.Emit.TypeBuilder.CreateType
  - System.Reflection.Emit.TypeBuilder.CreateTypeInfo
  - System.Reflection.Emit.TypeBuilder.DeclaringMethod
  - System.Reflection.Emit.TypeBuilder.DeclaringType
  - System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)
  - System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])
  - System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  - System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  - System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  - System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  - System.Reflection.Emit.TypeBuilder.DefineTypeInitializer
  - System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  - System.Reflection.Emit.TypeBuilder.FullName
  - System.Reflection.Emit.TypeBuilder.GenericParameterAttributes
  - System.Reflection.Emit.TypeBuilder.GenericParameterPosition
  - System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl
  - System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)
  - System.Reflection.Emit.TypeBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.TypeBuilder.GetConstructors(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.TypeBuilder.GetElementType
  - System.Reflection.Emit.TypeBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetEvents
  - System.Reflection.Emit.TypeBuilder.GetEvents(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetField(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)
  - System.Reflection.Emit.TypeBuilder.GetFields(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetGenericArguments
  - System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition
  - System.Reflection.Emit.TypeBuilder.GetInterface(System.String,System.Boolean)
  - System.Reflection.Emit.TypeBuilder.GetInterfaceMap(System.Type)
  - System.Reflection.Emit.TypeBuilder.GetInterfaces
  - System.Reflection.Emit.TypeBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetMembers(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)
  - System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.TypeBuilder.GetMethods(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetProperties(System.Reflection.BindingFlags)
  - System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Emit.TypeBuilder.GUID
  - System.Reflection.Emit.TypeBuilder.HasElementTypeImpl
  - System.Reflection.Emit.TypeBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Reflection.Emit.TypeBuilder.IsArrayImpl
  - System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  - System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Type)
  - System.Reflection.Emit.TypeBuilder.IsByRefImpl
  - System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl
  - System.Reflection.Emit.TypeBuilder.IsConstructedGenericType
  - System.Reflection.Emit.TypeBuilder.IsCreated
  - System.Reflection.Emit.TypeBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.TypeBuilder.IsGenericParameter
  - System.Reflection.Emit.TypeBuilder.IsGenericType
  - System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition
  - System.Reflection.Emit.TypeBuilder.IsPointerImpl
  - System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl
  - System.Reflection.Emit.TypeBuilder.IsSecurityCritical
  - System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical
  - System.Reflection.Emit.TypeBuilder.IsSecurityTransparent
  - System.Reflection.Emit.TypeBuilder.IsSubclassOf(System.Type)
  - System.Reflection.Emit.TypeBuilder.MakeArrayType
  - System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)
  - System.Reflection.Emit.TypeBuilder.MakeByRefType
  - System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])
  - System.Reflection.Emit.TypeBuilder.MakePointerType
  - System.Reflection.Emit.TypeBuilder.Module
  - System.Reflection.Emit.TypeBuilder.Name
  - System.Reflection.Emit.TypeBuilder.Namespace
  - System.Reflection.Emit.TypeBuilder.PackingSize
  - System.Reflection.Emit.TypeBuilder.ReflectedType
  - System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.TypeBuilder.SetParent(System.Type)
  - System.Reflection.Emit.TypeBuilder.Size
  - System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.Emit.TypeBuilder.ToString
  - System.Reflection.Emit.TypeBuilder.TypeHandle
  - System.Reflection.Emit.TypeBuilder.TypeToken
  - System.Reflection.Emit.TypeBuilder.UnderlyingSystemType
  - System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize
  langs:
  - csharp
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._TypeBuilder))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class TypeBuilder : System.Reflection.TypeInfo, System.Runtime.InteropServices._TypeBuilder
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Type
  - System.Reflection.TypeInfo
  implements:
  - System.Runtime.InteropServices._TypeBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.TypeInfo.AsType
  - System.Reflection.TypeInfo.DeclaredConstructors
  - System.Reflection.TypeInfo.DeclaredEvents
  - System.Reflection.TypeInfo.DeclaredFields
  - System.Reflection.TypeInfo.DeclaredMembers
  - System.Reflection.TypeInfo.DeclaredMethods
  - System.Reflection.TypeInfo.DeclaredNestedTypes
  - System.Reflection.TypeInfo.DeclaredProperties
  - System.Reflection.TypeInfo.GenericTypeParameters
  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)
  - System.Reflection.TypeInfo.GetDeclaredField(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)
  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)
  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)
  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)
  - System.Reflection.TypeInfo.ImplementedInterfaces
  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo
  - System.Type.Attributes
  - System.Type.ContainsGenericParameters
  - System.Type.DefaultBinder
  - System.Type.Delimiter
  - System.Type.EmptyTypes
  - System.Type.Equals(System.Object)
  - System.Type.Equals(System.Type)
  - System.Type.FilterAttribute
  - System.Type.FilterName
  - System.Type.FilterNameIgnoreCase
  - System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Type.GenericTypeArguments
  - System.Type.GetArrayRank
  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetConstructor(System.Type[])
  - System.Type.GetConstructors
  - System.Type.GetDefaultMembers
  - System.Type.GetEnumName(System.Object)
  - System.Type.GetEnumNames
  - System.Type.GetEnumUnderlyingType
  - System.Type.GetEnumValues
  - System.Type.GetEvent(System.String)
  - System.Type.GetField(System.String)
  - System.Type.GetFields
  - System.Type.GetGenericParameterConstraints
  - System.Type.GetHashCode
  - System.Type.GetInterface(System.String)
  - System.Type.GetMember(System.String)
  - System.Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMembers
  - System.Type.GetMethod(System.String)
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethod(System.String,System.Type[])
  - System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetMethods
  - System.Type.GetNestedType(System.String)
  - System.Type.GetNestedTypes
  - System.Type.GetProperties
  - System.Type.GetProperty(System.String)
  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetProperty(System.String,System.Type)
  - System.Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Type.GetProperty(System.String,System.Type[])
  - System.Type.GetType
  - System.Type.GetType(System.String)
  - System.Type.GetType(System.String,System.Boolean)
  - System.Type.GetType(System.String,System.Boolean,System.Boolean)
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)
  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)
  - System.Type.GetTypeArray(System.Object[])
  - System.Type.GetTypeCode(System.Type)
  - System.Type.GetTypeCodeImpl
  - System.Type.GetTypeFromCLSID(System.Guid)
  - System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)
  - System.Type.GetTypeFromCLSID(System.Guid,System.String)
  - System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)
  - System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)
  - System.Type.GetTypeFromProgID(System.String)
  - System.Type.GetTypeFromProgID(System.String,System.Boolean)
  - System.Type.GetTypeFromProgID(System.String,System.String)
  - System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)
  - System.Type.GetTypeHandle(System.Object)
  - System.Type.HasElementType
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Type.IsAbstract
  - System.Type.IsAnsiClass
  - System.Type.IsArray
  - System.Type.IsAutoClass
  - System.Type.IsAutoLayout
  - System.Type.IsByRef
  - System.Type.IsClass
  - System.Type.IsCOMObject
  - System.Type.IsContextful
  - System.Type.IsContextfulImpl
  - System.Type.IsEnum
  - System.Type.IsEnumDefined(System.Object)
  - System.Type.IsEquivalentTo(System.Type)
  - System.Type.IsExplicitLayout
  - System.Type.IsImport
  - System.Type.IsInstanceOfType(System.Object)
  - System.Type.IsInterface
  - System.Type.IsLayoutSequential
  - System.Type.IsMarshalByRef
  - System.Type.IsMarshalByRefImpl
  - System.Type.IsNested
  - System.Type.IsNestedAssembly
  - System.Type.IsNestedFamANDAssem
  - System.Type.IsNestedFamily
  - System.Type.IsNestedFamORAssem
  - System.Type.IsNestedPrivate
  - System.Type.IsNestedPublic
  - System.Type.IsNotPublic
  - System.Type.IsPointer
  - System.Type.IsPrimitive
  - System.Type.IsPublic
  - System.Type.IsSealed
  - System.Type.IsSerializable
  - System.Type.IsSpecialName
  - System.Type.IsUnicodeClass
  - System.Type.IsValueType
  - System.Type.IsValueTypeImpl
  - System.Type.IsVisible
  - System.Type.MemberType
  - System.Type.Missing
  - System.Type.op_Equality(System.Type,System.Type)
  - System.Type.op_Inequality(System.Type,System.Type)
  - System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
  - System.Type.StructLayoutAttribute
  - System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)
  - System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Type.TypeInitializer
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  id: AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: AddDeclarativeSecurity(SecurityAction,PermissionSet)
  nameWithType: TypeBuilder.AddDeclarativeSecurity(SecurityAction,PermissionSet)
  fullName: System.Reflection.Emit.TypeBuilder.AddDeclarativeSecurity(SecurityAction,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void AddDeclarativeSecurity (System.Security.Permissions.SecurityAction action, System.Security.PermissionSet pset);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: To be added.
    - id: pset
      type: System.Security.PermissionSet
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)
  id: AddInterfaceImplementation(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: AddInterfaceImplementation(Type)
  nameWithType: TypeBuilder.AddInterfaceImplementation(Type)
  fullName: System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void AddInterfaceImplementation (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.Assembly
  id: Assembly
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: Assembly
  nameWithType: TypeBuilder.Assembly
  fullName: System.Reflection.Emit.TypeBuilder.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: TypeBuilder.AssemblyQualifiedName
  fullName: System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.BaseType
  id: BaseType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: BaseType
  nameWithType: TypeBuilder.BaseType
  fullName: System.Reflection.Emit.TypeBuilder.BaseType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type BaseType { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.CreateType
  id: CreateType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: CreateType()
  nameWithType: TypeBuilder.CreateType()
  fullName: System.Reflection.Emit.TypeBuilder.CreateType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Type CreateType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.CreateTypeInfo
  id: CreateTypeInfo
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: CreateTypeInfo()
  nameWithType: TypeBuilder.CreateTypeInfo()
  fullName: System.Reflection.Emit.TypeBuilder.CreateTypeInfo()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.TypeInfo CreateTypeInfo ();
    parameters: []
    return:
      type: System.Reflection.TypeInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DeclaringMethod
  id: DeclaringMethod
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DeclaringMethod
  nameWithType: TypeBuilder.DeclaringMethod
  fullName: System.Reflection.Emit.TypeBuilder.DeclaringMethod
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MethodBase DeclaringMethod { get; }
    return:
      type: System.Reflection.MethodBase
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DeclaringType
  nameWithType: TypeBuilder.DeclaringType
  fullName: System.Reflection.Emit.TypeBuilder.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])
  id: DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineConstructor(MethodAttributes,CallingConventions,Type[])
  nameWithType: TypeBuilder.DefineConstructor(MethodAttributes,CallingConventions,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineConstructor(MethodAttributes,CallingConventions,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.ConstructorBuilder DefineConstructor (System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type[] parameterTypes);
    parameters:
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.ConstructorBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineConstructor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])
  id: DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineConstructor(MethodAttributes,CallingConventions,Type[],Type[][],Type[][])
  nameWithType: TypeBuilder.DefineConstructor(MethodAttributes,CallingConventions,Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.TypeBuilder.DefineConstructor(MethodAttributes,CallingConventions,Type[],Type[][],Type[][])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.ConstructorBuilder DefineConstructor (System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type[] parameterTypes, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);
    parameters:
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: requiredCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: optionalCustomModifiers
      type: System.Type[][]
      description: To be added.
    return:
      type: System.Reflection.Emit.ConstructorBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineConstructor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)
  id: DefineDefaultConstructor(System.Reflection.MethodAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineDefaultConstructor(MethodAttributes)
  nameWithType: TypeBuilder.DefineDefaultConstructor(MethodAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(MethodAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.ConstructorBuilder DefineDefaultConstructor (System.Reflection.MethodAttributes attributes);
    parameters:
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.ConstructorBuilder
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)
  id: DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineEvent(String,EventAttributes,Type)
  nameWithType: TypeBuilder.DefineEvent(String,EventAttributes,Type)
  fullName: System.Reflection.Emit.TypeBuilder.DefineEvent(String,EventAttributes,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.EventBuilder DefineEvent (string name, System.Reflection.EventAttributes attributes, Type eventtype);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.EventAttributes
      description: To be added.
    - id: eventtype
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.EventBuilder
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)
  id: DefineField(System.String,System.Type,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineField(String,Type,FieldAttributes)
  nameWithType: TypeBuilder.DefineField(String,Type,FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineField(String,Type,FieldAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.FieldBuilder DefineField (string fieldName, Type type, System.Reflection.FieldAttributes attributes);
    parameters:
    - id: fieldName
      type: System.String
      description: To be added.
    - id: type
      type: System.Type
      description: To be added.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineField*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)
  id: DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineField(String,Type,Type[],Type[],FieldAttributes)
  nameWithType: TypeBuilder.DefineField(String,Type,Type[],Type[],FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineField(String,Type,Type[],Type[],FieldAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.FieldBuilder DefineField (string fieldName, Type type, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers, System.Reflection.FieldAttributes attributes);
    parameters:
    - id: fieldName
      type: System.String
      description: To be added.
    - id: type
      type: System.Type
      description: To be added.
    - id: requiredCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: optionalCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineField*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])
  id: DefineGenericParameters(System.String[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineGenericParameters(String[])
  nameWithType: TypeBuilder.DefineGenericParameters(String[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.GenericTypeParameterBuilder[] DefineGenericParameters (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: To be added.
    return:
      type: System.Reflection.Emit.GenericTypeParameterBuilder[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  id: DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineInitializedData(String,Byte[],FieldAttributes)
  nameWithType: TypeBuilder.DefineInitializedData(String,Byte[],FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineInitializedData(String,Byte[],FieldAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.FieldBuilder DefineInitializedData (string name, byte[] data, System.Reflection.FieldAttributes attributes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: data
      type: System.Byte[]
      description: To be added.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)
  id: DefineMethod(System.String,System.Reflection.MethodAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineMethod(String,MethodAttributes)
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)
  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineMethod(String,MethodAttributes,CallingConventions)
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineMethod(String,MethodAttributes,Type,Type[])
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: returnTypeRequiredCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: returnTypeOptionalCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: parameterTypeRequiredCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: parameterTypeOptionalCustomModifiers
      type: System.Type[][]
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  id: DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineMethodOverride(MethodInfo,MethodInfo)
  nameWithType: TypeBuilder.DefineMethodOverride(MethodInfo,MethodInfo)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethodOverride(MethodInfo,MethodInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DefineMethodOverride (System.Reflection.MethodInfo methodInfoBody, System.Reflection.MethodInfo methodInfoDeclaration);
    parameters:
    - id: methodInfoBody
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: methodInfoDeclaration
      type: System.Reflection.MethodInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)
  id: DefineNestedType(System.String)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineNestedType(String)
  nameWithType: TypeBuilder.DefineNestedType(String)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineNestedType (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineNestedType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineNestedType(String,TypeAttributes)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineNestedType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineNestedType(String,TypeAttributes,Type)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineNestedType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineNestedType(String,TypeAttributes,Type,Int32)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type,Int32)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent, int typeSize);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    - id: typeSize
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineNestedType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineNestedType(String,TypeAttributes,Type,PackingSize)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type,PackingSize)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type,PackingSize)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packSize);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    - id: packSize
      type: System.Reflection.Emit.PackingSize
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineNestedType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineNestedType(String,TypeAttributes,Type,Type[])
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent, Type[] interfaces);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    - id: interfaces
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineNestedType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  id: DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineNestedType(String,TypeAttributes,Type,PackingSize,Int32)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type,PackingSize,Int32)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type,PackingSize,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packSize, int typeSize);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: parent
      type: System.Type
      description: To be added.
    - id: packSize
      type: System.Reflection.Emit.PackingSize
      description: To be added.
    - id: typeSize
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineNestedType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  id: DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  nameWithType: TypeBuilder.DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: dllName
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: nativeCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: To be added.
    - id: nativeCharSet
      type: System.Runtime.InteropServices.CharSet
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  id: DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  nameWithType: TypeBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: dllName
      type: System.String
      description: To be added.
    - id: entryName
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: nativeCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: To be added.
    - id: nativeCharSet
      type: System.Runtime.InteropServices.CharSet
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  id: DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][],CallingConvention,CharSet)
  nameWithType: TypeBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][],CallingConvention,CharSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: dllName
      type: System.String
      description: To be added.
    - id: entryName
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: returnTypeRequiredCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: returnTypeOptionalCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: parameterTypeRequiredCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: parameterTypeOptionalCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: nativeCallConv
      type: System.Runtime.InteropServices.CallingConvention
      description: To be added.
    - id: nativeCharSet
      type: System.Runtime.InteropServices.CharSet
      description: To be added.
    return:
      type: System.Reflection.Emit.MethodBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])
  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineProperty(String,PropertyAttributes,Type,Type[])
  nameWithType: TypeBuilder.DefineProperty(String,PropertyAttributes,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(String,PropertyAttributes,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.PropertyBuilder DefineProperty (string name, System.Reflection.PropertyAttributes attributes, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.PropertyBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineProperty*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[])
  nameWithType: TypeBuilder.DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.PropertyBuilder DefineProperty (string name, System.Reflection.PropertyAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.Emit.PropertyBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineProperty*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineProperty(String,PropertyAttributes,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: TypeBuilder.DefineProperty(String,PropertyAttributes,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(String,PropertyAttributes,Type,Type[],Type[],Type[],Type[][],Type[][])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.PropertyBuilder DefineProperty (string name, System.Reflection.PropertyAttributes attributes, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: returnTypeRequiredCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: returnTypeOptionalCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: parameterTypeRequiredCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: parameterTypeOptionalCustomModifiers
      type: System.Type[][]
      description: To be added.
    return:
      type: System.Reflection.Emit.PropertyBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineProperty*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  id: DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: TypeBuilder.DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.PropertyBuilder DefineProperty (string name, System.Reflection.PropertyAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: To be added.
    - id: callingConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: returnTypeRequiredCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: returnTypeOptionalCustomModifiers
      type: System.Type[]
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    - id: parameterTypeRequiredCustomModifiers
      type: System.Type[][]
      description: To be added.
    - id: parameterTypeOptionalCustomModifiers
      type: System.Type[][]
      description: To be added.
    return:
      type: System.Reflection.Emit.PropertyBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.DefineProperty*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineTypeInitializer
  id: DefineTypeInitializer
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineTypeInitializer()
  nameWithType: TypeBuilder.DefineTypeInitializer()
  fullName: System.Reflection.Emit.TypeBuilder.DefineTypeInitializer()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.ConstructorBuilder DefineTypeInitializer ();
    parameters: []
    return:
      type: System.Reflection.Emit.ConstructorBuilder
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  id: DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: DefineUninitializedData(String,Int32,FieldAttributes)
  nameWithType: TypeBuilder.DefineUninitializedData(String,Int32,FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineUninitializedData(String,Int32,FieldAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.FieldBuilder DefineUninitializedData (string name, int size, System.Reflection.FieldAttributes attributes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: size
      type: System.Int32
      description: To be added.
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: To be added.
    return:
      type: System.Reflection.Emit.FieldBuilder
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.FullName
  id: FullName
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: FullName
  nameWithType: TypeBuilder.FullName
  fullName: System.Reflection.Emit.TypeBuilder.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string FullName { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GenericParameterAttributes
  id: GenericParameterAttributes
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GenericParameterAttributes
  nameWithType: TypeBuilder.GenericParameterAttributes
  fullName: System.Reflection.Emit.TypeBuilder.GenericParameterAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.GenericParameterAttributes GenericParameterAttributes { get; }
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GenericParameterPosition
  id: GenericParameterPosition
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GenericParameterPosition
  nameWithType: TypeBuilder.GenericParameterPosition
  fullName: System.Reflection.Emit.TypeBuilder.GenericParameterPosition
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GenericParameterPosition { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl
  id: GetAttributeFlagsImpl
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetAttributeFlagsImpl()
  nameWithType: TypeBuilder.GetAttributeFlagsImpl()
  fullName: System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();
    parameters: []
    return:
      type: System.Reflection.TypeAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)
  id: GetConstructor(System.Type,System.Reflection.ConstructorInfo)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetConstructor(Type,ConstructorInfo)
  nameWithType: TypeBuilder.GetConstructor(Type,ConstructorInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructor(Type,ConstructorInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.ConstructorInfo GetConstructor (Type type, System.Reflection.ConstructorInfo constructor);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: To be added.
    return:
      type: System.Reflection.ConstructorInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: TypeBuilder.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.ConstructorInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: TypeBuilder.GetConstructors(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.ConstructorInfo[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: TypeBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.GetCustomAttributes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: TypeBuilder.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.GetCustomAttributes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetElementType
  id: GetElementType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetElementType()
  nameWithType: TypeBuilder.GetElementType()
  fullName: System.Reflection.Emit.TypeBuilder.GetElementType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: TypeBuilder.GetEvent(String,BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.EventInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetEvents
  id: GetEvents
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetEvents()
  nameWithType: TypeBuilder.GetEvents()
  fullName: System.Reflection.Emit.TypeBuilder.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.GetEvents*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: TypeBuilder.GetEvents(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.EventInfo[]
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.GetEvents*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: TypeBuilder.GetField(String,BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.GetField*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)
  id: GetField(System.Type,System.Reflection.FieldInfo)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetField(Type,FieldInfo)
  nameWithType: TypeBuilder.GetField(Type,FieldInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetField(Type,FieldInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.FieldInfo GetField (Type type, System.Reflection.FieldInfo field);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: field
      type: System.Reflection.FieldInfo
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.GetField*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: TypeBuilder.GetFields(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.FieldInfo[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetGenericArguments
  id: GetGenericArguments
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetGenericArguments()
  nameWithType: TypeBuilder.GetGenericArguments()
  fullName: System.Reflection.Emit.TypeBuilder.GetGenericArguments()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type[] GetGenericArguments ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition
  id: GetGenericTypeDefinition
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetGenericTypeDefinition()
  nameWithType: TypeBuilder.GetGenericTypeDefinition()
  fullName: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type GetGenericTypeDefinition ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetInterface(String,Boolean)
  nameWithType: TypeBuilder.GetInterface(String,Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetInterface(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: TypeBuilder.GetInterfaceMap(Type)
  fullName: System.Reflection.Emit.TypeBuilder.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.InterfaceMapping
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetInterfaces
  id: GetInterfaces
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: TypeBuilder.GetInterfaces()
  fullName: System.Reflection.Emit.TypeBuilder.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: TypeBuilder.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: type
      type: System.Reflection.MemberTypes
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: TypeBuilder.GetMembers(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MemberInfo[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)
  id: GetMethod(System.Type,System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetMethod(Type,MethodInfo)
  nameWithType: TypeBuilder.GetMethod(Type,MethodInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetMethod(Type,MethodInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.MethodInfo GetMethod (Type type, System.Reflection.MethodInfo method);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: method
      type: System.Reflection.MethodInfo
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: TypeBuilder.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Emit.TypeBuilder.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: TypeBuilder.GetMethods(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MethodInfo[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetNestedType(String,BindingFlags)
  nameWithType: TypeBuilder.GetNestedType(String,BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetNestedType(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: TypeBuilder.GetNestedTypes(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Type[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: TypeBuilder.GetProperties(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: TypeBuilder.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Reflection.Emit.TypeBuilder.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.PropertyInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.GUID
  id: GUID
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: GUID
  nameWithType: TypeBuilder.GUID
  fullName: System.Reflection.Emit.TypeBuilder.GUID
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Guid GUID { get; }
    return:
      type: System.Guid
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.HasElementTypeImpl
  id: HasElementTypeImpl
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: HasElementTypeImpl()
  nameWithType: TypeBuilder.HasElementTypeImpl()
  fullName: System.Reflection.Emit.TypeBuilder.HasElementTypeImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool HasElementTypeImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: TypeBuilder.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Reflection.Emit.TypeBuilder.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: target
      type: System.Object
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: namedParameters
      type: System.String[]
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsArrayImpl
  id: IsArrayImpl
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsArrayImpl()
  nameWithType: TypeBuilder.IsArrayImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsArrayImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool IsArrayImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  id: IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsAssignableFrom(TypeInfo)
  nameWithType: TypeBuilder.IsAssignableFrom(TypeInfo)
  fullName: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(TypeInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.IsAssignableFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsAssignableFrom(Type)
  nameWithType: TypeBuilder.IsAssignableFrom(Type)
  fullName: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsAssignableFrom (Type c);
    parameters:
    - id: c
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.IsAssignableFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsByRefImpl
  id: IsByRefImpl
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsByRefImpl()
  nameWithType: TypeBuilder.IsByRefImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsByRefImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool IsByRefImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl
  id: IsCOMObjectImpl
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsCOMObjectImpl()
  nameWithType: TypeBuilder.IsCOMObjectImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool IsCOMObjectImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsConstructedGenericType
  id: IsConstructedGenericType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsConstructedGenericType
  nameWithType: TypeBuilder.IsConstructedGenericType
  fullName: System.Reflection.Emit.TypeBuilder.IsConstructedGenericType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsConstructedGenericType { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsCreated
  id: IsCreated
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsCreated()
  nameWithType: TypeBuilder.IsCreated()
  fullName: System.Reflection.Emit.TypeBuilder.IsCreated()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsCreated ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: TypeBuilder.IsDefined(Type,Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsGenericParameter
  id: IsGenericParameter
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsGenericParameter
  nameWithType: TypeBuilder.IsGenericParameter
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericParameter
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsGenericParameter { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsGenericType
  id: IsGenericType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsGenericType
  nameWithType: TypeBuilder.IsGenericType
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsGenericType { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition
  id: IsGenericTypeDefinition
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsGenericTypeDefinition
  nameWithType: TypeBuilder.IsGenericTypeDefinition
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsGenericTypeDefinition { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsPointerImpl
  id: IsPointerImpl
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsPointerImpl()
  nameWithType: TypeBuilder.IsPointerImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsPointerImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool IsPointerImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl
  id: IsPrimitiveImpl
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsPrimitiveImpl()
  nameWithType: TypeBuilder.IsPrimitiveImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool IsPrimitiveImpl ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsSecurityCritical
  id: IsSecurityCritical
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsSecurityCritical
  nameWithType: TypeBuilder.IsSecurityCritical
  fullName: System.Reflection.Emit.TypeBuilder.IsSecurityCritical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsSecurityCritical { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical
  id: IsSecuritySafeCritical
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsSecuritySafeCritical
  nameWithType: TypeBuilder.IsSecuritySafeCritical
  fullName: System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsSecuritySafeCritical { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsSecurityTransparent
  id: IsSecurityTransparent
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsSecurityTransparent
  nameWithType: TypeBuilder.IsSecurityTransparent
  fullName: System.Reflection.Emit.TypeBuilder.IsSecurityTransparent
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsSecurityTransparent { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: IsSubclassOf(Type)
  nameWithType: TypeBuilder.IsSubclassOf(Type)
  fullName: System.Reflection.Emit.TypeBuilder.IsSubclassOf(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsSubclassOf (Type c);
    parameters:
    - id: c
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType
  id: MakeArrayType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: MakeArrayType()
  nameWithType: TypeBuilder.MakeArrayType()
  fullName: System.Reflection.Emit.TypeBuilder.MakeArrayType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type MakeArrayType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.MakeArrayType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)
  id: MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: MakeArrayType(Int32)
  nameWithType: TypeBuilder.MakeArrayType(Int32)
  fullName: System.Reflection.Emit.TypeBuilder.MakeArrayType(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type MakeArrayType (int rank);
    parameters:
    - id: rank
      type: System.Int32
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.MakeArrayType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.MakeByRefType
  id: MakeByRefType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: MakeByRefType()
  nameWithType: TypeBuilder.MakeByRefType()
  fullName: System.Reflection.Emit.TypeBuilder.MakeByRefType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type MakeByRefType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])
  id: MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: MakeGenericType(Type[])
  nameWithType: TypeBuilder.MakeGenericType(Type[])
  fullName: System.Reflection.Emit.TypeBuilder.MakeGenericType(Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type MakeGenericType (Type[] typeArguments);
    parameters:
    - id: typeArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.MakePointerType
  id: MakePointerType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: MakePointerType()
  nameWithType: TypeBuilder.MakePointerType()
  fullName: System.Reflection.Emit.TypeBuilder.MakePointerType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type MakePointerType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.Module
  id: Module
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: Module
  nameWithType: TypeBuilder.Module
  fullName: System.Reflection.Emit.TypeBuilder.Module
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.Name
  id: Name
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: Name
  nameWithType: TypeBuilder.Name
  fullName: System.Reflection.Emit.TypeBuilder.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.Namespace
  id: Namespace
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: Namespace
  nameWithType: TypeBuilder.Namespace
  fullName: System.Reflection.Emit.TypeBuilder.Namespace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string Namespace { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.PackingSize
  id: PackingSize
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: PackingSize
  nameWithType: TypeBuilder.PackingSize
  fullName: System.Reflection.Emit.TypeBuilder.PackingSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.PackingSize PackingSize { get; }
    return:
      type: System.Reflection.Emit.PackingSize
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: ReflectedType
  nameWithType: TypeBuilder.ReflectedType
  fullName: System.Reflection.Emit.TypeBuilder.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: TypeBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.SetCustomAttribute*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: TypeBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: To be added.
    - id: binaryAttribute
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Emit.TypeBuilder.SetCustomAttribute*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.SetParent(System.Type)
  id: SetParent(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: SetParent(Type)
  nameWithType: TypeBuilder.SetParent(Type)
  fullName: System.Reflection.Emit.TypeBuilder.SetParent(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetParent (Type parent);
    parameters:
    - id: parent
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.Size
  id: Size
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: Size
  nameWithType: TypeBuilder.Size
  fullName: System.Reflection.Emit.TypeBuilder.Size
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Size { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_TypeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _TypeBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_TypeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _TypeBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_TypeBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(UInt32)
  nameWithType: TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _TypeBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_TypeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._TypeBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: TypeBuilder.System.Runtime.InteropServices._TypeBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.TypeBuilder.System.Runtime.InteropServices._TypeBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _TypeBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: ToString()
  nameWithType: TypeBuilder.ToString()
  fullName: System.Reflection.Emit.TypeBuilder.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.TypeHandle
  id: TypeHandle
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: TypeHandle
  nameWithType: TypeBuilder.TypeHandle
  fullName: System.Reflection.Emit.TypeBuilder.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.TypeToken
  id: TypeToken
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: TypeToken
  nameWithType: TypeBuilder.TypeToken
  fullName: System.Reflection.Emit.TypeBuilder.TypeToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.TypeToken TypeToken { get; }
    return:
      type: System.Reflection.Emit.TypeToken
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: TypeBuilder.UnderlyingSystemType
  fullName: System.Reflection.Emit.TypeBuilder.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize
  id: UnspecifiedTypeSize
  parent: System.Reflection.Emit.TypeBuilder
  langs:
  - csharp
  name: UnspecifiedTypeSize
  nameWithType: TypeBuilder.UnspecifiedTypeSize
  fullName: System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public const int UnspecifiedTypeSize = 0;
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Reflection.TypeInfo
  isExternal: false
  name: System.Reflection.TypeInfo
- uid: System.Reflection.Emit.TypeBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: AddDeclarativeSecurity(SecurityAction,PermissionSet)
  nameWithType: TypeBuilder.AddDeclarativeSecurity(SecurityAction,PermissionSet)
  fullName: System.Reflection.Emit.TypeBuilder.AddDeclarativeSecurity(SecurityAction,PermissionSet)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: AddInterfaceImplementation(Type)
  nameWithType: TypeBuilder.AddInterfaceImplementation(Type)
  fullName: System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.Assembly
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: Assembly
  nameWithType: TypeBuilder.Assembly
  fullName: System.Reflection.Emit.TypeBuilder.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: TypeBuilder.AssemblyQualifiedName
  fullName: System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.TypeBuilder.BaseType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: BaseType
  nameWithType: TypeBuilder.BaseType
  fullName: System.Reflection.Emit.TypeBuilder.BaseType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.CreateType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: CreateType()
  nameWithType: TypeBuilder.CreateType()
  fullName: System.Reflection.Emit.TypeBuilder.CreateType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.CreateTypeInfo
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: CreateTypeInfo()
  nameWithType: TypeBuilder.CreateTypeInfo()
  fullName: System.Reflection.Emit.TypeBuilder.CreateTypeInfo()
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection.Emit.TypeBuilder.DeclaringMethod
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DeclaringMethod
  nameWithType: TypeBuilder.DeclaringMethod
  fullName: System.Reflection.Emit.TypeBuilder.DeclaringMethod
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Reflection.Emit.TypeBuilder.DeclaringType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: TypeBuilder.DeclaringType
  fullName: System.Reflection.Emit.TypeBuilder.DeclaringType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineConstructor(MethodAttributes,CallingConventions,Type[])
  nameWithType: TypeBuilder.DefineConstructor(MethodAttributes,CallingConventions,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineConstructor(MethodAttributes,CallingConventions,Type[])
- uid: System.Reflection.Emit.ConstructorBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: ConstructorBuilder
  nameWithType: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineConstructor(MethodAttributes,CallingConventions,Type[],Type[][],Type[][])
  nameWithType: TypeBuilder.DefineConstructor(MethodAttributes,CallingConventions,Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.TypeBuilder.DefineConstructor(MethodAttributes,CallingConventions,Type[],Type[][],Type[][])
- uid: System.Reflection.Emit.ConstructorBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: ConstructorBuilder
  nameWithType: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineDefaultConstructor(MethodAttributes)
  nameWithType: TypeBuilder.DefineDefaultConstructor(MethodAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(MethodAttributes)
- uid: System.Reflection.Emit.ConstructorBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: ConstructorBuilder
  nameWithType: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineEvent(String,EventAttributes,Type)
  nameWithType: TypeBuilder.DefineEvent(String,EventAttributes,Type)
  fullName: System.Reflection.Emit.TypeBuilder.DefineEvent(String,EventAttributes,Type)
- uid: System.Reflection.Emit.EventBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: EventBuilder
  nameWithType: EventBuilder
  fullName: System.Reflection.Emit.EventBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.EventAttributes
  parent: System.Reflection
  isExternal: false
  name: EventAttributes
  nameWithType: EventAttributes
  fullName: System.Reflection.EventAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineField(String,Type,FieldAttributes)
  nameWithType: TypeBuilder.DefineField(String,Type,FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineField(String,Type,FieldAttributes)
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: FieldBuilder
  nameWithType: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineField(String,Type,Type[],Type[],FieldAttributes)
  nameWithType: TypeBuilder.DefineField(String,Type,Type[],Type[],FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineField(String,Type,Type[],Type[],FieldAttributes)
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: FieldBuilder
  nameWithType: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineGenericParameters(String[])
  nameWithType: TypeBuilder.DefineGenericParameters(String[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineGenericParameters(String[])
- uid: System.Reflection.Emit.GenericTypeParameterBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: GenericTypeParameterBuilder
  nameWithType: GenericTypeParameterBuilder
  fullName: System.Reflection.Emit.GenericTypeParameterBuilder[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineInitializedData(String,Byte[],FieldAttributes)
  nameWithType: TypeBuilder.DefineInitializedData(String,Byte[],FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineInitializedData(String,Byte[],FieldAttributes)
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: FieldBuilder
  nameWithType: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineMethod(String,MethodAttributes)
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineMethod(String,MethodAttributes,CallingConventions)
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineMethod(String,MethodAttributes,Type,Type[])
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes,Type,Type[])
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[])
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineMethodOverride(MethodInfo,MethodInfo)
  nameWithType: TypeBuilder.DefineMethodOverride(MethodInfo,MethodInfo)
  fullName: System.Reflection.Emit.TypeBuilder.DefineMethodOverride(MethodInfo,MethodInfo)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineNestedType(String)
  nameWithType: TypeBuilder.DefineNestedType(String)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String)
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineNestedType(String,TypeAttributes)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes)
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineNestedType(String,TypeAttributes,Type)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type)
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineNestedType(String,TypeAttributes,Type,Int32)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type,Int32)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type,Int32)
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineNestedType(String,TypeAttributes,Type,PackingSize)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type,PackingSize)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type,PackingSize)
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.PackingSize
  parent: System.Reflection.Emit
  isExternal: false
  name: PackingSize
  nameWithType: PackingSize
  fullName: System.Reflection.Emit.PackingSize
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineNestedType(String,TypeAttributes,Type,Type[])
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type,Type[])
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineNestedType(String,TypeAttributes,Type,PackingSize,Int32)
  nameWithType: TypeBuilder.DefineNestedType(String,TypeAttributes,Type,PackingSize,Int32)
  fullName: System.Reflection.Emit.TypeBuilder.DefineNestedType(String,TypeAttributes,Type,PackingSize,Int32)
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.PackingSize
  parent: System.Reflection.Emit
  isExternal: false
  name: PackingSize
  nameWithType: PackingSize
  fullName: System.Reflection.Emit.PackingSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  nameWithType: TypeBuilder.DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
- uid: System.Runtime.InteropServices.CharSet
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CharSet
  nameWithType: CharSet
  fullName: System.Runtime.InteropServices.CharSet
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  nameWithType: TypeBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],CallingConvention,CharSet)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
- uid: System.Runtime.InteropServices.CharSet
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CharSet
  nameWithType: CharSet
  fullName: System.Runtime.InteropServices.CharSet
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][],CallingConvention,CharSet)
  nameWithType: TypeBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][],CallingConvention,CharSet)
  fullName: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(String,String,String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][],CallingConvention,CharSet)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
- uid: System.Runtime.InteropServices.CharSet
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CharSet
  nameWithType: CharSet
  fullName: System.Runtime.InteropServices.CharSet
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineProperty(String,PropertyAttributes,Type,Type[])
  nameWithType: TypeBuilder.DefineProperty(String,PropertyAttributes,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(String,PropertyAttributes,Type,Type[])
- uid: System.Reflection.Emit.PropertyBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: System.Reflection.Emit.PropertyBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[])
  nameWithType: TypeBuilder.DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[])
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[])
- uid: System.Reflection.Emit.PropertyBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: System.Reflection.Emit.PropertyBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineProperty(String,PropertyAttributes,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: TypeBuilder.DefineProperty(String,PropertyAttributes,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(String,PropertyAttributes,Type,Type[],Type[],Type[],Type[][],Type[][])
- uid: System.Reflection.Emit.PropertyBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: System.Reflection.Emit.PropertyBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  nameWithType: TypeBuilder.DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
  fullName: System.Reflection.Emit.TypeBuilder.DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
- uid: System.Reflection.Emit.PropertyBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: System.Reflection.Emit.PropertyBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[][]
- uid: System.Reflection.Emit.TypeBuilder.DefineTypeInitializer
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineTypeInitializer()
  nameWithType: TypeBuilder.DefineTypeInitializer()
  fullName: System.Reflection.Emit.TypeBuilder.DefineTypeInitializer()
- uid: System.Reflection.Emit.ConstructorBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: ConstructorBuilder
  nameWithType: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
- uid: System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineUninitializedData(String,Int32,FieldAttributes)
  nameWithType: TypeBuilder.DefineUninitializedData(String,Int32,FieldAttributes)
  fullName: System.Reflection.Emit.TypeBuilder.DefineUninitializedData(String,Int32,FieldAttributes)
- uid: System.Reflection.Emit.FieldBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: FieldBuilder
  nameWithType: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.Emit.TypeBuilder.FullName
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: FullName
  nameWithType: TypeBuilder.FullName
  fullName: System.Reflection.Emit.TypeBuilder.FullName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.TypeBuilder.GenericParameterAttributes
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: TypeBuilder.GenericParameterAttributes
  fullName: System.Reflection.Emit.TypeBuilder.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.Emit.TypeBuilder.GenericParameterPosition
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GenericParameterPosition
  nameWithType: TypeBuilder.GenericParameterPosition
  fullName: System.Reflection.Emit.TypeBuilder.GenericParameterPosition
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetAttributeFlagsImpl()
  nameWithType: TypeBuilder.GetAttributeFlagsImpl()
  fullName: System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl()
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetConstructor(Type,ConstructorInfo)
  nameWithType: TypeBuilder.GetConstructor(Type,ConstructorInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructor(Type,ConstructorInfo)
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.Emit.TypeBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: TypeBuilder.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.ParameterModifier
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
- uid: System.Reflection.Emit.TypeBuilder.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: TypeBuilder.GetConstructors(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetConstructors(BindingFlags)
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: TypeBuilder.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: TypeBuilder.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetCustomAttributes(Type,Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.GetElementType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetElementType()
  nameWithType: TypeBuilder.GetElementType()
  fullName: System.Reflection.Emit.TypeBuilder.GetElementType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: TypeBuilder.GetEvent(String,BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetEvent(String,BindingFlags)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: false
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetEvents
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetEvents()
  nameWithType: TypeBuilder.GetEvents()
  fullName: System.Reflection.Emit.TypeBuilder.GetEvents()
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: false
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
- uid: System.Reflection.Emit.TypeBuilder.GetEvents(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: TypeBuilder.GetEvents(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetEvents(BindingFlags)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: false
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: TypeBuilder.GetField(String,BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetField(Type,FieldInfo)
  nameWithType: TypeBuilder.GetField(Type,FieldInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetField(Type,FieldInfo)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.Emit.TypeBuilder.GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: TypeBuilder.GetFields(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetGenericArguments
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetGenericArguments()
  nameWithType: TypeBuilder.GetGenericArguments()
  fullName: System.Reflection.Emit.TypeBuilder.GetGenericArguments()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetGenericTypeDefinition()
  nameWithType: TypeBuilder.GetGenericTypeDefinition()
  fullName: System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.GetInterface(System.String,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetInterface(String,Boolean)
  nameWithType: TypeBuilder.GetInterface(String,Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.GetInterface(String,Boolean)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.GetInterfaceMap(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: TypeBuilder.GetInterfaceMap(Type)
  fullName: System.Reflection.Emit.TypeBuilder.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: false
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.GetInterfaces
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetInterfaces()
  nameWithType: TypeBuilder.GetInterfaces()
  fullName: System.Reflection.Emit.TypeBuilder.GetInterfaces()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: TypeBuilder.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMember(String,MemberTypes,BindingFlags)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetMembers(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: TypeBuilder.GetMembers(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMembers(BindingFlags)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetMethod(Type,MethodInfo)
  nameWithType: TypeBuilder.GetMethod(Type,MethodInfo)
  fullName: System.Reflection.Emit.TypeBuilder.GetMethod(Type,MethodInfo)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: TypeBuilder.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Emit.TypeBuilder.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.ParameterModifier
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
- uid: System.Reflection.Emit.TypeBuilder.GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: TypeBuilder.GetMethods(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetNestedType(String,BindingFlags)
  nameWithType: TypeBuilder.GetNestedType(String,BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetNestedType(String,BindingFlags)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: TypeBuilder.GetNestedTypes(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetNestedTypes(BindingFlags)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetProperties(System.Reflection.BindingFlags)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: TypeBuilder.GetProperties(BindingFlags)
  fullName: System.Reflection.Emit.TypeBuilder.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: TypeBuilder.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Reflection.Emit.TypeBuilder.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.ParameterModifier
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
- uid: System.Reflection.Emit.TypeBuilder.GUID
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GUID
  nameWithType: TypeBuilder.GUID
  fullName: System.Reflection.Emit.TypeBuilder.GUID
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Reflection.Emit.TypeBuilder.HasElementTypeImpl
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: HasElementTypeImpl()
  nameWithType: TypeBuilder.HasElementTypeImpl()
  fullName: System.Reflection.Emit.TypeBuilder.HasElementTypeImpl()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: TypeBuilder.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Reflection.Emit.TypeBuilder.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Reflection.ParameterModifier
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Reflection.Emit.TypeBuilder.IsArrayImpl
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsArrayImpl()
  nameWithType: TypeBuilder.IsArrayImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsArrayImpl()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsAssignableFrom(TypeInfo)
  nameWithType: TypeBuilder.IsAssignableFrom(TypeInfo)
  fullName: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(TypeInfo)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: TypeBuilder.IsAssignableFrom(Type)
  fullName: System.Reflection.Emit.TypeBuilder.IsAssignableFrom(Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.IsByRefImpl
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsByRefImpl()
  nameWithType: TypeBuilder.IsByRefImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsByRefImpl()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsCOMObjectImpl()
  nameWithType: TypeBuilder.IsCOMObjectImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsConstructedGenericType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsConstructedGenericType
  nameWithType: TypeBuilder.IsConstructedGenericType
  fullName: System.Reflection.Emit.TypeBuilder.IsConstructedGenericType
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsCreated
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsCreated()
  nameWithType: TypeBuilder.IsCreated()
  fullName: System.Reflection.Emit.TypeBuilder.IsCreated()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: TypeBuilder.IsDefined(Type,Boolean)
  fullName: System.Reflection.Emit.TypeBuilder.IsDefined(Type,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsGenericParameter
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsGenericParameter
  nameWithType: TypeBuilder.IsGenericParameter
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericParameter
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsGenericType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsGenericType
  nameWithType: TypeBuilder.IsGenericType
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericType
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsGenericTypeDefinition
  nameWithType: TypeBuilder.IsGenericTypeDefinition
  fullName: System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsPointerImpl
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsPointerImpl()
  nameWithType: TypeBuilder.IsPointerImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsPointerImpl()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsPrimitiveImpl()
  nameWithType: TypeBuilder.IsPrimitiveImpl()
  fullName: System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsSecurityCritical
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsSecurityCritical
  nameWithType: TypeBuilder.IsSecurityCritical
  fullName: System.Reflection.Emit.TypeBuilder.IsSecurityCritical
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsSecuritySafeCritical
  nameWithType: TypeBuilder.IsSecuritySafeCritical
  fullName: System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsSecurityTransparent
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsSecurityTransparent
  nameWithType: TypeBuilder.IsSecurityTransparent
  fullName: System.Reflection.Emit.TypeBuilder.IsSecurityTransparent
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.TypeBuilder.IsSubclassOf(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: TypeBuilder.IsSubclassOf(Type)
  fullName: System.Reflection.Emit.TypeBuilder.IsSubclassOf(Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: MakeArrayType()
  nameWithType: TypeBuilder.MakeArrayType()
  fullName: System.Reflection.Emit.TypeBuilder.MakeArrayType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: MakeArrayType(Int32)
  nameWithType: TypeBuilder.MakeArrayType(Int32)
  fullName: System.Reflection.Emit.TypeBuilder.MakeArrayType(Int32)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.TypeBuilder.MakeByRefType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: MakeByRefType()
  nameWithType: TypeBuilder.MakeByRefType()
  fullName: System.Reflection.Emit.TypeBuilder.MakeByRefType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: MakeGenericType(Type[])
  nameWithType: TypeBuilder.MakeGenericType(Type[])
  fullName: System.Reflection.Emit.TypeBuilder.MakeGenericType(Type[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Emit.TypeBuilder.MakePointerType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: MakePointerType()
  nameWithType: TypeBuilder.MakePointerType()
  fullName: System.Reflection.Emit.TypeBuilder.MakePointerType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.Module
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: Module
  nameWithType: TypeBuilder.Module
  fullName: System.Reflection.Emit.TypeBuilder.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.TypeBuilder.Name
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: Name
  nameWithType: TypeBuilder.Name
  fullName: System.Reflection.Emit.TypeBuilder.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.TypeBuilder.Namespace
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: Namespace
  nameWithType: TypeBuilder.Namespace
  fullName: System.Reflection.Emit.TypeBuilder.Namespace
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.TypeBuilder.PackingSize
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: PackingSize
  nameWithType: TypeBuilder.PackingSize
  fullName: System.Reflection.Emit.TypeBuilder.PackingSize
- uid: System.Reflection.Emit.PackingSize
  parent: System.Reflection.Emit
  isExternal: false
  name: PackingSize
  nameWithType: PackingSize
  fullName: System.Reflection.Emit.PackingSize
- uid: System.Reflection.Emit.TypeBuilder.ReflectedType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: TypeBuilder.ReflectedType
  fullName: System.Reflection.Emit.TypeBuilder.ReflectedType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: TypeBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: TypeBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.TypeBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Reflection.Emit.TypeBuilder.SetParent(System.Type)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: SetParent(Type)
  nameWithType: TypeBuilder.SetParent(Type)
  fullName: System.Reflection.Emit.TypeBuilder.SetParent(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.Size
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: Size
  nameWithType: TypeBuilder.Size
  fullName: System.Reflection.Emit.TypeBuilder.Size
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(UInt32)
  nameWithType: TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.TypeBuilder.System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: System.Runtime.InteropServices._TypeBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: TypeBuilder.System.Runtime.InteropServices._TypeBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.TypeBuilder.System.Runtime.InteropServices._TypeBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.TypeBuilder.ToString
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: ToString()
  nameWithType: TypeBuilder.ToString()
  fullName: System.Reflection.Emit.TypeBuilder.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.TypeBuilder.TypeHandle
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: TypeHandle
  nameWithType: TypeBuilder.TypeHandle
  fullName: System.Reflection.Emit.TypeBuilder.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Reflection.Emit.TypeBuilder.TypeToken
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: TypeToken
  nameWithType: TypeBuilder.TypeToken
  fullName: System.Reflection.Emit.TypeBuilder.TypeToken
- uid: System.Reflection.Emit.TypeToken
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeToken
  nameWithType: TypeToken
  fullName: System.Reflection.Emit.TypeToken
- uid: System.Reflection.Emit.TypeBuilder.UnderlyingSystemType
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: TypeBuilder.UnderlyingSystemType
  fullName: System.Reflection.Emit.TypeBuilder.UnderlyingSystemType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: UnspecifiedTypeSize
  nameWithType: TypeBuilder.UnspecifiedTypeSize
  fullName: System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.TypeBuilder.DefineConstructor*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineConstructor
  nameWithType: TypeBuilder.DefineConstructor
- uid: System.Reflection.Emit.TypeBuilder.DefineField*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineField
  nameWithType: TypeBuilder.DefineField
- uid: System.Reflection.Emit.TypeBuilder.DefineMethod*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineMethod
  nameWithType: TypeBuilder.DefineMethod
- uid: System.Reflection.Emit.TypeBuilder.DefineNestedType*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineNestedType
  nameWithType: TypeBuilder.DefineNestedType
- uid: System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefinePInvokeMethod
  nameWithType: TypeBuilder.DefinePInvokeMethod
- uid: System.Reflection.Emit.TypeBuilder.DefineProperty*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: DefineProperty
  nameWithType: TypeBuilder.DefineProperty
- uid: System.Reflection.Emit.TypeBuilder.GetCustomAttributes*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetCustomAttributes
  nameWithType: TypeBuilder.GetCustomAttributes
- uid: System.Reflection.Emit.TypeBuilder.GetEvents*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetEvents
  nameWithType: TypeBuilder.GetEvents
- uid: System.Reflection.Emit.TypeBuilder.GetField*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: GetField
  nameWithType: TypeBuilder.GetField
- uid: System.Reflection.Emit.TypeBuilder.IsAssignableFrom*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: IsAssignableFrom
  nameWithType: TypeBuilder.IsAssignableFrom
- uid: System.Reflection.Emit.TypeBuilder.MakeArrayType*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: MakeArrayType
  nameWithType: TypeBuilder.MakeArrayType
- uid: System.Reflection.Emit.TypeBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.TypeBuilder
  isExternal: false
  name: SetCustomAttribute
  nameWithType: TypeBuilder.SetCustomAttribute
