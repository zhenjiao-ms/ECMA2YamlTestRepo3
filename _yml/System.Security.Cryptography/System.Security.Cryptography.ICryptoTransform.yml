### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ICryptoTransform
  id: ICryptoTransform
  children:
  - System.Security.Cryptography.ICryptoTransform.CanReuseTransform
  - System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
  - System.Security.Cryptography.ICryptoTransform.InputBlockSize
  - System.Security.Cryptography.ICryptoTransform.OutputBlockSize
  - System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
  type: Interface
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ICryptoTransform : IDisposable
  implements:
  - System.IDisposable
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.ICryptoTransform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: ICryptoTransform.CanReuseTransform
  fullName: System.Security.Cryptography.ICryptoTransform.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: ICryptoTransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.ICryptoTransform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: ICryptoTransform.InputBlockSize
  fullName: System.Security.Cryptography.ICryptoTransform.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int InputBlockSize { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.ICryptoTransform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: ICryptoTransform.OutputBlockSize
  fullName: System.Security.Cryptography.ICryptoTransform.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: ICryptoTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.ICryptoTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: To be added.
    - id: inputOffset
      type: System.Int32
      description: To be added.
    - id: inputCount
      type: System.Int32
      description: To be added.
    - id: outputBuffer
      type: System.Byte[]
      description: To be added.
    - id: outputOffset
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.ICryptoTransform
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: ICryptoTransform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: To be added.
    - id: inputOffset
      type: System.Int32
      description: To be added.
    - id: inputCount
      type: System.Int32
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.Cryptography.ICryptoTransform.CanReuseTransform
  parent: System.Security.Cryptography.ICryptoTransform
  isExternal: false
  name: CanReuseTransform
  nameWithType: ICryptoTransform.CanReuseTransform
  fullName: System.Security.Cryptography.ICryptoTransform.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.ICryptoTransform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: ICryptoTransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.ICryptoTransform.InputBlockSize
  parent: System.Security.Cryptography.ICryptoTransform
  isExternal: false
  name: InputBlockSize
  nameWithType: ICryptoTransform.InputBlockSize
  fullName: System.Security.Cryptography.ICryptoTransform.InputBlockSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.ICryptoTransform.OutputBlockSize
  parent: System.Security.Cryptography.ICryptoTransform
  isExternal: false
  name: OutputBlockSize
  nameWithType: ICryptoTransform.OutputBlockSize
  fullName: System.Security.Cryptography.ICryptoTransform.OutputBlockSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.ICryptoTransform
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: ICryptoTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.ICryptoTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.ICryptoTransform
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: ICryptoTransform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
