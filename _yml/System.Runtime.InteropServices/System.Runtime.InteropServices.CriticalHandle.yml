### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.CriticalHandle
  id: CriticalHandle
  children:
  - System.Runtime.InteropServices.CriticalHandle.#ctor(System.IntPtr)
  - System.Runtime.InteropServices.CriticalHandle.Close
  - System.Runtime.InteropServices.CriticalHandle.Dispose
  - System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)
  - System.Runtime.InteropServices.CriticalHandle.Finalize
  - System.Runtime.InteropServices.CriticalHandle.handle
  - System.Runtime.InteropServices.CriticalHandle.IsClosed
  - System.Runtime.InteropServices.CriticalHandle.IsInvalid
  - System.Runtime.InteropServices.CriticalHandle.ReleaseHandle
  - System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)
  - System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid
  langs:
  - csharp
  name: CriticalHandle
  nameWithType: CriticalHandle
  fullName: System.Runtime.InteropServices.CriticalHandle
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class CriticalHandle : System.Runtime.ConstrainedExecution.CriticalFinalizerObject, IDisposable
  inheritance:
  - System.Object
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: CriticalHandle(IntPtr)
  nameWithType: CriticalHandle.CriticalHandle(IntPtr)
  fullName: System.Runtime.InteropServices.CriticalHandle.CriticalHandle(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected CriticalHandle (IntPtr invalidHandleValue);
    parameters:
    - id: invalidHandleValue
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.Close
  id: Close
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: Close()
  nameWithType: CriticalHandle.Close()
  fullName: System.Runtime.InteropServices.CriticalHandle.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Close ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.Dispose
  id: Dispose
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: Dispose()
  nameWithType: CriticalHandle.Dispose()
  fullName: System.Runtime.InteropServices.CriticalHandle.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Runtime.InteropServices.CriticalHandle.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CriticalHandle.Dispose(Boolean)
  fullName: System.Runtime.InteropServices.CriticalHandle.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: System.Runtime.InteropServices.CriticalHandle.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.Finalize
  id: Finalize
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: Finalize()
  nameWithType: CriticalHandle.Finalize()
  fullName: System.Runtime.InteropServices.CriticalHandle.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: ~CriticalHandle ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.handle
  id: handle
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: handle
  nameWithType: CriticalHandle.handle
  fullName: System.Runtime.InteropServices.CriticalHandle.handle
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected IntPtr handle;
    return:
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.IsClosed
  id: IsClosed
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: IsClosed
  nameWithType: CriticalHandle.IsClosed
  fullName: System.Runtime.InteropServices.CriticalHandle.IsClosed
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.IsInvalid
  id: IsInvalid
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: IsInvalid
  nameWithType: CriticalHandle.IsInvalid
  fullName: System.Runtime.InteropServices.CriticalHandle.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.ReleaseHandle
  id: ReleaseHandle
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: CriticalHandle.ReleaseHandle()
  fullName: System.Runtime.InteropServices.CriticalHandle.ReleaseHandle()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)
  id: SetHandle(System.IntPtr)
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: SetHandle(IntPtr)
  nameWithType: CriticalHandle.SetHandle(IntPtr)
  fullName: System.Runtime.InteropServices.CriticalHandle.SetHandle(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected void SetHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid
  id: SetHandleAsInvalid
  parent: System.Runtime.InteropServices.CriticalHandle
  langs:
  - csharp
  name: SetHandleAsInvalid()
  nameWithType: CriticalHandle.SetHandleAsInvalid()
  fullName: System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetHandleAsInvalid ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
- uid: System.Runtime.InteropServices.CriticalHandle.#ctor(System.IntPtr)
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: CriticalHandle(IntPtr)
  nameWithType: CriticalHandle.CriticalHandle(IntPtr)
  fullName: System.Runtime.InteropServices.CriticalHandle.CriticalHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.CriticalHandle.Close
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: Close()
  nameWithType: CriticalHandle.Close()
  fullName: System.Runtime.InteropServices.CriticalHandle.Close()
- uid: System.Runtime.InteropServices.CriticalHandle.Dispose
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: Dispose()
  nameWithType: CriticalHandle.Dispose()
  fullName: System.Runtime.InteropServices.CriticalHandle.Dispose()
- uid: System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CriticalHandle.Dispose(Boolean)
  fullName: System.Runtime.InteropServices.CriticalHandle.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.CriticalHandle.Finalize
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: Finalize()
  nameWithType: CriticalHandle.Finalize()
  fullName: System.Runtime.InteropServices.CriticalHandle.Finalize()
- uid: System.Runtime.InteropServices.CriticalHandle.handle
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: handle
  nameWithType: CriticalHandle.handle
  fullName: System.Runtime.InteropServices.CriticalHandle.handle
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.CriticalHandle.IsClosed
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: IsClosed
  nameWithType: CriticalHandle.IsClosed
  fullName: System.Runtime.InteropServices.CriticalHandle.IsClosed
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.CriticalHandle.IsInvalid
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandle.IsInvalid
  fullName: System.Runtime.InteropServices.CriticalHandle.IsInvalid
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.CriticalHandle.ReleaseHandle
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: CriticalHandle.ReleaseHandle()
  fullName: System.Runtime.InteropServices.CriticalHandle.ReleaseHandle()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: SetHandle(IntPtr)
  nameWithType: CriticalHandle.SetHandle(IntPtr)
  fullName: System.Runtime.InteropServices.CriticalHandle.SetHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: SetHandleAsInvalid()
  nameWithType: CriticalHandle.SetHandleAsInvalid()
  fullName: System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid()
- uid: System.Runtime.InteropServices.CriticalHandle.Dispose*
  parent: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: Dispose
  nameWithType: CriticalHandle.Dispose
