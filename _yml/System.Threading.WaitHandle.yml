### YamlMime:ManagedReference
items:
- uid: System.Threading.WaitHandle
  id: WaitHandle
  children:
  - System.Threading.WaitHandle.#ctor
  - System.Threading.WaitHandle.Close
  - System.Threading.WaitHandle.Dispose
  - System.Threading.WaitHandle.Dispose(System.Boolean)
  - System.Threading.WaitHandle.Handle
  - System.Threading.WaitHandle.InvalidHandle
  - System.Threading.WaitHandle.SafeWaitHandle
  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  - System.Threading.WaitHandle.WaitOne
  - System.Threading.WaitHandle.WaitOne(System.Int32)
  - System.Threading.WaitHandle.WaitOne(System.TimeSpan)
  - System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)
  - System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)
  - System.Threading.WaitHandle.WaitTimeout
  langs:
  - csharp
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class WaitHandle : MarshalByRefObject, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.#ctor
  id: '#ctor'
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitHandle()
  nameWithType: WaitHandle.WaitHandle()
  fullName: System.Threading.WaitHandle.WaitHandle()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected WaitHandle ();
    parameters: []
  overload: System.Threading.WaitHandle.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.Close
  id: Close
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: Close()
  nameWithType: WaitHandle.Close()
  fullName: System.Threading.WaitHandle.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Threading.WaitHandle.Close*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.Dispose
  id: Dispose
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: Dispose()
  nameWithType: WaitHandle.Dispose()
  fullName: System.Threading.WaitHandle.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Threading.WaitHandle.Dispose*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: WaitHandle.Dispose(Boolean)
  fullName: System.Threading.WaitHandle.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void Dispose (bool explicitDisposing);
    parameters:
    - id: explicitDisposing
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.Dispose*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.Handle
  id: Handle
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: Handle
  nameWithType: WaitHandle.Handle
  fullName: System.Threading.WaitHandle.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IntPtr Handle { get; set; }
    return:
      type: System.IntPtr
      description: To be added.
  overload: System.Threading.WaitHandle.Handle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.InvalidHandle
  id: InvalidHandle
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: InvalidHandle
  nameWithType: WaitHandle.InvalidHandle
  fullName: System.Threading.WaitHandle.InvalidHandle
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected static readonly IntPtr InvalidHandle;
    return:
      type: System.IntPtr
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.SafeWaitHandle
  id: SafeWaitHandle
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: SafeWaitHandle
  nameWithType: WaitHandle.SafeWaitHandle
  fullName: System.Threading.WaitHandle.SafeWaitHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle { get; set; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeWaitHandle
      description: To be added.
  overload: System.Threading.WaitHandle.SafeWaitHandle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
  id: SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: SignalAndWait(WaitHandle,WaitHandle)
  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle)
  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn);
    parameters:
    - id: toSignal
      type: System.Threading.WaitHandle
      description: To be added.
    - id: toWaitOn
      type: System.Threading.WaitHandle
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.SignalAndWait*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
  id: SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)
  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)
  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext);
    parameters:
    - id: toSignal
      type: System.Threading.WaitHandle
      description: To be added.
    - id: toWaitOn
      type: System.Threading.WaitHandle
      description: To be added.
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    - id: exitContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.SignalAndWait*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
  id: SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)
  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)
  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, TimeSpan timeout, bool exitContext);
    parameters:
    - id: toSignal
      type: System.Threading.WaitHandle
      description: To be added.
    - id: toWaitOn
      type: System.Threading.WaitHandle
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: exitContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.SignalAndWait*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
  id: WaitAll(System.Threading.WaitHandle[])
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAll(WaitHandle[])
  nameWithType: WaitHandle.WaitAll(WaitHandle[])
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAll*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)
  id: WaitAll(System.Threading.WaitHandle[],System.Int32)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAll(WaitHandle[],Int32)
  nameWithType: WaitHandle.WaitAll(WaitHandle[],Int32)
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAll*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
  id: WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAll(WaitHandle[],TimeSpan)
  nameWithType: WaitHandle.WaitAll(WaitHandle[],TimeSpan)
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAll*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  id: WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAll(WaitHandle[],Int32,Boolean)
  nameWithType: WaitHandle.WaitAll(WaitHandle[],Int32,Boolean)
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],Int32,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    - id: exitContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAll*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  id: WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAll(WaitHandle[],TimeSpan,Boolean)
  nameWithType: WaitHandle.WaitAll(WaitHandle[],TimeSpan,Boolean)
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],TimeSpan,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: exitContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAll*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
  id: WaitAny(System.Threading.WaitHandle[])
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAny(WaitHandle[])
  nameWithType: WaitHandle.WaitAny(WaitHandle[])
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAny*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)
  id: WaitAny(System.Threading.WaitHandle[],System.Int32)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAny(WaitHandle[],Int32)
  nameWithType: WaitHandle.WaitAny(WaitHandle[],Int32)
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAny*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
  id: WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAny(WaitHandle[],TimeSpan)
  nameWithType: WaitHandle.WaitAny(WaitHandle[],TimeSpan)
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAny*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  id: WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAny(WaitHandle[],Int32,Boolean)
  nameWithType: WaitHandle.WaitAny(WaitHandle[],Int32,Boolean)
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],Int32,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    - id: exitContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAny*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  id: WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitAny(WaitHandle[],TimeSpan,Boolean)
  nameWithType: WaitHandle.WaitAny(WaitHandle[],TimeSpan,Boolean)
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],TimeSpan,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);
    parameters:
    - id: waitHandles
      type: System.Threading.WaitHandle[]
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: exitContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.WaitHandle.WaitAny*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitOne
  id: WaitOne
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitOne()
  nameWithType: WaitHandle.WaitOne()
  fullName: System.Threading.WaitHandle.WaitOne()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool WaitOne ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitOne*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitOne(System.Int32)
  id: WaitOne(System.Int32)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitOne(Int32)
  nameWithType: WaitHandle.WaitOne(Int32)
  fullName: System.Threading.WaitHandle.WaitOne(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool WaitOne (int millisecondsTimeout);
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitOne*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)
  id: WaitOne(System.TimeSpan)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitOne(TimeSpan)
  nameWithType: WaitHandle.WaitOne(TimeSpan)
  fullName: System.Threading.WaitHandle.WaitOne(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool WaitOne (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitOne*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)
  id: WaitOne(System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitOne(Int32,Boolean)
  nameWithType: WaitHandle.WaitOne(Int32,Boolean)
  fullName: System.Threading.WaitHandle.WaitOne(Int32,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool WaitOne (int millisecondsTimeout, bool exitContext);
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    - id: exitContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitOne*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)
  id: WaitOne(System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitOne(TimeSpan,Boolean)
  nameWithType: WaitHandle.WaitOne(TimeSpan,Boolean)
  fullName: System.Threading.WaitHandle.WaitOne(TimeSpan,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool WaitOne (TimeSpan timeout, bool exitContext);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: exitContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.WaitHandle.WaitOne*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.WaitHandle.WaitTimeout
  id: WaitTimeout
  parent: System.Threading.WaitHandle
  langs:
  - csharp
  name: WaitTimeout
  nameWithType: WaitHandle.WaitTimeout
  fullName: System.Threading.WaitHandle.WaitTimeout
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public const int WaitTimeout = 258;
    return:
      type: System.Int32
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Threading.WaitHandle.#ctor
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitHandle()
  nameWithType: WaitHandle.WaitHandle()
  fullName: System.Threading.WaitHandle.WaitHandle()
- uid: System.Threading.WaitHandle.Close
  parent: System.Threading.WaitHandle
  isExternal: false
  name: Close()
  nameWithType: WaitHandle.Close()
  fullName: System.Threading.WaitHandle.Close()
- uid: System.Threading.WaitHandle.Dispose
  parent: System.Threading.WaitHandle
  isExternal: false
  name: Dispose()
  nameWithType: WaitHandle.Dispose()
  fullName: System.Threading.WaitHandle.Dispose()
- uid: System.Threading.WaitHandle.Dispose(System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: WaitHandle.Dispose(Boolean)
  fullName: System.Threading.WaitHandle.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.WaitHandle.Handle
  parent: System.Threading.WaitHandle
  isExternal: false
  name: Handle
  nameWithType: WaitHandle.Handle
  fullName: System.Threading.WaitHandle.Handle
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.WaitHandle.InvalidHandle
  parent: System.Threading.WaitHandle
  isExternal: false
  name: InvalidHandle
  nameWithType: WaitHandle.InvalidHandle
  fullName: System.Threading.WaitHandle.InvalidHandle
- uid: System.Threading.WaitHandle.SafeWaitHandle
  parent: System.Threading.WaitHandle
  isExternal: false
  name: SafeWaitHandle
  nameWithType: WaitHandle.SafeWaitHandle
  fullName: System.Threading.WaitHandle.SafeWaitHandle
- uid: Microsoft.Win32.SafeHandles.SafeWaitHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeWaitHandle
  nameWithType: SafeWaitHandle
  fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: SignalAndWait(WaitHandle,WaitHandle)
  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle)
  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle)
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)
  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)
  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)
  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)
  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAll(WaitHandle[])
  nameWithType: WaitHandle.WaitAll(WaitHandle[])
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[])
- uid: System.Threading.WaitHandle[]
  parent: System.Threading
  isExternal: false
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle[]
  spec.csharp:
  - uid: System.Threading.WaitHandle
    name: WaitHandle
    nameWithType: WaitHandle
    fullName: WaitHandle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAll(WaitHandle[],Int32)
  nameWithType: WaitHandle.WaitAll(WaitHandle[],Int32)
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],Int32)
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAll(WaitHandle[],TimeSpan)
  nameWithType: WaitHandle.WaitAll(WaitHandle[],TimeSpan)
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],TimeSpan)
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAll(WaitHandle[],Int32,Boolean)
  nameWithType: WaitHandle.WaitAll(WaitHandle[],Int32,Boolean)
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],Int32,Boolean)
- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAll(WaitHandle[],TimeSpan,Boolean)
  nameWithType: WaitHandle.WaitAll(WaitHandle[],TimeSpan,Boolean)
  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],TimeSpan,Boolean)
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAny(WaitHandle[])
  nameWithType: WaitHandle.WaitAny(WaitHandle[])
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[])
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAny(WaitHandle[],Int32)
  nameWithType: WaitHandle.WaitAny(WaitHandle[],Int32)
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],Int32)
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAny(WaitHandle[],TimeSpan)
  nameWithType: WaitHandle.WaitAny(WaitHandle[],TimeSpan)
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],TimeSpan)
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAny(WaitHandle[],Int32,Boolean)
  nameWithType: WaitHandle.WaitAny(WaitHandle[],Int32,Boolean)
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],Int32,Boolean)
- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAny(WaitHandle[],TimeSpan,Boolean)
  nameWithType: WaitHandle.WaitAny(WaitHandle[],TimeSpan,Boolean)
  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],TimeSpan,Boolean)
- uid: System.Threading.WaitHandle.WaitOne
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitOne()
  nameWithType: WaitHandle.WaitOne()
  fullName: System.Threading.WaitHandle.WaitOne()
- uid: System.Threading.WaitHandle.WaitOne(System.Int32)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitOne(Int32)
  nameWithType: WaitHandle.WaitOne(Int32)
  fullName: System.Threading.WaitHandle.WaitOne(Int32)
- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitOne(TimeSpan)
  nameWithType: WaitHandle.WaitOne(TimeSpan)
  fullName: System.Threading.WaitHandle.WaitOne(TimeSpan)
- uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitOne(Int32,Boolean)
  nameWithType: WaitHandle.WaitOne(Int32,Boolean)
  fullName: System.Threading.WaitHandle.WaitOne(Int32,Boolean)
- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitOne(TimeSpan,Boolean)
  nameWithType: WaitHandle.WaitOne(TimeSpan,Boolean)
  fullName: System.Threading.WaitHandle.WaitOne(TimeSpan,Boolean)
- uid: System.Threading.WaitHandle.WaitTimeout
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitTimeout
  nameWithType: WaitHandle.WaitTimeout
  fullName: System.Threading.WaitHandle.WaitTimeout
- uid: System.Threading.WaitHandle.#ctor*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitHandle
  nameWithType: WaitHandle.WaitHandle
- uid: System.Threading.WaitHandle.Close*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: Close
  nameWithType: WaitHandle.Close
- uid: System.Threading.WaitHandle.Dispose*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: Dispose
  nameWithType: WaitHandle.Dispose
- uid: System.Threading.WaitHandle.Handle*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: Handle
  nameWithType: WaitHandle.Handle
- uid: System.Threading.WaitHandle.SafeWaitHandle*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: SafeWaitHandle
  nameWithType: WaitHandle.SafeWaitHandle
- uid: System.Threading.WaitHandle.SignalAndWait*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: SignalAndWait
  nameWithType: WaitHandle.SignalAndWait
- uid: System.Threading.WaitHandle.WaitAll*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAll
  nameWithType: WaitHandle.WaitAll
- uid: System.Threading.WaitHandle.WaitAny*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitAny
  nameWithType: WaitHandle.WaitAny
- uid: System.Threading.WaitHandle.WaitOne*
  parent: System.Threading.WaitHandle
  isExternal: false
  name: WaitOne
  nameWithType: WaitHandle.WaitOne
