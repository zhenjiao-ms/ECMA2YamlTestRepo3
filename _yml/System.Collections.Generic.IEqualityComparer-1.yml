### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.IEqualityComparer`1
  id: IEqualityComparer`1
  children:
  - System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  - System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  langs:
  - csharp
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  type: Interface
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public interface IEqualityComparer<in T>
    typeParameters:
    - id: T
      description: To be added.
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  id: Equals(`0,`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  langs:
  - csharp
  name: Equals(T,T)
  nameWithType: IEqualityComparer<T>.Equals(T,T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Equals (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.IEqualityComparer`1.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  id: GetHashCode(`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  langs:
  - csharp
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int GetHashCode (T obj);
    parameters:
    - id: obj
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.IEqualityComparer`1.GetHashCode*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: Equals(T,T)
  nameWithType: IEqualityComparer<T>.Equals(T,T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T,T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEqualityComparer`1.Equals*
  parent: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: Equals
  nameWithType: IEqualityComparer<T>.Equals
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode*
  parent: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: GetHashCode
  nameWithType: IEqualityComparer<T>.GetHashCode
