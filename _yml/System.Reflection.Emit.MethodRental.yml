### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.MethodRental
  id: MethodRental
  children:
  - System.Reflection.Emit.MethodRental.JitImmediate
  - System.Reflection.Emit.MethodRental.JitOnDemand
  - System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: MethodRental
  nameWithType: MethodRental
  fullName: System.Reflection.Emit.MethodRental
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._MethodRental))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class MethodRental : System.Runtime.InteropServices._MethodRental
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._MethodRental
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.MethodRental.JitImmediate
  id: JitImmediate
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: JitImmediate
  nameWithType: MethodRental.JitImmediate
  fullName: System.Reflection.Emit.MethodRental.JitImmediate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public const int JitImmediate = 1;
    return:
      type: System.Int32
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.MethodRental.JitOnDemand
  id: JitOnDemand
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: JitOnDemand
  nameWithType: MethodRental.JitOnDemand
  fullName: System.Reflection.Emit.MethodRental.JitOnDemand
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public const int JitOnDemand = 0;
    return:
      type: System.Int32
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  id: SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  nameWithType: MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  fullName: System.Reflection.Emit.MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static void SwapMethodBody (Type cls, int methodtoken, IntPtr rgIL, int methodSize, int flags);
    parameters:
    - id: cls
      type: System.Type
      description: To be added.
    - id: methodtoken
      type: System.Int32
      description: To be added.
    - id: rgIL
      type: System.IntPtr
      description: To be added.
    - id: methodSize
      type: System.Int32
      description: To be added.
    - id: flags
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Emit.MethodRental.SwapMethodBody*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _MethodRental.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _MethodRental.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _MethodRental.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _MethodRental.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Reflection.Emit.MethodRental.JitImmediate
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: JitImmediate
  nameWithType: MethodRental.JitImmediate
  fullName: System.Reflection.Emit.MethodRental.JitImmediate
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.MethodRental.JitOnDemand
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: JitOnDemand
  nameWithType: MethodRental.JitOnDemand
  fullName: System.Reflection.Emit.MethodRental.JitOnDemand
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  nameWithType: MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  fullName: System.Reflection.Emit.MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: SwapMethodBody
  nameWithType: MethodRental.SwapMethodBody
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.Invoke
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke
