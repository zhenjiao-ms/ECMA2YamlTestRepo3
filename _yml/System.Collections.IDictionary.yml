### YamlMime:ManagedReference
items:
- uid: System.Collections.IDictionary
  id: IDictionary
  children:
  - System.Collections.IDictionary.Add(System.Object,System.Object)
  - System.Collections.IDictionary.Clear
  - System.Collections.IDictionary.Contains(System.Object)
  - System.Collections.IDictionary.GetEnumerator
  - System.Collections.IDictionary.IsFixedSize
  - System.Collections.IDictionary.IsReadOnly
  - System.Collections.IDictionary.Item(System.Object)
  - System.Collections.IDictionary.Keys
  - System.Collections.IDictionary.Remove(System.Object)
  - System.Collections.IDictionary.Values
  langs:
  - csharp
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
  type: Interface
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDictionary : System.Collections.ICollection
  implements:
  - System.Collections.ICollection
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: IDictionary.Add(Object,Object)
  fullName: System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
  overload: System.Collections.IDictionary.Add*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.Clear
  id: Clear
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: IDictionary.Clear()
  fullName: System.Collections.IDictionary.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.IDictionary.Clear*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: IDictionary.Contains(Object)
  fullName: System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.IDictionary.Contains*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IDictionary.GetEnumerator()
  fullName: System.Collections.IDictionary.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: To be added.
  overload: System.Collections.IDictionary.GetEnumerator*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: IDictionary.IsFixedSize
  fullName: System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.IDictionary.IsFixedSize*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IDictionary.IsReadOnly
  fullName: System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.IDictionary.IsReadOnly*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: IDictionary.Item(Object)
  fullName: System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Collections.IDictionary.Item*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.Keys
  id: Keys
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: IDictionary.Keys
  fullName: System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: To be added.
  overload: System.Collections.IDictionary.Keys*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: IDictionary.Remove(Object)
  fullName: System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
  overload: System.Collections.IDictionary.Remove*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IDictionary.Values
  id: Values
  parent: System.Collections.IDictionary
  langs:
  - csharp
  name: Values
  nameWithType: IDictionary.Values
  fullName: System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: To be added.
  overload: System.Collections.IDictionary.Values*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.IDictionary.Add(System.Object,System.Object)
  parent: System.Collections.IDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: IDictionary.Add(Object,Object)
  fullName: System.Collections.IDictionary.Add(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IDictionary.Clear
  parent: System.Collections.IDictionary
  isExternal: false
  name: Clear()
  nameWithType: IDictionary.Clear()
  fullName: System.Collections.IDictionary.Clear()
- uid: System.Collections.IDictionary.Contains(System.Object)
  parent: System.Collections.IDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: IDictionary.Contains(Object)
  fullName: System.Collections.IDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IDictionary.GetEnumerator
  parent: System.Collections.IDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: IDictionary.GetEnumerator()
  fullName: System.Collections.IDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.IDictionary.IsFixedSize
  parent: System.Collections.IDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: IDictionary.IsFixedSize
  fullName: System.Collections.IDictionary.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.IDictionary.IsReadOnly
  parent: System.Collections.IDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: IDictionary.IsReadOnly
  fullName: System.Collections.IDictionary.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.IDictionary.Item(System.Object)
  parent: System.Collections.IDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: IDictionary.Item(Object)
  fullName: System.Collections.IDictionary.Item(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IDictionary.Keys
  parent: System.Collections.IDictionary
  isExternal: false
  name: Keys
  nameWithType: IDictionary.Keys
  fullName: System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IDictionary.Remove(System.Object)
  parent: System.Collections.IDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: IDictionary.Remove(Object)
  fullName: System.Collections.IDictionary.Remove(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IDictionary.Values
  parent: System.Collections.IDictionary
  isExternal: false
  name: Values
  nameWithType: IDictionary.Values
  fullName: System.Collections.IDictionary.Values
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IDictionary.Add*
  parent: System.Collections.IDictionary
  isExternal: false
  name: Add
  nameWithType: IDictionary.Add
- uid: System.Collections.IDictionary.Clear*
  parent: System.Collections.IDictionary
  isExternal: false
  name: Clear
  nameWithType: IDictionary.Clear
- uid: System.Collections.IDictionary.Contains*
  parent: System.Collections.IDictionary
  isExternal: false
  name: Contains
  nameWithType: IDictionary.Contains
- uid: System.Collections.IDictionary.GetEnumerator*
  parent: System.Collections.IDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: IDictionary.GetEnumerator
- uid: System.Collections.IDictionary.IsFixedSize*
  parent: System.Collections.IDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: IDictionary.IsFixedSize
- uid: System.Collections.IDictionary.IsReadOnly*
  parent: System.Collections.IDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: IDictionary.IsReadOnly
- uid: System.Collections.IDictionary.Item*
  parent: System.Collections.IDictionary
  isExternal: false
  name: Item
  nameWithType: IDictionary.Item
- uid: System.Collections.IDictionary.Keys*
  parent: System.Collections.IDictionary
  isExternal: false
  name: Keys
  nameWithType: IDictionary.Keys
- uid: System.Collections.IDictionary.Remove*
  parent: System.Collections.IDictionary
  isExternal: false
  name: Remove
  nameWithType: IDictionary.Remove
- uid: System.Collections.IDictionary.Values*
  parent: System.Collections.IDictionary
  isExternal: false
  name: Values
  nameWithType: IDictionary.Values
