### YamlMime:ManagedReference
items:
- uid: System.Reflection.Module
  id: Module
  children:
  - System.Reflection.Module.#ctor
  - System.Reflection.Module.Assembly
  - System.Reflection.Module.CustomAttributes
  - System.Reflection.Module.Equals(System.Object)
  - System.Reflection.Module.FilterTypeName
  - System.Reflection.Module.FilterTypeNameIgnoreCase
  - System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)
  - System.Reflection.Module.FullyQualifiedName
  - System.Reflection.Module.GetCustomAttributes(System.Boolean)
  - System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Module.GetCustomAttributesData
  - System.Reflection.Module.GetField(System.String)
  - System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)
  - System.Reflection.Module.GetFields
  - System.Reflection.Module.GetFields(System.Reflection.BindingFlags)
  - System.Reflection.Module.GetHashCode
  - System.Reflection.Module.GetMethod(System.String)
  - System.Reflection.Module.GetMethod(System.String,System.Type[])
  - System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Reflection.Module.GetMethods
  - System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)
  - System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)
  - System.Reflection.Module.GetSignerCertificate
  - System.Reflection.Module.GetType(System.String)
  - System.Reflection.Module.GetType(System.String,System.Boolean)
  - System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)
  - System.Reflection.Module.GetTypes
  - System.Reflection.Module.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Module.IsResource
  - System.Reflection.Module.MDStreamVersion
  - System.Reflection.Module.MetadataToken
  - System.Reflection.Module.ModuleHandle
  - System.Reflection.Module.ModuleVersionId
  - System.Reflection.Module.Name
  - System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)
  - System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)
  - System.Reflection.Module.ResolveField(System.Int32)
  - System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])
  - System.Reflection.Module.ResolveMember(System.Int32)
  - System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])
  - System.Reflection.Module.ResolveMethod(System.Int32)
  - System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])
  - System.Reflection.Module.ResolveSignature(System.Int32)
  - System.Reflection.Module.ResolveString(System.Int32)
  - System.Reflection.Module.ResolveType(System.Int32)
  - System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])
  - System.Reflection.Module.ScopeName
  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.Module.ToString
  langs:
  - csharp
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Module))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Module : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Module, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.InteropServices._Module
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.#ctor
  id: '#ctor'
  parent: System.Reflection.Module
  langs:
  - csharp
  name: Module()
  nameWithType: Module.Module()
  fullName: System.Reflection.Module.Module()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected Module ();
    parameters: []
  overload: System.Reflection.Module.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.Assembly
  id: Assembly
  parent: System.Reflection.Module
  langs:
  - csharp
  name: Assembly
  nameWithType: Module.Assembly
  fullName: System.Reflection.Module.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Module.Assembly*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.CustomAttributes
  id: CustomAttributes
  parent: System.Reflection.Module
  langs:
  - csharp
  name: CustomAttributes
  nameWithType: Module.CustomAttributes
  fullName: System.Reflection.Module.CustomAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData> CustomAttributes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
      description: To be added.
  overload: System.Reflection.Module.CustomAttributes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Module.Equals(Object)
  fullName: System.Reflection.Module.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Module.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.FilterTypeName
  id: FilterTypeName
  parent: System.Reflection.Module
  langs:
  - csharp
  name: FilterTypeName
  nameWithType: Module.FilterTypeName
  fullName: System.Reflection.Module.FilterTypeName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Reflection.TypeFilter FilterTypeName;
    return:
      type: System.Reflection.TypeFilter
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.FilterTypeNameIgnoreCase
  id: FilterTypeNameIgnoreCase
  parent: System.Reflection.Module
  langs:
  - csharp
  name: FilterTypeNameIgnoreCase
  nameWithType: Module.FilterTypeNameIgnoreCase
  fullName: System.Reflection.Module.FilterTypeNameIgnoreCase
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Reflection.TypeFilter FilterTypeNameIgnoreCase;
    return:
      type: System.Reflection.TypeFilter
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)
  id: FindTypes(System.Reflection.TypeFilter,System.Object)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: FindTypes(TypeFilter,Object)
  nameWithType: Module.FindTypes(TypeFilter,Object)
  fullName: System.Reflection.Module.FindTypes(TypeFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] FindTypes (System.Reflection.TypeFilter filter, object filterCriteria);
    parameters:
    - id: filter
      type: System.Reflection.TypeFilter
      description: To be added.
    - id: filterCriteria
      type: System.Object
      description: To be added.
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Reflection.Module.FindTypes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.FullyQualifiedName
  id: FullyQualifiedName
  parent: System.Reflection.Module
  langs:
  - csharp
  name: FullyQualifiedName
  nameWithType: Module.FullyQualifiedName
  fullName: System.Reflection.Module.FullyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string FullyQualifiedName { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Module.FullyQualifiedName*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: Module.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Module.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Module.GetCustomAttributes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: Module.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Module.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Module.GetCustomAttributes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetCustomAttributesData
  id: GetCustomAttributesData
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetCustomAttributesData()
  nameWithType: Module.GetCustomAttributesData()
  fullName: System.Reflection.Module.GetCustomAttributesData()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
      description: To be added.
  overload: System.Reflection.Module.GetCustomAttributesData*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetField(System.String)
  id: GetField(System.String)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetField(String)
  nameWithType: Module.GetField(String)
  fullName: System.Reflection.Module.GetField(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.Module.GetField*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: Module.GetField(String,BindingFlags)
  fullName: System.Reflection.Module.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.Module.GetField*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetFields
  id: GetFields
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetFields()
  nameWithType: Module.GetFields()
  fullName: System.Reflection.Module.GetFields()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields ();
    parameters: []
    return:
      type: System.Reflection.FieldInfo[]
      description: To be added.
  overload: System.Reflection.Module.GetFields*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: Module.GetFields(BindingFlags)
  fullName: System.Reflection.Module.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.FieldInfo[]
      description: To be added.
  overload: System.Reflection.Module.GetFields*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Module.GetHashCode()
  fullName: System.Reflection.Module.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Module.GetHashCode*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetMethod(System.String)
  id: GetMethod(System.String)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetMethod(String)
  nameWithType: Module.GetMethod(String)
  fullName: System.Reflection.Module.GetMethod(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Module.GetMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetMethod(System.String,System.Type[])
  id: GetMethod(System.String,System.Type[])
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetMethod(String,Type[])
  nameWithType: Module.GetMethod(String,Type[])
  fullName: System.Reflection.Module.GetMethod(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Module.GetMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Module.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Module.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Module.GetMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Module.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Module.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: To be added.
    - id: types
      type: System.Type[]
      description: To be added.
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: To be added.
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  overload: System.Reflection.Module.GetMethodImpl*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetMethods
  id: GetMethods
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetMethods()
  nameWithType: Module.GetMethods()
  fullName: System.Reflection.Module.GetMethods()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: To be added.
  overload: System.Reflection.Module.GetMethods*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: Module.GetMethods(BindingFlags)
  fullName: System.Reflection.Module.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: To be added.
    return:
      type: System.Reflection.MethodInfo[]
      description: To be added.
  overload: System.Reflection.Module.GetMethods*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Module.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Reflection.Module.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Reflection.Module.GetObjectData*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)
  id: GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetPEKind(PortableExecutableKinds,ImageFileMachine)
  nameWithType: Module.GetPEKind(PortableExecutableKinds,ImageFileMachine)
  fullName: System.Reflection.Module.GetPEKind(PortableExecutableKinds,ImageFileMachine)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void GetPEKind (out System.Reflection.PortableExecutableKinds peKind, out System.Reflection.ImageFileMachine machine);
    parameters:
    - id: peKind
      type: System.Reflection.PortableExecutableKinds
      description: To be added.
    - id: machine
      type: System.Reflection.ImageFileMachine
      description: To be added.
  overload: System.Reflection.Module.GetPEKind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetSignerCertificate
  id: GetSignerCertificate
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetSignerCertificate()
  nameWithType: Module.GetSignerCertificate()
  fullName: System.Reflection.Module.GetSignerCertificate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate ();
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: System.Reflection.Module.GetSignerCertificate*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetType(System.String)
  id: GetType(System.String)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetType(String)
  nameWithType: Module.GetType(String)
  fullName: System.Reflection.Module.GetType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type GetType (string className);
    parameters:
    - id: className
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Module.GetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: Module.GetType(String,Boolean)
  fullName: System.Reflection.Module.GetType(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type GetType (string className, bool ignoreCase);
    parameters:
    - id: className
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Module.GetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: Module.GetType(String,Boolean,Boolean)
  fullName: System.Reflection.Module.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type GetType (string className, bool throwOnError, bool ignoreCase);
    parameters:
    - id: className
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Module.GetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.GetTypes
  id: GetTypes
  parent: System.Reflection.Module
  langs:
  - csharp
  name: GetTypes()
  nameWithType: Module.GetTypes()
  fullName: System.Reflection.Module.GetTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GetTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  overload: System.Reflection.Module.GetTypes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: Module.IsDefined(Type,Boolean)
  fullName: System.Reflection.Module.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Module.IsDefined*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.IsResource
  id: IsResource
  parent: System.Reflection.Module
  langs:
  - csharp
  name: IsResource()
  nameWithType: Module.IsResource()
  fullName: System.Reflection.Module.IsResource()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsResource ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Module.IsResource*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.MDStreamVersion
  id: MDStreamVersion
  parent: System.Reflection.Module
  langs:
  - csharp
  name: MDStreamVersion
  nameWithType: Module.MDStreamVersion
  fullName: System.Reflection.Module.MDStreamVersion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual int MDStreamVersion { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Module.MDStreamVersion*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.MetadataToken
  id: MetadataToken
  parent: System.Reflection.Module
  langs:
  - csharp
  name: MetadataToken
  nameWithType: Module.MetadataToken
  fullName: System.Reflection.Module.MetadataToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual int MetadataToken { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Module.MetadataToken*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ModuleHandle
  id: ModuleHandle
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ModuleHandle
  nameWithType: Module.ModuleHandle
  fullName: System.Reflection.Module.ModuleHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ModuleHandle ModuleHandle { get; }
    return:
      type: System.ModuleHandle
      description: To be added.
  overload: System.Reflection.Module.ModuleHandle*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ModuleVersionId
  id: ModuleVersionId
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ModuleVersionId
  nameWithType: Module.ModuleVersionId
  fullName: System.Reflection.Module.ModuleVersionId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Guid ModuleVersionId { get; }
    return:
      type: System.Guid
      description: To be added.
  overload: System.Reflection.Module.ModuleVersionId*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.Name
  id: Name
  parent: System.Reflection.Module
  langs:
  - csharp
  name: Name
  nameWithType: Module.Name
  fullName: System.Reflection.Module.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Module.Name*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)
  id: op_Equality(System.Reflection.Module,System.Reflection.Module)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: op_Equality(Module,Module)
  nameWithType: Module.op_Equality(Module,Module)
  fullName: System.Reflection.Module.op_Equality(Module,Module)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Reflection.Module left, System.Reflection.Module right);
    parameters:
    - id: left
      type: System.Reflection.Module
      description: To be added.
    - id: right
      type: System.Reflection.Module
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Module.op_Equality*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)
  id: op_Inequality(System.Reflection.Module,System.Reflection.Module)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: op_Inequality(Module,Module)
  nameWithType: Module.op_Inequality(Module,Module)
  fullName: System.Reflection.Module.op_Inequality(Module,Module)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Reflection.Module left, System.Reflection.Module right);
    parameters:
    - id: left
      type: System.Reflection.Module
      description: To be added.
    - id: right
      type: System.Reflection.Module
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Module.op_Inequality*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveField(System.Int32)
  id: ResolveField(System.Int32)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveField(Int32)
  nameWithType: Module.ResolveField(Int32)
  fullName: System.Reflection.Module.ResolveField(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.FieldInfo ResolveField (int metadataToken);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.Module.ResolveField*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])
  id: ResolveField(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveField(Int32,Type[],Type[])
  nameWithType: Module.ResolveField(Int32,Type[],Type[])
  fullName: System.Reflection.Module.ResolveField(Int32,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.FieldInfo ResolveField (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    - id: genericTypeArguments
      type: System.Type[]
      description: To be added.
    - id: genericMethodArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.FieldInfo
      description: To be added.
  overload: System.Reflection.Module.ResolveField*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveMember(System.Int32)
  id: ResolveMember(System.Int32)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveMember(Int32)
  nameWithType: Module.ResolveMember(Int32)
  fullName: System.Reflection.Module.ResolveMember(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MemberInfo ResolveMember (int metadataToken);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.MemberInfo
      description: To be added.
  overload: System.Reflection.Module.ResolveMember*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])
  id: ResolveMember(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveMember(Int32,Type[],Type[])
  nameWithType: Module.ResolveMember(Int32,Type[],Type[])
  fullName: System.Reflection.Module.ResolveMember(Int32,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MemberInfo ResolveMember (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    - id: genericTypeArguments
      type: System.Type[]
      description: To be added.
    - id: genericMethodArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.MemberInfo
      description: To be added.
  overload: System.Reflection.Module.ResolveMember*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveMethod(System.Int32)
  id: ResolveMethod(System.Int32)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveMethod(Int32)
  nameWithType: Module.ResolveMethod(Int32)
  fullName: System.Reflection.Module.ResolveMethod(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.MethodBase ResolveMethod (int metadataToken);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.MethodBase
      description: To be added.
  overload: System.Reflection.Module.ResolveMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])
  id: ResolveMethod(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveMethod(Int32,Type[],Type[])
  nameWithType: Module.ResolveMethod(Int32,Type[],Type[])
  fullName: System.Reflection.Module.ResolveMethod(Int32,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MethodBase ResolveMethod (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    - id: genericTypeArguments
      type: System.Type[]
      description: To be added.
    - id: genericMethodArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Reflection.MethodBase
      description: To be added.
  overload: System.Reflection.Module.ResolveMethod*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveSignature(System.Int32)
  id: ResolveSignature(System.Int32)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveSignature(Int32)
  nameWithType: Module.ResolveSignature(Int32)
  fullName: System.Reflection.Module.ResolveSignature(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] ResolveSignature (int metadataToken);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Module.ResolveSignature*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveString(System.Int32)
  id: ResolveString(System.Int32)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveString(Int32)
  nameWithType: Module.ResolveString(Int32)
  fullName: System.Reflection.Module.ResolveString(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string ResolveString (int metadataToken);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Module.ResolveString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveType(System.Int32)
  id: ResolveType(System.Int32)
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveType(Int32)
  nameWithType: Module.ResolveType(Int32)
  fullName: System.Reflection.Module.ResolveType(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Type ResolveType (int metadataToken);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Module.ResolveType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])
  id: ResolveType(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ResolveType(Int32,Type[],Type[])
  nameWithType: Module.ResolveType(Int32,Type[],Type[])
  fullName: System.Reflection.Module.ResolveType(Int32,Type[],Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type ResolveType (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);
    parameters:
    - id: metadataToken
      type: System.Int32
      description: To be added.
    - id: genericTypeArguments
      type: System.Type[]
      description: To be added.
    - id: genericMethodArguments
      type: System.Type[]
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Module.ResolveType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ScopeName
  id: ScopeName
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ScopeName
  nameWithType: Module.ScopeName
  fullName: System.Reflection.Module.ScopeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string ScopeName { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Module.ScopeName*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Module
  langs:
  - csharp
  name: System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Module.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Module
  langs:
  - csharp
  name: System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Module.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Module
  langs:
  - csharp
  name: System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)
  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Module.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  overload: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Module
  langs:
  - csharp
  name: System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: Module.System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Module.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  overload: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Module.ToString
  id: ToString
  parent: System.Reflection.Module
  langs:
  - csharp
  name: ToString()
  nameWithType: Module.ToString()
  fullName: System.Reflection.Module.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Reflection.Module.ToString*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Reflection.Module.#ctor
  parent: System.Reflection.Module
  isExternal: false
  name: Module()
  nameWithType: Module.Module()
  fullName: System.Reflection.Module.Module()
- uid: System.Reflection.Module.Assembly
  parent: System.Reflection.Module
  isExternal: false
  name: Assembly
  nameWithType: Module.Assembly
  fullName: System.Reflection.Module.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Module.CustomAttributes
  parent: System.Reflection.Module
  isExternal: false
  name: CustomAttributes
  nameWithType: Module.CustomAttributes
  fullName: System.Reflection.Module.CustomAttributes
- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<CustomAttributeData>
  nameWithType: IEnumerable<CustomAttributeData>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>
- uid: System.Reflection.Module.Equals(System.Object)
  parent: System.Reflection.Module
  isExternal: false
  name: Equals(Object)
  nameWithType: Module.Equals(Object)
  fullName: System.Reflection.Module.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Module.FilterTypeName
  parent: System.Reflection.Module
  isExternal: false
  name: FilterTypeName
  nameWithType: Module.FilterTypeName
  fullName: System.Reflection.Module.FilterTypeName
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Reflection.Module.FilterTypeNameIgnoreCase
  parent: System.Reflection.Module
  isExternal: false
  name: FilterTypeNameIgnoreCase
  nameWithType: Module.FilterTypeNameIgnoreCase
  fullName: System.Reflection.Module.FilterTypeNameIgnoreCase
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)
  parent: System.Reflection.Module
  isExternal: false
  name: FindTypes(TypeFilter,Object)
  nameWithType: Module.FindTypes(TypeFilter,Object)
  fullName: System.Reflection.Module.FindTypes(TypeFilter,Object)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Module.FullyQualifiedName
  parent: System.Reflection.Module
  isExternal: false
  name: FullyQualifiedName
  nameWithType: Module.FullyQualifiedName
  fullName: System.Reflection.Module.FullyQualifiedName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Module.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Module
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: Module.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Module.GetCustomAttributes(Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Module
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: Module.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Module.GetCustomAttributes(Type,Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module.GetCustomAttributesData
  parent: System.Reflection.Module
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: Module.GetCustomAttributesData()
  fullName: System.Reflection.Module.GetCustomAttributesData()
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<CustomAttributeData>
  nameWithType: IList<CustomAttributeData>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>
- uid: System.Reflection.Module.GetField(System.String)
  parent: System.Reflection.Module
  isExternal: false
  name: GetField(String)
  nameWithType: Module.GetField(String)
  fullName: System.Reflection.Module.GetField(String)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Reflection.Module
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: Module.GetField(String,BindingFlags)
  fullName: System.Reflection.Module.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Module.GetFields
  parent: System.Reflection.Module
  isExternal: false
  name: GetFields()
  nameWithType: Module.GetFields()
  fullName: System.Reflection.Module.GetFields()
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
- uid: System.Reflection.Module.GetFields(System.Reflection.BindingFlags)
  parent: System.Reflection.Module
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: Module.GetFields(BindingFlags)
  fullName: System.Reflection.Module.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Module.GetHashCode
  parent: System.Reflection.Module
  isExternal: false
  name: GetHashCode()
  nameWithType: Module.GetHashCode()
  fullName: System.Reflection.Module.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.GetMethod(System.String)
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethod(String)
  nameWithType: Module.GetMethod(String)
  fullName: System.Reflection.Module.GetMethod(String)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Module.GetMethod(System.String,System.Type[])
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethod(String,Type[])
  nameWithType: Module.GetMethod(String,Type[])
  fullName: System.Reflection.Module.GetMethod(String,Type[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Module.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Module.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.ParameterModifier
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
- uid: System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: Module.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Reflection.Module.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.ParameterModifier
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
- uid: System.Reflection.Module.GetMethods
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethods()
  nameWithType: Module.GetMethods()
  fullName: System.Reflection.Module.GetMethods()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
- uid: System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: Module.GetMethods(BindingFlags)
  fullName: System.Reflection.Module.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.Module
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Module.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Reflection.Module.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)
  parent: System.Reflection.Module
  isExternal: false
  name: GetPEKind(PortableExecutableKinds,ImageFileMachine)
  nameWithType: Module.GetPEKind(PortableExecutableKinds,ImageFileMachine)
  fullName: System.Reflection.Module.GetPEKind(PortableExecutableKinds,ImageFileMachine)
- uid: System.Reflection.PortableExecutableKinds
  parent: System.Reflection
  isExternal: false
  name: PortableExecutableKinds
  nameWithType: PortableExecutableKinds
  fullName: System.Reflection.PortableExecutableKinds
- uid: System.Reflection.ImageFileMachine
  parent: System.Reflection
  isExternal: false
  name: ImageFileMachine
  nameWithType: ImageFileMachine
  fullName: System.Reflection.ImageFileMachine
- uid: System.Reflection.Module.GetSignerCertificate
  parent: System.Reflection.Module
  isExternal: false
  name: GetSignerCertificate()
  nameWithType: Module.GetSignerCertificate()
  fullName: System.Reflection.Module.GetSignerCertificate()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Reflection.Module.GetType(System.String)
  parent: System.Reflection.Module
  isExternal: false
  name: GetType(String)
  nameWithType: Module.GetType(String)
  fullName: System.Reflection.Module.GetType(String)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Module.GetType(System.String,System.Boolean)
  parent: System.Reflection.Module
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: Module.GetType(String,Boolean)
  fullName: System.Reflection.Module.GetType(String,Boolean)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Module
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: Module.GetType(String,Boolean,Boolean)
  fullName: System.Reflection.Module.GetType(String,Boolean,Boolean)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module.GetTypes
  parent: System.Reflection.Module
  isExternal: false
  name: GetTypes()
  nameWithType: Module.GetTypes()
  fullName: System.Reflection.Module.GetTypes()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Module.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Module
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: Module.IsDefined(Type,Boolean)
  fullName: System.Reflection.Module.IsDefined(Type,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module.IsResource
  parent: System.Reflection.Module
  isExternal: false
  name: IsResource()
  nameWithType: Module.IsResource()
  fullName: System.Reflection.Module.IsResource()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module.MDStreamVersion
  parent: System.Reflection.Module
  isExternal: false
  name: MDStreamVersion
  nameWithType: Module.MDStreamVersion
  fullName: System.Reflection.Module.MDStreamVersion
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.MetadataToken
  parent: System.Reflection.Module
  isExternal: false
  name: MetadataToken
  nameWithType: Module.MetadataToken
  fullName: System.Reflection.Module.MetadataToken
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.ModuleHandle
  parent: System.Reflection.Module
  isExternal: false
  name: ModuleHandle
  nameWithType: Module.ModuleHandle
  fullName: System.Reflection.Module.ModuleHandle
- uid: System.ModuleHandle
  parent: System
  isExternal: false
  name: ModuleHandle
  nameWithType: ModuleHandle
  fullName: System.ModuleHandle
- uid: System.Reflection.Module.ModuleVersionId
  parent: System.Reflection.Module
  isExternal: false
  name: ModuleVersionId
  nameWithType: Module.ModuleVersionId
  fullName: System.Reflection.Module.ModuleVersionId
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Reflection.Module.Name
  parent: System.Reflection.Module
  isExternal: false
  name: Name
  nameWithType: Module.Name
  fullName: System.Reflection.Module.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)
  parent: System.Reflection.Module
  isExternal: false
  name: op_Equality(Module,Module)
  nameWithType: Module.op_Equality(Module,Module)
  fullName: System.Reflection.Module.op_Equality(Module,Module)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)
  parent: System.Reflection.Module
  isExternal: false
  name: op_Inequality(Module,Module)
  nameWithType: Module.op_Inequality(Module,Module)
  fullName: System.Reflection.Module.op_Inequality(Module,Module)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Module.ResolveField(System.Int32)
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveField(Int32)
  nameWithType: Module.ResolveField(Int32)
  fullName: System.Reflection.Module.ResolveField(Int32)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveField(Int32,Type[],Type[])
  nameWithType: Module.ResolveField(Int32,Type[],Type[])
  fullName: System.Reflection.Module.ResolveField(Int32,Type[],Type[])
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Module.ResolveMember(System.Int32)
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveMember(Int32)
  nameWithType: Module.ResolveMember(Int32)
  fullName: System.Reflection.Module.ResolveMember(Int32)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveMember(Int32,Type[],Type[])
  nameWithType: Module.ResolveMember(Int32,Type[],Type[])
  fullName: System.Reflection.Module.ResolveMember(Int32,Type[],Type[])
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Module.ResolveMethod(System.Int32)
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveMethod(Int32)
  nameWithType: Module.ResolveMethod(Int32)
  fullName: System.Reflection.Module.ResolveMethod(Int32)
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveMethod(Int32,Type[],Type[])
  nameWithType: Module.ResolveMethod(Int32,Type[],Type[])
  fullName: System.Reflection.Module.ResolveMethod(Int32,Type[],Type[])
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Module.ResolveSignature(System.Int32)
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveSignature(Int32)
  nameWithType: Module.ResolveSignature(Int32)
  fullName: System.Reflection.Module.ResolveSignature(Int32)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.ResolveString(System.Int32)
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveString(Int32)
  nameWithType: Module.ResolveString(Int32)
  fullName: System.Reflection.Module.ResolveString(Int32)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.ResolveType(System.Int32)
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveType(Int32)
  nameWithType: Module.ResolveType(Int32)
  fullName: System.Reflection.Module.ResolveType(Int32)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveType(Int32,Type[],Type[])
  nameWithType: Module.ResolveType(Int32,Type[],Type[])
  fullName: System.Reflection.Module.ResolveType(Int32,Type[],Type[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Module.ScopeName
  parent: System.Reflection.Module
  isExternal: false
  name: ScopeName
  nameWithType: Module.ScopeName
  fullName: System.Reflection.Module.ScopeName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Module
  isExternal: false
  name: System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Module
  isExternal: false
  name: System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Module
  isExternal: false
  name: System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)
  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Module
  isExternal: false
  name: System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: Module.System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Module.ToString
  parent: System.Reflection.Module
  isExternal: false
  name: ToString()
  nameWithType: Module.ToString()
  fullName: System.Reflection.Module.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Module.#ctor*
  parent: System.Reflection.Module
  isExternal: false
  name: Module
  nameWithType: Module.Module
- uid: System.Reflection.Module.Assembly*
  parent: System.Reflection.Module
  isExternal: false
  name: Assembly
  nameWithType: Module.Assembly
- uid: System.Reflection.Module.CustomAttributes*
  parent: System.Reflection.Module
  isExternal: false
  name: CustomAttributes
  nameWithType: Module.CustomAttributes
- uid: System.Reflection.Module.Equals*
  parent: System.Reflection.Module
  isExternal: false
  name: Equals
  nameWithType: Module.Equals
- uid: System.Reflection.Module.FindTypes*
  parent: System.Reflection.Module
  isExternal: false
  name: FindTypes
  nameWithType: Module.FindTypes
- uid: System.Reflection.Module.FullyQualifiedName*
  parent: System.Reflection.Module
  isExternal: false
  name: FullyQualifiedName
  nameWithType: Module.FullyQualifiedName
- uid: System.Reflection.Module.GetCustomAttributes*
  parent: System.Reflection.Module
  isExternal: false
  name: GetCustomAttributes
  nameWithType: Module.GetCustomAttributes
- uid: System.Reflection.Module.GetCustomAttributesData*
  parent: System.Reflection.Module
  isExternal: false
  name: GetCustomAttributesData
  nameWithType: Module.GetCustomAttributesData
- uid: System.Reflection.Module.GetField*
  parent: System.Reflection.Module
  isExternal: false
  name: GetField
  nameWithType: Module.GetField
- uid: System.Reflection.Module.GetFields*
  parent: System.Reflection.Module
  isExternal: false
  name: GetFields
  nameWithType: Module.GetFields
- uid: System.Reflection.Module.GetHashCode*
  parent: System.Reflection.Module
  isExternal: false
  name: GetHashCode
  nameWithType: Module.GetHashCode
- uid: System.Reflection.Module.GetMethod*
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethod
  nameWithType: Module.GetMethod
- uid: System.Reflection.Module.GetMethodImpl*
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethodImpl
  nameWithType: Module.GetMethodImpl
- uid: System.Reflection.Module.GetMethods*
  parent: System.Reflection.Module
  isExternal: false
  name: GetMethods
  nameWithType: Module.GetMethods
- uid: System.Reflection.Module.GetObjectData*
  parent: System.Reflection.Module
  isExternal: false
  name: GetObjectData
  nameWithType: Module.GetObjectData
- uid: System.Reflection.Module.GetPEKind*
  parent: System.Reflection.Module
  isExternal: false
  name: GetPEKind
  nameWithType: Module.GetPEKind
- uid: System.Reflection.Module.GetSignerCertificate*
  parent: System.Reflection.Module
  isExternal: false
  name: GetSignerCertificate
  nameWithType: Module.GetSignerCertificate
- uid: System.Reflection.Module.GetType*
  parent: System.Reflection.Module
  isExternal: false
  name: GetType
  nameWithType: Module.GetType
- uid: System.Reflection.Module.GetTypes*
  parent: System.Reflection.Module
  isExternal: false
  name: GetTypes
  nameWithType: Module.GetTypes
- uid: System.Reflection.Module.IsDefined*
  parent: System.Reflection.Module
  isExternal: false
  name: IsDefined
  nameWithType: Module.IsDefined
- uid: System.Reflection.Module.IsResource*
  parent: System.Reflection.Module
  isExternal: false
  name: IsResource
  nameWithType: Module.IsResource
- uid: System.Reflection.Module.MDStreamVersion*
  parent: System.Reflection.Module
  isExternal: false
  name: MDStreamVersion
  nameWithType: Module.MDStreamVersion
- uid: System.Reflection.Module.MetadataToken*
  parent: System.Reflection.Module
  isExternal: false
  name: MetadataToken
  nameWithType: Module.MetadataToken
- uid: System.Reflection.Module.ModuleHandle*
  parent: System.Reflection.Module
  isExternal: false
  name: ModuleHandle
  nameWithType: Module.ModuleHandle
- uid: System.Reflection.Module.ModuleVersionId*
  parent: System.Reflection.Module
  isExternal: false
  name: ModuleVersionId
  nameWithType: Module.ModuleVersionId
- uid: System.Reflection.Module.Name*
  parent: System.Reflection.Module
  isExternal: false
  name: Name
  nameWithType: Module.Name
- uid: System.Reflection.Module.op_Equality*
  parent: System.Reflection.Module
  isExternal: false
  name: op_Equality
  nameWithType: Module.op_Equality
- uid: System.Reflection.Module.op_Inequality*
  parent: System.Reflection.Module
  isExternal: false
  name: op_Inequality
  nameWithType: Module.op_Inequality
- uid: System.Reflection.Module.ResolveField*
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveField
  nameWithType: Module.ResolveField
- uid: System.Reflection.Module.ResolveMember*
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveMember
  nameWithType: Module.ResolveMember
- uid: System.Reflection.Module.ResolveMethod*
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveMethod
  nameWithType: Module.ResolveMethod
- uid: System.Reflection.Module.ResolveSignature*
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveSignature
  nameWithType: Module.ResolveSignature
- uid: System.Reflection.Module.ResolveString*
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveString
  nameWithType: Module.ResolveString
- uid: System.Reflection.Module.ResolveType*
  parent: System.Reflection.Module
  isExternal: false
  name: ResolveType
  nameWithType: Module.ResolveType
- uid: System.Reflection.Module.ScopeName*
  parent: System.Reflection.Module
  isExternal: false
  name: ScopeName
  nameWithType: Module.ScopeName
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames*
  parent: System.Reflection.Module
  isExternal: false
  name: System.Runtime.InteropServices._Module.GetIDsOfNames
  nameWithType: Module.System.Runtime.InteropServices._Module.GetIDsOfNames
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo*
  parent: System.Reflection.Module
  isExternal: false
  name: System.Runtime.InteropServices._Module.GetTypeInfo
  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfo
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount*
  parent: System.Reflection.Module
  isExternal: false
  name: System.Runtime.InteropServices._Module.GetTypeInfoCount
  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfoCount
- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke*
  parent: System.Reflection.Module
  isExternal: false
  name: System.Runtime.InteropServices._Module.Invoke
  nameWithType: Module.System.Runtime.InteropServices._Module.Invoke
- uid: System.Reflection.Module.ToString*
  parent: System.Reflection.Module
  isExternal: false
  name: ToString
  nameWithType: Module.ToString
