### YamlMime:ManagedReference
items:
- uid: System.Reflection.Assembly
  id: Assembly
  children:
  - System.Reflection.Assembly.#ctor
  - System.Reflection.Assembly.CodeBase
  - System.Reflection.Assembly.CreateInstance(System.String)
  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
  - System.Reflection.Assembly.CustomAttributes
  - System.Reflection.Assembly.DefinedTypes
  - System.Reflection.Assembly.EntryPoint
  - System.Reflection.Assembly.Equals(System.Object)
  - System.Reflection.Assembly.EscapedCodeBase
  - System.Reflection.Assembly.Evidence
  - System.Reflection.Assembly.ExportedTypes
  - System.Reflection.Assembly.FullName
  - System.Reflection.Assembly.GetAssembly(System.Type)
  - System.Reflection.Assembly.GetCallingAssembly
  - System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  - System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Assembly.GetCustomAttributesData
  - System.Reflection.Assembly.GetEntryAssembly
  - System.Reflection.Assembly.GetExecutingAssembly
  - System.Reflection.Assembly.GetExportedTypes
  - System.Reflection.Assembly.GetFile(System.String)
  - System.Reflection.Assembly.GetFiles
  - System.Reflection.Assembly.GetFiles(System.Boolean)
  - System.Reflection.Assembly.GetHashCode
  - System.Reflection.Assembly.GetLoadedModules
  - System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  - System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  - System.Reflection.Assembly.GetManifestResourceNames
  - System.Reflection.Assembly.GetManifestResourceStream(System.String)
  - System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
  - System.Reflection.Assembly.GetModule(System.String)
  - System.Reflection.Assembly.GetModules
  - System.Reflection.Assembly.GetModules(System.Boolean)
  - System.Reflection.Assembly.GetName
  - System.Reflection.Assembly.GetName(System.Boolean)
  - System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.Assembly.GetReferencedAssemblies
  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  - System.Reflection.Assembly.GetType(System.String)
  - System.Reflection.Assembly.GetType(System.String,System.Boolean)
  - System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  - System.Reflection.Assembly.GetTypes
  - System.Reflection.Assembly.GlobalAssemblyCache
  - System.Reflection.Assembly.HostContext
  - System.Reflection.Assembly.ImageRuntimeVersion
  - System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Assembly.IsDynamic
  - System.Reflection.Assembly.IsFullyTrusted
  - System.Reflection.Assembly.Load(System.Byte[])
  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  - System.Reflection.Assembly.Load(System.String)
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  - System.Reflection.Assembly.LoadFile(System.String)
  - System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.LoadFrom(System.String)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  - System.Reflection.Assembly.LoadWithPartialName(System.String)
  - System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  - System.Reflection.Assembly.Location
  - System.Reflection.Assembly.ManifestModule
  - System.Reflection.Assembly.ModuleResolve
  - System.Reflection.Assembly.Modules
  - System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)
  - System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)
  - System.Reflection.Assembly.PermissionSet
  - System.Reflection.Assembly.ReflectionOnly
  - System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  - System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  - System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  - System.Reflection.Assembly.SecurityRuleSet
  - System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
  - System.Reflection.Assembly.ToString
  - System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  langs:
  - csharp
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Assembly))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Assembly : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Assembly, System.Runtime.Serialization.ISerializable, System.Security.IEvidenceFactory
  inheritance:
  - System.Object
  implements:
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.InteropServices._Assembly
  - System.Runtime.Serialization.ISerializable
  - System.Security.IEvidenceFactory
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.#ctor
  id: '#ctor'
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Assembly()
  nameWithType: Assembly.Assembly()
  fullName: System.Reflection.Assembly.Assembly()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected Assembly ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.CodeBase
  id: CodeBase
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: CodeBase
  nameWithType: Assembly.CodeBase
  fullName: System.Reflection.Assembly.CodeBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string CodeBase { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.CreateInstance(System.String)
  id: CreateInstance(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: CreateInstance(String)
  nameWithType: Assembly.CreateInstance(String)
  fullName: System.Reflection.Assembly.CreateInstance(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public object CreateInstance (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Reflection.Assembly.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
  id: CreateInstance(System.String,System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: CreateInstance(String,Boolean)
  nameWithType: Assembly.CreateInstance(String,Boolean)
  fullName: System.Reflection.Assembly.CreateInstance(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public object CreateInstance (string typeName, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Reflection.Assembly.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Reflection.Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);
    parameters:
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Reflection.Assembly.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
  id: CreateQualifiedName(System.String,System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: CreateQualifiedName(String,String)
  nameWithType: Assembly.CreateQualifiedName(String,String)
  fullName: System.Reflection.Assembly.CreateQualifiedName(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static string CreateQualifiedName (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.CustomAttributes
  id: CustomAttributes
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: CustomAttributes
  nameWithType: Assembly.CustomAttributes
  fullName: System.Reflection.Assembly.CustomAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData> CustomAttributes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.DefinedTypes
  id: DefinedTypes
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: DefinedTypes
  nameWithType: Assembly.DefinedTypes
  fullName: System.Reflection.Assembly.DefinedTypes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo> DefinedTypes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.EntryPoint
  id: EntryPoint
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: EntryPoint
  nameWithType: Assembly.EntryPoint
  fullName: System.Reflection.Assembly.EntryPoint
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.MethodInfo EntryPoint { get; }
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Assembly.Equals(Object)
  fullName: System.Reflection.Assembly.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.EscapedCodeBase
  id: EscapedCodeBase
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: EscapedCodeBase
  nameWithType: Assembly.EscapedCodeBase
  fullName: System.Reflection.Assembly.EscapedCodeBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string EscapedCodeBase { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Evidence
  id: Evidence
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Evidence
  nameWithType: Assembly.Evidence
  fullName: System.Reflection.Assembly.Evidence
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Policy.Evidence Evidence { get; }
    return:
      type: System.Security.Policy.Evidence
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ExportedTypes
  id: ExportedTypes
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ExportedTypes
  nameWithType: Assembly.ExportedTypes
  fullName: System.Reflection.Assembly.ExportedTypes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<Type> ExportedTypes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.FullName
  id: FullName
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: FullName
  nameWithType: Assembly.FullName
  fullName: System.Reflection.Assembly.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string FullName { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetAssembly(System.Type)
  id: GetAssembly(System.Type)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetAssembly(Type)
  nameWithType: Assembly.GetAssembly(Type)
  fullName: System.Reflection.Assembly.GetAssembly(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly GetAssembly (Type type);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetCallingAssembly
  id: GetCallingAssembly
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetCallingAssembly()
  nameWithType: Assembly.GetCallingAssembly()
  fullName: System.Reflection.Assembly.GetCallingAssembly()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly GetCallingAssembly ();
    parameters: []
    return:
      type: System.Reflection.Assembly
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: Assembly.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Assembly.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Assembly.GetCustomAttributes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: Assembly.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Assembly.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object[]
      description: To be added.
  overload: System.Reflection.Assembly.GetCustomAttributes*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetCustomAttributesData
  id: GetCustomAttributesData
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetCustomAttributesData()
  nameWithType: Assembly.GetCustomAttributesData()
  fullName: System.Reflection.Assembly.GetCustomAttributesData()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetEntryAssembly
  id: GetEntryAssembly
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetEntryAssembly()
  nameWithType: Assembly.GetEntryAssembly()
  fullName: System.Reflection.Assembly.GetEntryAssembly()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly GetEntryAssembly ();
    parameters: []
    return:
      type: System.Reflection.Assembly
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetExecutingAssembly
  id: GetExecutingAssembly
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetExecutingAssembly()
  nameWithType: Assembly.GetExecutingAssembly()
  fullName: System.Reflection.Assembly.GetExecutingAssembly()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly GetExecutingAssembly ();
    parameters: []
    return:
      type: System.Reflection.Assembly
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetExportedTypes
  id: GetExportedTypes
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetExportedTypes()
  nameWithType: Assembly.GetExportedTypes()
  fullName: System.Reflection.Assembly.GetExportedTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GetExportedTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetFile(System.String)
  id: GetFile(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetFile(String)
  nameWithType: Assembly.GetFile(String)
  fullName: System.Reflection.Assembly.GetFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.IO.FileStream GetFile (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.IO.FileStream
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetFiles
  id: GetFiles
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetFiles()
  nameWithType: Assembly.GetFiles()
  fullName: System.Reflection.Assembly.GetFiles()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.IO.FileStream[] GetFiles ();
    parameters: []
    return:
      type: System.IO.FileStream[]
      description: To be added.
  overload: System.Reflection.Assembly.GetFiles*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetFiles(System.Boolean)
  id: GetFiles(System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetFiles(Boolean)
  nameWithType: Assembly.GetFiles(Boolean)
  fullName: System.Reflection.Assembly.GetFiles(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.IO.FileStream[] GetFiles (bool getResourceModules);
    parameters:
    - id: getResourceModules
      type: System.Boolean
      description: To be added.
    return:
      type: System.IO.FileStream[]
      description: To be added.
  overload: System.Reflection.Assembly.GetFiles*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Assembly.GetHashCode()
  fullName: System.Reflection.Assembly.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetLoadedModules
  id: GetLoadedModules
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetLoadedModules()
  nameWithType: Assembly.GetLoadedModules()
  fullName: System.Reflection.Assembly.GetLoadedModules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Module[] GetLoadedModules ();
    parameters: []
    return:
      type: System.Reflection.Module[]
      description: To be added.
  overload: System.Reflection.Assembly.GetLoadedModules*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  id: GetLoadedModules(System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetLoadedModules(Boolean)
  nameWithType: Assembly.GetLoadedModules(Boolean)
  fullName: System.Reflection.Assembly.GetLoadedModules(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.Module[] GetLoadedModules (bool getResourceModules);
    parameters:
    - id: getResourceModules
      type: System.Boolean
      description: To be added.
    return:
      type: System.Reflection.Module[]
      description: To be added.
  overload: System.Reflection.Assembly.GetLoadedModules*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  id: GetManifestResourceInfo(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetManifestResourceInfo(String)
  nameWithType: Assembly.GetManifestResourceInfo(String)
  fullName: System.Reflection.Assembly.GetManifestResourceInfo(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);
    parameters:
    - id: resourceName
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.ManifestResourceInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetManifestResourceNames
  id: GetManifestResourceNames
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetManifestResourceNames()
  nameWithType: Assembly.GetManifestResourceNames()
  fullName: System.Reflection.Assembly.GetManifestResourceNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string[] GetManifestResourceNames ();
    parameters: []
    return:
      type: System.String[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  id: GetManifestResourceStream(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetManifestResourceStream(String)
  nameWithType: Assembly.GetManifestResourceStream(String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.IO.Stream GetManifestResourceStream (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.IO.Stream
      description: To be added.
  overload: System.Reflection.Assembly.GetManifestResourceStream*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
  id: GetManifestResourceStream(System.Type,System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetManifestResourceStream(Type,String)
  nameWithType: Assembly.GetManifestResourceStream(Type,String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.IO.Stream GetManifestResourceStream (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.IO.Stream
      description: To be added.
  overload: System.Reflection.Assembly.GetManifestResourceStream*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetModule(System.String)
  id: GetModule(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetModule(String)
  nameWithType: Assembly.GetModule(String)
  fullName: System.Reflection.Assembly.GetModule(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.Module GetModule (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Module
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetModules
  id: GetModules
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetModules()
  nameWithType: Assembly.GetModules()
  fullName: System.Reflection.Assembly.GetModules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Module[] GetModules ();
    parameters: []
    return:
      type: System.Reflection.Module[]
      description: To be added.
  overload: System.Reflection.Assembly.GetModules*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetModules(System.Boolean)
  id: GetModules(System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetModules(Boolean)
  nameWithType: Assembly.GetModules(Boolean)
  fullName: System.Reflection.Assembly.GetModules(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.Module[] GetModules (bool getResourceModules);
    parameters:
    - id: getResourceModules
      type: System.Boolean
      description: To be added.
    return:
      type: System.Reflection.Module[]
      description: To be added.
  overload: System.Reflection.Assembly.GetModules*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetName
  id: GetName
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetName()
  nameWithType: Assembly.GetName()
  fullName: System.Reflection.Assembly.GetName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.AssemblyName GetName ();
    parameters: []
    return:
      type: System.Reflection.AssemblyName
      description: To be added.
  overload: System.Reflection.Assembly.GetName*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetName(System.Boolean)
  id: GetName(System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetName(Boolean)
  nameWithType: Assembly.GetName(Boolean)
  fullName: System.Reflection.Assembly.GetName(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.AssemblyName GetName (bool copiedName);
    parameters:
    - id: copiedName
      type: System.Boolean
      description: To be added.
    return:
      type: System.Reflection.AssemblyName
      description: To be added.
  overload: System.Reflection.Assembly.GetName*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Assembly.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Reflection.Assembly.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetReferencedAssemblies
  id: GetReferencedAssemblies
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetReferencedAssemblies()
  nameWithType: Assembly.GetReferencedAssemblies()
  fullName: System.Reflection.Assembly.GetReferencedAssemblies()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies ();
    parameters: []
    return:
      type: System.Reflection.AssemblyName[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  id: GetSatelliteAssembly(System.Globalization.CultureInfo)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetSatelliteAssembly(CultureInfo)
  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo)
  fullName: System.Reflection.Assembly.GetSatelliteAssembly(CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.GetSatelliteAssembly*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  id: GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetSatelliteAssembly(CultureInfo,Version)
  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo,Version)
  fullName: System.Reflection.Assembly.GetSatelliteAssembly(CultureInfo,Version)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: version
      type: System.Version
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.GetSatelliteAssembly*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetType(System.String)
  id: GetType(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetType(String)
  nameWithType: Assembly.GetType(String)
  fullName: System.Reflection.Assembly.GetType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type GetType (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Assembly.GetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: Assembly.GetType(String,Boolean)
  fullName: System.Reflection.Assembly.GetType(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type GetType (string name, bool throwOnError);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Assembly.GetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: Assembly.GetType(String,Boolean,Boolean)
  fullName: System.Reflection.Assembly.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type GetType (string name, bool throwOnError, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: throwOnError
      type: System.Boolean
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: System.Type
      description: To be added.
  overload: System.Reflection.Assembly.GetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GetTypes
  id: GetTypes
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GetTypes()
  nameWithType: Assembly.GetTypes()
  fullName: System.Reflection.Assembly.GetTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GetTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.GlobalAssemblyCache
  id: GlobalAssemblyCache
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: GlobalAssemblyCache
  nameWithType: Assembly.GlobalAssemblyCache
  fullName: System.Reflection.Assembly.GlobalAssemblyCache
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool GlobalAssemblyCache { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.HostContext
  id: HostContext
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: HostContext
  nameWithType: Assembly.HostContext
  fullName: System.Reflection.Assembly.HostContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual long HostContext { get; }
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ImageRuntimeVersion
  id: ImageRuntimeVersion
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ImageRuntimeVersion
  nameWithType: Assembly.ImageRuntimeVersion
  fullName: System.Reflection.Assembly.ImageRuntimeVersion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string ImageRuntimeVersion { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: Assembly.IsDefined(Type,Boolean)
  fullName: System.Reflection.Assembly.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: inherit
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.IsDynamic
  id: IsDynamic
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: IsDynamic
  nameWithType: Assembly.IsDynamic
  fullName: System.Reflection.Assembly.IsDynamic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsDynamic { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.IsFullyTrusted
  id: IsFullyTrusted
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: IsFullyTrusted
  nameWithType: Assembly.IsFullyTrusted
  fullName: System.Reflection.Assembly.IsFullyTrusted
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsFullyTrusted { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Load(System.Byte[])
  id: Load(System.Byte[])
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Load(Byte[])
  nameWithType: Assembly.Load(Byte[])
  fullName: System.Reflection.Assembly.Load(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly Load (byte[] rawAssembly);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.Load*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  id: Load(System.Reflection.AssemblyName)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Load(AssemblyName)
  nameWithType: Assembly.Load(AssemblyName)
  fullName: System.Reflection.Assembly.Load(AssemblyName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);
    parameters:
    - id: assemblyRef
      type: System.Reflection.AssemblyName
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.Load*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Load(System.String)
  id: Load(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Load(String)
  nameWithType: Assembly.Load(String)
  fullName: System.Reflection.Assembly.Load(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly Load (string assemblyString);
    parameters:
    - id: assemblyString
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.Load*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
  id: Load(System.Byte[],System.Byte[])
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Load(Byte[],Byte[])
  nameWithType: Assembly.Load(Byte[],Byte[])
  fullName: System.Reflection.Assembly.Load(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: To be added.
    - id: rawSymbolStore
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.Load*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  id: Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Load(AssemblyName,Evidence)
  nameWithType: Assembly.Load(AssemblyName,Evidence)
  fullName: System.Reflection.Assembly.Load(AssemblyName,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);
    parameters:
    - id: assemblyRef
      type: System.Reflection.AssemblyName
      description: To be added.
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.Load*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
  id: Load(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Load(String,Evidence)
  nameWithType: Assembly.Load(String,Evidence)
  fullName: System.Reflection.Assembly.Load(String,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);
    parameters:
    - id: assemblyString
      type: System.String
      description: To be added.
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.Load*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  id: Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Load(Byte[],Byte[],Evidence)
  nameWithType: Assembly.Load(Byte[],Byte[],Evidence)
  fullName: System.Reflection.Assembly.Load(Byte[],Byte[],Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: To be added.
    - id: rawSymbolStore
      type: System.Byte[]
      description: To be added.
    - id: securityEvidence
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.Load*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  id: Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Load(Byte[],Byte[],SecurityContextSource)
  nameWithType: Assembly.Load(Byte[],Byte[],SecurityContextSource)
  fullName: System.Reflection.Assembly.Load(Byte[],Byte[],SecurityContextSource)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.SecurityContextSource securityContextSource);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: To be added.
    - id: rawSymbolStore
      type: System.Byte[]
      description: To be added.
    - id: securityContextSource
      type: System.Security.SecurityContextSource
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.Load*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadFile(System.String)
  id: LoadFile(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadFile(String)
  nameWithType: Assembly.LoadFile(String)
  fullName: System.Reflection.Assembly.LoadFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly LoadFile (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.LoadFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
  id: LoadFile(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadFile(String,Evidence)
  nameWithType: Assembly.LoadFile(String,Evidence)
  fullName: System.Reflection.Assembly.LoadFile(String,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly LoadFile (string path, System.Security.Policy.Evidence securityEvidence);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    - id: securityEvidence
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.LoadFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadFrom(System.String)
  id: LoadFrom(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadFrom(String)
  nameWithType: Assembly.LoadFrom(String)
  fullName: System.Reflection.Assembly.LoadFrom(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly LoadFrom (string assemblyFile);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.LoadFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
  id: LoadFrom(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadFrom(String,Evidence)
  nameWithType: Assembly.LoadFrom(String,Evidence)
  fullName: System.Reflection.Assembly.LoadFrom(String,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: securityEvidence
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.LoadFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  id: LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadFrom(String,Byte[],AssemblyHashAlgorithm)
  nameWithType: Assembly.LoadFrom(String,Byte[],AssemblyHashAlgorithm)
  fullName: System.Reflection.Assembly.LoadFrom(String,Byte[],AssemblyHashAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly LoadFrom (string assemblyFile, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: hashValue
      type: System.Byte[]
      description: To be added.
    - id: hashAlgorithm
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.LoadFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  id: LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)
  nameWithType: Assembly.LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)
  fullName: System.Reflection.Assembly.LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: securityEvidence
      type: System.Security.Policy.Evidence
      description: To be added.
    - id: hashValue
      type: System.Byte[]
      description: To be added.
    - id: hashAlgorithm
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.LoadFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
  id: LoadModule(System.String,System.Byte[])
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadModule(String,Byte[])
  nameWithType: Assembly.LoadModule(String,Byte[])
  fullName: System.Reflection.Assembly.LoadModule(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);
    parameters:
    - id: moduleName
      type: System.String
      description: To be added.
    - id: rawModule
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Reflection.Module
      description: To be added.
  overload: System.Reflection.Assembly.LoadModule*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  id: LoadModule(System.String,System.Byte[],System.Byte[])
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadModule(String,Byte[],Byte[])
  nameWithType: Assembly.LoadModule(String,Byte[],Byte[])
  fullName: System.Reflection.Assembly.LoadModule(String,Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);
    parameters:
    - id: moduleName
      type: System.String
      description: To be added.
    - id: rawModule
      type: System.Byte[]
      description: To be added.
    - id: rawSymbolStore
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Reflection.Module
      description: To be added.
  overload: System.Reflection.Assembly.LoadModule*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadWithPartialName(System.String)
  id: LoadWithPartialName(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadWithPartialName(String)
  nameWithType: Assembly.LoadWithPartialName(String)
  fullName: System.Reflection.Assembly.LoadWithPartialName(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly LoadWithPartialName (string partialName);
    parameters:
    - id: partialName
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.LoadWithPartialName*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  id: LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: LoadWithPartialName(String,Evidence)
  nameWithType: Assembly.LoadWithPartialName(String,Evidence)
  fullName: System.Reflection.Assembly.LoadWithPartialName(String,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly LoadWithPartialName (string partialName, System.Security.Policy.Evidence securityEvidence);
    parameters:
    - id: partialName
      type: System.String
      description: To be added.
    - id: securityEvidence
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.LoadWithPartialName*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Location
  id: Location
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Location
  nameWithType: Assembly.Location
  fullName: System.Reflection.Assembly.Location
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string Location { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ManifestModule
  id: ManifestModule
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ManifestModule
  nameWithType: Assembly.ManifestModule
  fullName: System.Reflection.Assembly.ManifestModule
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.Module ManifestModule { get; }
    return:
      type: System.Reflection.Module
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ModuleResolve
  id: ModuleResolve
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ModuleResolve
  nameWithType: Assembly.ModuleResolve
  fullName: System.Reflection.Assembly.ModuleResolve
  type: Event
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual event System.Reflection.ModuleResolveEventHandler ModuleResolve;
    return:
      type: System.Reflection.ModuleResolveEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.Modules
  id: Modules
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: Modules
  nameWithType: Assembly.Modules
  fullName: System.Reflection.Assembly.Modules
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.Module> Modules { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Module}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)
  id: op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: op_Equality(Assembly,Assembly)
  nameWithType: Assembly.op_Equality(Assembly,Assembly)
  fullName: System.Reflection.Assembly.op_Equality(Assembly,Assembly)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Reflection.Assembly left, System.Reflection.Assembly right);
    parameters:
    - id: left
      type: System.Reflection.Assembly
      description: To be added.
    - id: right
      type: System.Reflection.Assembly
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)
  id: op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: op_Inequality(Assembly,Assembly)
  nameWithType: Assembly.op_Inequality(Assembly,Assembly)
  fullName: System.Reflection.Assembly.op_Inequality(Assembly,Assembly)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Reflection.Assembly left, System.Reflection.Assembly right);
    parameters:
    - id: left
      type: System.Reflection.Assembly
      description: To be added.
    - id: right
      type: System.Reflection.Assembly
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.PermissionSet
  id: PermissionSet
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: PermissionSet
  nameWithType: Assembly.PermissionSet
  fullName: System.Reflection.Assembly.PermissionSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.PermissionSet PermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ReflectionOnly
  id: ReflectionOnly
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ReflectionOnly
  nameWithType: Assembly.ReflectionOnly
  fullName: System.Reflection.Assembly.ReflectionOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool ReflectionOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  id: ReflectionOnlyLoad(System.Byte[])
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ReflectionOnlyLoad(Byte[])
  nameWithType: Assembly.ReflectionOnlyLoad(Byte[])
  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly ReflectionOnlyLoad (byte[] rawAssembly);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.ReflectionOnlyLoad*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  id: ReflectionOnlyLoad(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ReflectionOnlyLoad(String)
  nameWithType: Assembly.ReflectionOnlyLoad(String)
  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly ReflectionOnlyLoad (string assemblyString);
    parameters:
    - id: assemblyString
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  overload: System.Reflection.Assembly.ReflectionOnlyLoad*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  id: ReflectionOnlyLoadFrom(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ReflectionOnlyLoadFrom(String)
  nameWithType: Assembly.ReflectionOnlyLoadFrom(String)
  fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly ReflectionOnlyLoadFrom (string assemblyFile);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.SecurityRuleSet
  id: SecurityRuleSet
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: SecurityRuleSet
  nameWithType: Assembly.SecurityRuleSet
  fullName: System.Reflection.Assembly.SecurityRuleSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.SecurityRuleSet SecurityRuleSet { get; }
    return:
      type: System.Security.SecurityRuleSet
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
  id: System#Runtime#InteropServices#_Assembly#GetType
  isEii: true
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: System.Runtime.InteropServices._Assembly.GetType()
  nameWithType: Assembly.System.Runtime.InteropServices._Assembly.GetType()
  fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: Type _Assembly.GetType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.ToString
  id: ToString
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: ToString()
  nameWithType: Assembly.ToString()
  fullName: System.Reflection.Assembly.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  id: UnsafeLoadFrom(System.String)
  parent: System.Reflection.Assembly
  langs:
  - csharp
  name: UnsafeLoadFrom(String)
  nameWithType: Assembly.UnsafeLoadFrom(String)
  fullName: System.Reflection.Assembly.UnsafeLoadFrom(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Reflection.Assembly UnsafeLoadFrom (string assemblyFile);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Assembly
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Reflection.Assembly.#ctor
  parent: System.Reflection.Assembly
  isExternal: false
  name: Assembly()
  nameWithType: Assembly.Assembly()
  fullName: System.Reflection.Assembly.Assembly()
- uid: System.Reflection.Assembly.CodeBase
  parent: System.Reflection.Assembly
  isExternal: false
  name: CodeBase
  nameWithType: Assembly.CodeBase
  fullName: System.Reflection.Assembly.CodeBase
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.CreateInstance(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: CreateInstance(String)
  nameWithType: Assembly.CreateInstance(String)
  fullName: System.Reflection.Assembly.CreateInstance(String)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: CreateInstance(String,Boolean)
  nameWithType: Assembly.CreateInstance(String,Boolean)
  fullName: System.Reflection.Assembly.CreateInstance(String,Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Reflection.Assembly
  isExternal: false
  name: CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Reflection.Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: CreateQualifiedName(String,String)
  nameWithType: Assembly.CreateQualifiedName(String,String)
  fullName: System.Reflection.Assembly.CreateQualifiedName(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.CustomAttributes
  parent: System.Reflection.Assembly
  isExternal: false
  name: CustomAttributes
  nameWithType: Assembly.CustomAttributes
  fullName: System.Reflection.Assembly.CustomAttributes
- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<CustomAttributeData>
  nameWithType: IEnumerable<CustomAttributeData>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>
- uid: System.Reflection.Assembly.DefinedTypes
  parent: System.Reflection.Assembly
  isExternal: false
  name: DefinedTypes
  nameWithType: Assembly.DefinedTypes
  fullName: System.Reflection.Assembly.DefinedTypes
- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TypeInfo>
  nameWithType: IEnumerable<TypeInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>
- uid: System.Reflection.Assembly.EntryPoint
  parent: System.Reflection.Assembly
  isExternal: false
  name: EntryPoint
  nameWithType: Assembly.EntryPoint
  fullName: System.Reflection.Assembly.EntryPoint
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.Assembly.Equals(System.Object)
  parent: System.Reflection.Assembly
  isExternal: false
  name: Equals(Object)
  nameWithType: Assembly.Equals(Object)
  fullName: System.Reflection.Assembly.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Assembly.EscapedCodeBase
  parent: System.Reflection.Assembly
  isExternal: false
  name: EscapedCodeBase
  nameWithType: Assembly.EscapedCodeBase
  fullName: System.Reflection.Assembly.EscapedCodeBase
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.Evidence
  parent: System.Reflection.Assembly
  isExternal: false
  name: Evidence
  nameWithType: Assembly.Evidence
  fullName: System.Reflection.Assembly.Evidence
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Reflection.Assembly.ExportedTypes
  parent: System.Reflection.Assembly
  isExternal: false
  name: ExportedTypes
  nameWithType: Assembly.ExportedTypes
  fullName: System.Reflection.Assembly.ExportedTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
- uid: System.Reflection.Assembly.FullName
  parent: System.Reflection.Assembly
  isExternal: false
  name: FullName
  nameWithType: Assembly.FullName
  fullName: System.Reflection.Assembly.FullName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.GetAssembly(System.Type)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetAssembly(Type)
  nameWithType: Assembly.GetAssembly(Type)
  fullName: System.Reflection.Assembly.GetAssembly(Type)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Assembly.GetCallingAssembly
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetCallingAssembly()
  nameWithType: Assembly.GetCallingAssembly()
  fullName: System.Reflection.Assembly.GetCallingAssembly()
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: Assembly.GetCustomAttributes(Boolean)
  fullName: System.Reflection.Assembly.GetCustomAttributes(Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: Assembly.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.Assembly.GetCustomAttributes(Type,Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.GetCustomAttributesData
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: Assembly.GetCustomAttributesData()
  fullName: System.Reflection.Assembly.GetCustomAttributesData()
- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<CustomAttributeData>
  nameWithType: IList<CustomAttributeData>
  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>
- uid: System.Reflection.Assembly.GetEntryAssembly
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetEntryAssembly()
  nameWithType: Assembly.GetEntryAssembly()
  fullName: System.Reflection.Assembly.GetEntryAssembly()
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly.GetExecutingAssembly
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetExecutingAssembly()
  nameWithType: Assembly.GetExecutingAssembly()
  fullName: System.Reflection.Assembly.GetExecutingAssembly()
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly.GetExportedTypes
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetExportedTypes()
  nameWithType: Assembly.GetExportedTypes()
  fullName: System.Reflection.Assembly.GetExportedTypes()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Assembly.GetFile(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetFile(String)
  nameWithType: Assembly.GetFile(String)
  fullName: System.Reflection.Assembly.GetFile(String)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.GetFiles
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetFiles()
  nameWithType: Assembly.GetFiles()
  fullName: System.Reflection.Assembly.GetFiles()
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream[]
- uid: System.Reflection.Assembly.GetFiles(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetFiles(Boolean)
  nameWithType: Assembly.GetFiles(Boolean)
  fullName: System.Reflection.Assembly.GetFiles(Boolean)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.GetHashCode
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetHashCode()
  nameWithType: Assembly.GetHashCode()
  fullName: System.Reflection.Assembly.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Assembly.GetLoadedModules
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetLoadedModules()
  nameWithType: Assembly.GetLoadedModules()
  fullName: System.Reflection.Assembly.GetLoadedModules()
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module[]
- uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetLoadedModules(Boolean)
  nameWithType: Assembly.GetLoadedModules(Boolean)
  fullName: System.Reflection.Assembly.GetLoadedModules(Boolean)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetManifestResourceInfo(String)
  nameWithType: Assembly.GetManifestResourceInfo(String)
  fullName: System.Reflection.Assembly.GetManifestResourceInfo(String)
- uid: System.Reflection.ManifestResourceInfo
  parent: System.Reflection
  isExternal: false
  name: ManifestResourceInfo
  nameWithType: ManifestResourceInfo
  fullName: System.Reflection.ManifestResourceInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.GetManifestResourceNames
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetManifestResourceNames()
  nameWithType: Assembly.GetManifestResourceNames()
  fullName: System.Reflection.Assembly.GetManifestResourceNames()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetManifestResourceStream(String)
  nameWithType: Assembly.GetManifestResourceStream(String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetManifestResourceStream(Type,String)
  nameWithType: Assembly.GetManifestResourceStream(Type,String)
  fullName: System.Reflection.Assembly.GetManifestResourceStream(Type,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.GetModule(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetModule(String)
  nameWithType: Assembly.GetModule(String)
  fullName: System.Reflection.Assembly.GetModule(String)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.GetModules
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetModules()
  nameWithType: Assembly.GetModules()
  fullName: System.Reflection.Assembly.GetModules()
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module[]
- uid: System.Reflection.Assembly.GetModules(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetModules(Boolean)
  nameWithType: Assembly.GetModules(Boolean)
  fullName: System.Reflection.Assembly.GetModules(Boolean)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.GetName
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetName()
  nameWithType: Assembly.GetName()
  fullName: System.Reflection.Assembly.GetName()
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Reflection.Assembly.GetName(System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetName(Boolean)
  nameWithType: Assembly.GetName(Boolean)
  fullName: System.Reflection.Assembly.GetName(Boolean)
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Assembly.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Reflection.Assembly.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Reflection.Assembly.GetReferencedAssemblies
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetReferencedAssemblies()
  nameWithType: Assembly.GetReferencedAssemblies()
  fullName: System.Reflection.Assembly.GetReferencedAssemblies()
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName[]
- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetSatelliteAssembly(CultureInfo)
  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo)
  fullName: System.Reflection.Assembly.GetSatelliteAssembly(CultureInfo)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetSatelliteAssembly(CultureInfo,Version)
  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo,Version)
  fullName: System.Reflection.Assembly.GetSatelliteAssembly(CultureInfo,Version)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Version
  parent: System
  isExternal: false
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Reflection.Assembly.GetType(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetType(String)
  nameWithType: Assembly.GetType(String)
  fullName: System.Reflection.Assembly.GetType(String)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: Assembly.GetType(String,Boolean)
  fullName: System.Reflection.Assembly.GetType(String,Boolean)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: Assembly.GetType(String,Boolean,Boolean)
  fullName: System.Reflection.Assembly.GetType(String,Boolean,Boolean)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.GetTypes
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetTypes()
  nameWithType: Assembly.GetTypes()
  fullName: System.Reflection.Assembly.GetTypes()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Assembly.GlobalAssemblyCache
  parent: System.Reflection.Assembly
  isExternal: false
  name: GlobalAssemblyCache
  nameWithType: Assembly.GlobalAssemblyCache
  fullName: System.Reflection.Assembly.GlobalAssemblyCache
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.HostContext
  parent: System.Reflection.Assembly
  isExternal: false
  name: HostContext
  nameWithType: Assembly.HostContext
  fullName: System.Reflection.Assembly.HostContext
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Reflection.Assembly.ImageRuntimeVersion
  parent: System.Reflection.Assembly
  isExternal: false
  name: ImageRuntimeVersion
  nameWithType: Assembly.ImageRuntimeVersion
  fullName: System.Reflection.Assembly.ImageRuntimeVersion
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Assembly
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: Assembly.IsDefined(Type,Boolean)
  fullName: System.Reflection.Assembly.IsDefined(Type,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.IsDynamic
  parent: System.Reflection.Assembly
  isExternal: false
  name: IsDynamic
  nameWithType: Assembly.IsDynamic
  fullName: System.Reflection.Assembly.IsDynamic
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.IsFullyTrusted
  parent: System.Reflection.Assembly
  isExternal: false
  name: IsFullyTrusted
  nameWithType: Assembly.IsFullyTrusted
  fullName: System.Reflection.Assembly.IsFullyTrusted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.Load(System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load(Byte[])
  nameWithType: Assembly.Load(Byte[])
  fullName: System.Reflection.Assembly.Load(Byte[])
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load(AssemblyName)
  nameWithType: Assembly.Load(AssemblyName)
  fullName: System.Reflection.Assembly.Load(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Reflection.Assembly.Load(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load(String)
  nameWithType: Assembly.Load(String)
  fullName: System.Reflection.Assembly.Load(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load(Byte[],Byte[])
  nameWithType: Assembly.Load(Byte[],Byte[])
  fullName: System.Reflection.Assembly.Load(Byte[],Byte[])
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load(AssemblyName,Evidence)
  nameWithType: Assembly.Load(AssemblyName,Evidence)
  fullName: System.Reflection.Assembly.Load(AssemblyName,Evidence)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load(String,Evidence)
  nameWithType: Assembly.Load(String,Evidence)
  fullName: System.Reflection.Assembly.Load(String,Evidence)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load(Byte[],Byte[],Evidence)
  nameWithType: Assembly.Load(Byte[],Byte[],Evidence)
  fullName: System.Reflection.Assembly.Load(Byte[],Byte[],Evidence)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load(Byte[],Byte[],SecurityContextSource)
  nameWithType: Assembly.Load(Byte[],Byte[],SecurityContextSource)
  fullName: System.Reflection.Assembly.Load(Byte[],Byte[],SecurityContextSource)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.SecurityContextSource
  parent: System.Security
  isExternal: false
  name: SecurityContextSource
  nameWithType: SecurityContextSource
  fullName: System.Security.SecurityContextSource
- uid: System.Reflection.Assembly.LoadFile(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadFile(String)
  nameWithType: Assembly.LoadFile(String)
  fullName: System.Reflection.Assembly.LoadFile(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadFile(String,Evidence)
  nameWithType: Assembly.LoadFile(String,Evidence)
  fullName: System.Reflection.Assembly.LoadFile(String,Evidence)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Reflection.Assembly.LoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadFrom(String)
  nameWithType: Assembly.LoadFrom(String)
  fullName: System.Reflection.Assembly.LoadFrom(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadFrom(String,Evidence)
  nameWithType: Assembly.LoadFrom(String,Evidence)
  fullName: System.Reflection.Assembly.LoadFrom(String,Evidence)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadFrom(String,Byte[],AssemblyHashAlgorithm)
  nameWithType: Assembly.LoadFrom(String,Byte[],AssemblyHashAlgorithm)
  fullName: System.Reflection.Assembly.LoadFrom(String,Byte[],AssemblyHashAlgorithm)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
  parent: System.Configuration.Assemblies
  isExternal: false
  name: AssemblyHashAlgorithm
  nameWithType: AssemblyHashAlgorithm
  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)
  nameWithType: Assembly.LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)
  fullName: System.Reflection.Assembly.LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
  parent: System.Configuration.Assemblies
  isExternal: false
  name: AssemblyHashAlgorithm
  nameWithType: AssemblyHashAlgorithm
  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadModule(String,Byte[])
  nameWithType: Assembly.LoadModule(String,Byte[])
  fullName: System.Reflection.Assembly.LoadModule(String,Byte[])
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadModule(String,Byte[],Byte[])
  nameWithType: Assembly.LoadModule(String,Byte[],Byte[])
  fullName: System.Reflection.Assembly.LoadModule(String,Byte[],Byte[])
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Reflection.Assembly.LoadWithPartialName(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadWithPartialName(String)
  nameWithType: Assembly.LoadWithPartialName(String)
  fullName: System.Reflection.Assembly.LoadWithPartialName(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadWithPartialName(String,Evidence)
  nameWithType: Assembly.LoadWithPartialName(String,Evidence)
  fullName: System.Reflection.Assembly.LoadWithPartialName(String,Evidence)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Reflection.Assembly.Location
  parent: System.Reflection.Assembly
  isExternal: false
  name: Location
  nameWithType: Assembly.Location
  fullName: System.Reflection.Assembly.Location
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.ManifestModule
  parent: System.Reflection.Assembly
  isExternal: false
  name: ManifestModule
  nameWithType: Assembly.ManifestModule
  fullName: System.Reflection.Assembly.ManifestModule
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Assembly.ModuleResolve
  parent: System.Reflection.Assembly
  isExternal: false
  name: ModuleResolve
  nameWithType: Assembly.ModuleResolve
  fullName: System.Reflection.Assembly.ModuleResolve
- uid: System.Reflection.ModuleResolveEventHandler
  parent: System.Reflection
  isExternal: false
  name: ModuleResolveEventHandler
  nameWithType: ModuleResolveEventHandler
  fullName: System.Reflection.ModuleResolveEventHandler
- uid: System.Reflection.Assembly.Modules
  parent: System.Reflection.Assembly
  isExternal: false
  name: Modules
  nameWithType: Assembly.Modules
  fullName: System.Reflection.Assembly.Modules
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Module}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Module>
  nameWithType: IEnumerable<Module>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Module>
- uid: System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)
  parent: System.Reflection.Assembly
  isExternal: false
  name: op_Equality(Assembly,Assembly)
  nameWithType: Assembly.op_Equality(Assembly,Assembly)
  fullName: System.Reflection.Assembly.op_Equality(Assembly,Assembly)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)
  parent: System.Reflection.Assembly
  isExternal: false
  name: op_Inequality(Assembly,Assembly)
  nameWithType: Assembly.op_Inequality(Assembly,Assembly)
  fullName: System.Reflection.Assembly.op_Inequality(Assembly,Assembly)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly.PermissionSet
  parent: System.Reflection.Assembly
  isExternal: false
  name: PermissionSet
  nameWithType: Assembly.PermissionSet
  fullName: System.Reflection.Assembly.PermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Reflection.Assembly.ReflectionOnly
  parent: System.Reflection.Assembly
  isExternal: false
  name: ReflectionOnly
  nameWithType: Assembly.ReflectionOnly
  fullName: System.Reflection.Assembly.ReflectionOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])
  parent: System.Reflection.Assembly
  isExternal: false
  name: ReflectionOnlyLoad(Byte[])
  nameWithType: Assembly.ReflectionOnlyLoad(Byte[])
  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(Byte[])
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: ReflectionOnlyLoad(String)
  nameWithType: Assembly.ReflectionOnlyLoad(String)
  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: ReflectionOnlyLoadFrom(String)
  nameWithType: Assembly.ReflectionOnlyLoadFrom(String)
  fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.SecurityRuleSet
  parent: System.Reflection.Assembly
  isExternal: false
  name: SecurityRuleSet
  nameWithType: Assembly.SecurityRuleSet
  fullName: System.Reflection.Assembly.SecurityRuleSet
- uid: System.Security.SecurityRuleSet
  parent: System.Security
  isExternal: false
  name: SecurityRuleSet
  nameWithType: SecurityRuleSet
  fullName: System.Security.SecurityRuleSet
- uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType
  parent: System.Reflection.Assembly
  isExternal: false
  name: System.Runtime.InteropServices._Assembly.GetType()
  nameWithType: Assembly.System.Runtime.InteropServices._Assembly.GetType()
  fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Assembly.ToString
  parent: System.Reflection.Assembly
  isExternal: false
  name: ToString()
  nameWithType: Assembly.ToString()
  fullName: System.Reflection.Assembly.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)
  parent: System.Reflection.Assembly
  isExternal: false
  name: UnsafeLoadFrom(String)
  nameWithType: Assembly.UnsafeLoadFrom(String)
  fullName: System.Reflection.Assembly.UnsafeLoadFrom(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Assembly.CreateInstance*
  parent: System.Reflection.Assembly
  isExternal: false
  name: CreateInstance
  nameWithType: Assembly.CreateInstance
- uid: System.Reflection.Assembly.GetCustomAttributes*
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetCustomAttributes
  nameWithType: Assembly.GetCustomAttributes
- uid: System.Reflection.Assembly.GetFiles*
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetFiles
  nameWithType: Assembly.GetFiles
- uid: System.Reflection.Assembly.GetLoadedModules*
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetLoadedModules
  nameWithType: Assembly.GetLoadedModules
- uid: System.Reflection.Assembly.GetManifestResourceStream*
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetManifestResourceStream
  nameWithType: Assembly.GetManifestResourceStream
- uid: System.Reflection.Assembly.GetModules*
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetModules
  nameWithType: Assembly.GetModules
- uid: System.Reflection.Assembly.GetName*
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetName
  nameWithType: Assembly.GetName
- uid: System.Reflection.Assembly.GetSatelliteAssembly*
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetSatelliteAssembly
  nameWithType: Assembly.GetSatelliteAssembly
- uid: System.Reflection.Assembly.GetType*
  parent: System.Reflection.Assembly
  isExternal: false
  name: GetType
  nameWithType: Assembly.GetType
- uid: System.Reflection.Assembly.Load*
  parent: System.Reflection.Assembly
  isExternal: false
  name: Load
  nameWithType: Assembly.Load
- uid: System.Reflection.Assembly.LoadFile*
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadFile
  nameWithType: Assembly.LoadFile
- uid: System.Reflection.Assembly.LoadFrom*
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadFrom
  nameWithType: Assembly.LoadFrom
- uid: System.Reflection.Assembly.LoadModule*
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadModule
  nameWithType: Assembly.LoadModule
- uid: System.Reflection.Assembly.LoadWithPartialName*
  parent: System.Reflection.Assembly
  isExternal: false
  name: LoadWithPartialName
  nameWithType: Assembly.LoadWithPartialName
- uid: System.Reflection.Assembly.ReflectionOnlyLoad*
  parent: System.Reflection.Assembly
  isExternal: false
  name: ReflectionOnlyLoad
  nameWithType: Assembly.ReflectionOnlyLoad
