### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.TaskScheduler
  id: TaskScheduler
  children:
  - System.Threading.Tasks.TaskScheduler.#ctor
  - System.Threading.Tasks.TaskScheduler.Current
  - System.Threading.Tasks.TaskScheduler.Default
  - System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
  - System.Threading.Tasks.TaskScheduler.GetScheduledTasks
  - System.Threading.Tasks.TaskScheduler.Id
  - System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
  - System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
  - System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
  - System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
  - System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  - System.Threading.Tasks.TaskScheduler.UnobservedTaskException
  langs:
  - csharp
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Id={Id}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.TaskScheduler/SystemThreadingTasks_TaskSchedulerDebugView))]

      public abstract class TaskScheduler
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: TaskScheduler()
  nameWithType: TaskScheduler.TaskScheduler()
  fullName: System.Threading.Tasks.TaskScheduler.TaskScheduler()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected TaskScheduler ();
    parameters: []
  overload: System.Threading.Tasks.TaskScheduler.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.Current
  id: Current
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: Current
  nameWithType: TaskScheduler.Current
  fullName: System.Threading.Tasks.TaskScheduler.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Threading.Tasks.TaskScheduler Current { get; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.Current*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.Default
  id: Default
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: Default
  nameWithType: TaskScheduler.Default
  fullName: System.Threading.Tasks.TaskScheduler.Default
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Threading.Tasks.TaskScheduler Default { get; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.Default*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
  id: FromCurrentSynchronizationContext
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: FromCurrentSynchronizationContext()
  nameWithType: TaskScheduler.FromCurrentSynchronizationContext()
  fullName: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Threading.Tasks.TaskScheduler FromCurrentSynchronizationContext ();
    parameters: []
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.GetScheduledTasks
  id: GetScheduledTasks
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: GetScheduledTasks()
  nameWithType: TaskScheduler.GetScheduledTasks()
  fullName: System.Threading.Tasks.TaskScheduler.GetScheduledTasks()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task> GetScheduledTasks ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.GetScheduledTasks*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.Id
  id: Id
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: Id
  nameWithType: TaskScheduler.Id
  fullName: System.Threading.Tasks.TaskScheduler.Id
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Id { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.Id*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
  id: MaximumConcurrencyLevel
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: MaximumConcurrencyLevel
  nameWithType: TaskScheduler.MaximumConcurrencyLevel
  fullName: System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual int MaximumConcurrencyLevel { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
  id: QueueTask(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: QueueTask(Task)
  nameWithType: TaskScheduler.QueueTask(Task)
  fullName: System.Threading.Tasks.TaskScheduler.QueueTask(Task)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract void QueueTask (System.Threading.Tasks.Task task);
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.QueueTask*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
  id: TryDequeue(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: TryDequeue(Task)
  nameWithType: TaskScheduler.TryDequeue(Task)
  fullName: System.Threading.Tasks.TaskScheduler.TryDequeue(Task)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual bool TryDequeue (System.Threading.Tasks.Task task);
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.TryDequeue*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
  id: TryExecuteTask(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: TryExecuteTask(Task)
  nameWithType: TaskScheduler.TryExecuteTask(Task)
  fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTask(Task)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected bool TryExecuteTask (System.Threading.Tasks.Task task);
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.TryExecuteTask*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  id: TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: TryExecuteTaskInline(Task,Boolean)
  nameWithType: TaskScheduler.TryExecuteTaskInline(Task,Boolean)
  fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(Task,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract bool TryExecuteTaskInline (System.Threading.Tasks.Task task, bool taskWasPreviouslyQueued);
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: To be added.
    - id: taskWasPreviouslyQueued
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskScheduler.UnobservedTaskException
  id: UnobservedTaskException
  parent: System.Threading.Tasks.TaskScheduler
  langs:
  - csharp
  name: UnobservedTaskException
  nameWithType: TaskScheduler.UnobservedTaskException
  fullName: System.Threading.Tasks.TaskScheduler.UnobservedTaskException
  type: Event
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static event EventHandler<System.Threading.Tasks.UnobservedTaskExceptionEventArgs> UnobservedTaskException;
    return:
      type: System.EventHandler{System.Threading.Tasks.UnobservedTaskExceptionEventArgs}
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.Tasks.TaskScheduler.#ctor
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: TaskScheduler()
  nameWithType: TaskScheduler.TaskScheduler()
  fullName: System.Threading.Tasks.TaskScheduler.TaskScheduler()
- uid: System.Threading.Tasks.TaskScheduler.Current
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: Current
  nameWithType: TaskScheduler.Current
  fullName: System.Threading.Tasks.TaskScheduler.Current
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.TaskScheduler.Default
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: Default
  nameWithType: TaskScheduler.Default
  fullName: System.Threading.Tasks.TaskScheduler.Default
- uid: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: FromCurrentSynchronizationContext()
  nameWithType: TaskScheduler.FromCurrentSynchronizationContext()
  fullName: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext()
- uid: System.Threading.Tasks.TaskScheduler.GetScheduledTasks
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: GetScheduledTasks()
  nameWithType: TaskScheduler.GetScheduledTasks()
  fullName: System.Threading.Tasks.TaskScheduler.GetScheduledTasks()
- uid: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Task>
  nameWithType: IEnumerable<Task>
  fullName: System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Threading.Tasks.Task>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.TaskScheduler.Id
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: Id
  nameWithType: TaskScheduler.Id
  fullName: System.Threading.Tasks.TaskScheduler.Id
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: MaximumConcurrencyLevel
  nameWithType: TaskScheduler.MaximumConcurrencyLevel
  fullName: System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel
- uid: System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: QueueTask(Task)
  nameWithType: TaskScheduler.QueueTask(Task)
  fullName: System.Threading.Tasks.TaskScheduler.QueueTask(Task)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: TryDequeue(Task)
  nameWithType: TaskScheduler.TryDequeue(Task)
  fullName: System.Threading.Tasks.TaskScheduler.TryDequeue(Task)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: TryExecuteTask(Task)
  nameWithType: TaskScheduler.TryExecuteTask(Task)
  fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTask(Task)
- uid: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: TryExecuteTaskInline(Task,Boolean)
  nameWithType: TaskScheduler.TryExecuteTaskInline(Task,Boolean)
  fullName: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(Task,Boolean)
- uid: System.Threading.Tasks.TaskScheduler.UnobservedTaskException
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: UnobservedTaskException
  nameWithType: TaskScheduler.UnobservedTaskException
  fullName: System.Threading.Tasks.TaskScheduler.UnobservedTaskException
- uid: System.EventHandler{System.Threading.Tasks.UnobservedTaskExceptionEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<UnobservedTaskExceptionEventArgs>
  nameWithType: EventHandler<UnobservedTaskExceptionEventArgs>
  fullName: System.EventHandler<System.Threading.Tasks.UnobservedTaskExceptionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Threading.Tasks.UnobservedTaskExceptionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
    name: UnobservedTaskExceptionEventArgs
    nameWithType: UnobservedTaskExceptionEventArgs
    fullName: UnobservedTaskExceptionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.TaskScheduler.#ctor*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler.TaskScheduler
- uid: System.Threading.Tasks.TaskScheduler.Current*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: Current
  nameWithType: TaskScheduler.Current
- uid: System.Threading.Tasks.TaskScheduler.Default*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: Default
  nameWithType: TaskScheduler.Default
- uid: System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: FromCurrentSynchronizationContext
  nameWithType: TaskScheduler.FromCurrentSynchronizationContext
- uid: System.Threading.Tasks.TaskScheduler.GetScheduledTasks*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: GetScheduledTasks
  nameWithType: TaskScheduler.GetScheduledTasks
- uid: System.Threading.Tasks.TaskScheduler.Id*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: Id
  nameWithType: TaskScheduler.Id
- uid: System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: MaximumConcurrencyLevel
  nameWithType: TaskScheduler.MaximumConcurrencyLevel
- uid: System.Threading.Tasks.TaskScheduler.QueueTask*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: QueueTask
  nameWithType: TaskScheduler.QueueTask
- uid: System.Threading.Tasks.TaskScheduler.TryDequeue*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: TryDequeue
  nameWithType: TaskScheduler.TryDequeue
- uid: System.Threading.Tasks.TaskScheduler.TryExecuteTask*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: TryExecuteTask
  nameWithType: TaskScheduler.TryExecuteTask
- uid: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline*
  parent: System.Threading.Tasks.TaskScheduler
  isExternal: false
  name: TryExecuteTaskInline
  nameWithType: TaskScheduler.TryExecuteTaskInline
