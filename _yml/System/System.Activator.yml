### YamlMime:ManagedReference
items:
- uid: System.Activator
  id: Activator
  children:
  - System.Activator.CreateComInstanceFrom(System.String,System.String)
  - System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  - System.Activator.CreateInstance(System.ActivationContext)
  - System.Activator.CreateInstance(System.Type)
  - System.Activator.CreateInstance(System.ActivationContext,System.String[])
  - System.Activator.CreateInstance(System.String,System.String)
  - System.Activator.CreateInstance(System.Type,System.Boolean)
  - System.Activator.CreateInstance(System.Type,System.Object[])
  - System.Activator.CreateInstance(System.AppDomain,System.String,System.String)
  - System.Activator.CreateInstance(System.String,System.String,System.Object[])
  - System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])
  - System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System.Activator.CreateInstance``1
  - System.Activator.CreateInstanceFrom(System.String,System.String)
  - System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)
  - System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])
  - System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System.Activator.GetObject(System.Type,System.String)
  - System.Activator.GetObject(System.Type,System.String,System.Object)
  - System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)
  - System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: Activator
  nameWithType: Activator
  fullName: System.Activator
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class Activator : System.Runtime.InteropServices._Activator
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._Activator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateComInstanceFrom(System.String,System.String)
  id: CreateComInstanceFrom(System.String,System.String)
  parent: System.Activator
  langs:
  - csharp
  name: CreateComInstanceFrom(String,String)
  nameWithType: Activator.CreateComInstanceFrom(String,String)
  fullName: System.Activator.CreateComInstanceFrom(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateComInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  id: CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Activator
  langs:
  - csharp
  name: CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)
  nameWithType: Activator.CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)
  fullName: System.Activator.CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);
    parameters:
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: hashValue
      type: System.Byte[]
      description: To be added.
    - id: hashAlgorithm
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateComInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.ActivationContext)
  id: CreateInstance(System.ActivationContext)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(ActivationContext)
  nameWithType: Activator.CreateInstance(ActivationContext)
  fullName: System.Activator.CreateInstance(ActivationContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(Type)
  nameWithType: Activator.CreateInstance(Type)
  fullName: System.Activator.CreateInstance(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object CreateInstance (Type type);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.ActivationContext,System.String[])
  id: CreateInstance(System.ActivationContext,System.String[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(ActivationContext,String[])
  nameWithType: Activator.CreateInstance(ActivationContext,String[])
  fullName: System.Activator.CreateInstance(ActivationContext,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: To be added.
    - id: activationCustomData
      type: System.String[]
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.String,System.String)
  id: CreateInstance(System.String,System.String)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(String,String)
  nameWithType: Activator.CreateInstance(String,String)
  fullName: System.Activator.CreateInstance(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.Type,System.Boolean)
  id: CreateInstance(System.Type,System.Boolean)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(Type,Boolean)
  nameWithType: Activator.CreateInstance(Type,Boolean)
  fullName: System.Activator.CreateInstance(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object CreateInstance (Type type, bool nonPublic);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: nonPublic
      type: System.Boolean
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.Type,System.Object[])
  id: CreateInstance(System.Type,System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(Type,Object[])
  nameWithType: Activator.CreateInstance(Type,Object[])
  fullName: System.Activator.CreateInstance(Type,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object CreateInstance (Type type, object[] args);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String)
  id: CreateInstance(System.AppDomain,System.String,System.String)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(AppDomain,String,String)
  nameWithType: Activator.CreateInstance(AppDomain,String,String)
  fullName: System.Activator.CreateInstance(AppDomain,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);
    parameters:
    - id: domain
      type: System.AppDomain
      description: To be added.
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.String,System.String,System.Object[])
  id: CreateInstance(System.String,System.String,System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(String,String,Object[])
  nameWithType: Activator.CreateInstance(String,String,Object[])
  fullName: System.Activator.CreateInstance(String,String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);
    parameters:
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])
  id: CreateInstance(System.Type,System.Object[],System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(Type,Object[],Object[])
  nameWithType: Activator.CreateInstance(Type,Object[],Object[])
  fullName: System.Activator.CreateInstance(Type,Object[],Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object CreateInstance (Type type, object[] args, object[] activationAttributes);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: Activator.CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Activator.CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);
    parameters:
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);
    parameters:
    - id: domain
      type: System.AppDomain
      description: To be added.
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: Activator.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System.Activator.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);
    parameters:
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    - id: securityInfo
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: Activator.CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System.Activator.CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);
    parameters:
    - id: domain
      type: System.AppDomain
      description: To be added.
    - id: assemblyName
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    - id: securityAttributes
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstance``1
  id: CreateInstance``1
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstance()
  nameWithType: Activator.CreateInstance()
  fullName: System.Activator.CreateInstance()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static T CreateInstance<T> ();
    parameters: []
    return:
      type: T
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstanceFrom(System.String,System.String)
  id: CreateInstanceFrom(System.String,System.String)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstanceFrom(String,String)
  nameWithType: Activator.CreateInstanceFrom(String,String)
  fullName: System.Activator.CreateInstanceFrom(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)
  id: CreateInstanceFrom(System.AppDomain,System.String,System.String)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstanceFrom(AppDomain,String,String)
  nameWithType: Activator.CreateInstanceFrom(AppDomain,String,String)
  fullName: System.Activator.CreateInstanceFrom(AppDomain,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);
    parameters:
    - id: domain
      type: System.AppDomain
      description: To be added.
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])
  id: CreateInstanceFrom(System.String,System.String,System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstanceFrom(String,String,Object[])
  nameWithType: Activator.CreateInstanceFrom(String,String,Object[])
  fullName: System.Activator.CreateInstanceFrom(String,String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);
    parameters:
    - id: domain
      type: System.AppDomain
      description: To be added.
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: Activator.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System.Activator.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);
    parameters:
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    - id: securityInfo
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  langs:
  - csharp
  name: CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: Activator.CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System.Activator.CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);
    parameters:
    - id: domain
      type: System.AppDomain
      description: To be added.
    - id: assemblyFile
      type: System.String
      description: To be added.
    - id: typeName
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: To be added.
    - id: binder
      type: System.Reflection.Binder
      description: To be added.
    - id: args
      type: System.Object[]
      description: To be added.
    - id: culture
      type: System.Globalization.CultureInfo
      description: To be added.
    - id: activationAttributes
      type: System.Object[]
      description: To be added.
    - id: securityAttributes
      type: System.Security.Policy.Evidence
      description: To be added.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: To be added.
  overload: System.Activator.CreateInstanceFrom*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.GetObject(System.Type,System.String)
  id: GetObject(System.Type,System.String)
  parent: System.Activator
  langs:
  - csharp
  name: GetObject(Type,String)
  nameWithType: Activator.GetObject(Type,String)
  fullName: System.Activator.GetObject(Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object GetObject (Type type, string url);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: url
      type: System.String
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Activator.GetObject*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.GetObject(System.Type,System.String,System.Object)
  id: GetObject(System.Type,System.String,System.Object)
  parent: System.Activator
  langs:
  - csharp
  name: GetObject(Type,String,Object)
  nameWithType: Activator.GetObject(Type,String,Object)
  fullName: System.Activator.GetObject(Type,String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static object GetObject (Type type, string url, object state);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: url
      type: System.String
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Activator.GetObject*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Activator
  langs:
  - csharp
  name: System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: Activator.System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Activator.System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: To be added.
    - id: rgszNames
      type: System.IntPtr
      description: To be added.
    - id: cNames
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: rgDispId
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Activator
  langs:
  - csharp
  name: System.Runtime.InteropServices._Activator.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: Activator.System.Runtime.InteropServices._Activator.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Activator.System.Runtime.InteropServices._Activator.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: ppTInfo
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Activator
  langs:
  - csharp
  name: System.Runtime.InteropServices._Activator.GetTypeInfoCount(UInt32)
  nameWithType: Activator.System.Runtime.InteropServices._Activator.GetTypeInfoCount(UInt32)
  fullName: System.Activator.System.Runtime.InteropServices._Activator.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Activator.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Activator
  langs:
  - csharp
  name: System.Runtime.InteropServices._Activator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: Activator.System.Runtime.InteropServices._Activator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Activator.System.Runtime.InteropServices._Activator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: To be added.
    - id: riid
      type: System.Guid
      description: To be added.
    - id: lcid
      type: System.UInt32
      description: To be added.
    - id: wFlags
      type: System.Int16
      description: To be added.
    - id: pDispParams
      type: System.IntPtr
      description: To be added.
    - id: pVarResult
      type: System.IntPtr
      description: To be added.
    - id: pExcepInfo
      type: System.IntPtr
      description: To be added.
    - id: puArgErr
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activator.CreateComInstanceFrom(System.String,System.String)
  parent: System.Activator
  isExternal: false
  name: CreateComInstanceFrom(String,String)
  nameWithType: Activator.CreateComInstanceFrom(String,String)
  fullName: System.Activator.CreateComInstanceFrom(String,String)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Activator
  isExternal: false
  name: CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)
  nameWithType: Activator.CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)
  fullName: System.Activator.CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
  parent: System.Configuration.Assemblies
  isExternal: false
  name: AssemblyHashAlgorithm
  nameWithType: AssemblyHashAlgorithm
  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
- uid: System.Activator.CreateInstance(System.ActivationContext)
  parent: System.Activator
  isExternal: false
  name: CreateInstance(ActivationContext)
  nameWithType: Activator.CreateInstance(ActivationContext)
  fullName: System.Activator.CreateInstance(ActivationContext)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Activator.CreateInstance(System.Type)
  parent: System.Activator
  isExternal: false
  name: CreateInstance(Type)
  nameWithType: Activator.CreateInstance(Type)
  fullName: System.Activator.CreateInstance(Type)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activator.CreateInstance(System.ActivationContext,System.String[])
  parent: System.Activator
  isExternal: false
  name: CreateInstance(ActivationContext,String[])
  nameWithType: Activator.CreateInstance(ActivationContext,String[])
  fullName: System.Activator.CreateInstance(ActivationContext,String[])
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Activator.CreateInstance(System.String,System.String)
  parent: System.Activator
  isExternal: false
  name: CreateInstance(String,String)
  nameWithType: Activator.CreateInstance(String,String)
  fullName: System.Activator.CreateInstance(String,String)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activator.CreateInstance(System.Type,System.Boolean)
  parent: System.Activator
  isExternal: false
  name: CreateInstance(Type,Boolean)
  nameWithType: Activator.CreateInstance(Type,Boolean)
  fullName: System.Activator.CreateInstance(Type,Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activator.CreateInstance(System.Type,System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstance(Type,Object[])
  nameWithType: Activator.CreateInstance(Type,Object[])
  fullName: System.Activator.CreateInstance(Type,Object[])
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String)
  parent: System.Activator
  isExternal: false
  name: CreateInstance(AppDomain,String,String)
  nameWithType: Activator.CreateInstance(AppDomain,String,String)
  fullName: System.Activator.CreateInstance(AppDomain,String,String)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activator.CreateInstance(System.String,System.String,System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstance(String,String,Object[])
  nameWithType: Activator.CreateInstance(String,String,Object[])
  fullName: System.Activator.CreateInstance(String,String,Object[])
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstance(Type,Object[],Object[])
  nameWithType: Activator.CreateInstance(Type,Object[],Object[])
  fullName: System.Activator.CreateInstance(Type,Object[],Object[])
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Activator
  isExternal: false
  name: CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: Activator.CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Activator.CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstance(Type,BindingFlags,Binder,Object[],CultureInfo,Object[])
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  isExternal: false
  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: Activator.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System.Activator.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  isExternal: false
  name: CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: Activator.CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System.Activator.CreateInstance(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Activator.CreateInstance``1
  parent: System.Activator
  isExternal: false
  name: CreateInstance()
  nameWithType: Activator.CreateInstance()
  fullName: System.Activator.CreateInstance()
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activator.CreateInstanceFrom(System.String,System.String)
  parent: System.Activator
  isExternal: false
  name: CreateInstanceFrom(String,String)
  nameWithType: Activator.CreateInstanceFrom(String,String)
  fullName: System.Activator.CreateInstanceFrom(String,String)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)
  parent: System.Activator
  isExternal: false
  name: CreateInstanceFrom(AppDomain,String,String)
  nameWithType: Activator.CreateInstanceFrom(AppDomain,String,String)
  fullName: System.Activator.CreateInstanceFrom(AppDomain,String,String)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstanceFrom(String,String,Object[])
  nameWithType: Activator.CreateInstanceFrom(String,String,Object[])
  fullName: System.Activator.CreateInstanceFrom(String,String,Object[])
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  isExternal: false
  name: CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  nameWithType: Activator.CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
  fullName: System.Activator.CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  isExternal: false
  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: Activator.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System.Activator.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  isExternal: false
  name: CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  nameWithType: Activator.CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
  fullName: System.Activator.CreateInstanceFrom(AppDomain,String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Activator.GetObject(System.Type,System.String)
  parent: System.Activator
  isExternal: false
  name: GetObject(Type,String)
  nameWithType: Activator.GetObject(Type,String)
  fullName: System.Activator.GetObject(Type,String)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activator.GetObject(System.Type,System.String,System.Object)
  parent: System.Activator
  isExternal: false
  name: GetObject(Type,String,Object)
  nameWithType: Activator.GetObject(Type,String,Object)
  fullName: System.Activator.GetObject(Type,String,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Activator
  isExternal: false
  name: System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: Activator.System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Activator.System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Activator
  isExternal: false
  name: System.Runtime.InteropServices._Activator.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: Activator.System.Runtime.InteropServices._Activator.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Activator.System.Runtime.InteropServices._Activator.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)
  parent: System.Activator
  isExternal: false
  name: System.Runtime.InteropServices._Activator.GetTypeInfoCount(UInt32)
  nameWithType: Activator.System.Runtime.InteropServices._Activator.GetTypeInfoCount(UInt32)
  fullName: System.Activator.System.Runtime.InteropServices._Activator.GetTypeInfoCount(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Activator
  isExternal: false
  name: System.Runtime.InteropServices._Activator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: Activator.System.Runtime.InteropServices._Activator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Activator.System.Runtime.InteropServices._Activator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Activator.CreateComInstanceFrom*
  parent: System.Activator
  isExternal: false
  name: CreateComInstanceFrom
  nameWithType: Activator.CreateComInstanceFrom
- uid: System.Activator.CreateInstance*
  parent: System.Activator
  isExternal: false
  name: CreateInstance
  nameWithType: Activator.CreateInstance
- uid: System.Activator.CreateInstanceFrom*
  parent: System.Activator
  isExternal: false
  name: CreateInstanceFrom
  nameWithType: Activator.CreateInstanceFrom
- uid: System.Activator.GetObject*
  parent: System.Activator
  isExternal: false
  name: GetObject
  nameWithType: Activator.GetObject
