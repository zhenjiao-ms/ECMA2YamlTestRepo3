### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.ContextAttribute
  id: ContextAttribute
  children:
  - System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)
  - System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName
  - System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)
  - System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode
  - System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  - System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  - System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.ContextAttribute.Name
  langs:
  - csharp
  name: ContextAttribute
  nameWithType: ContextAttribute
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class ContextAttribute : Attribute, System.Runtime.Remoting.Contexts.IContextAttribute, System.Runtime.Remoting.Contexts.IContextProperty
  inheritance:
  - System.Object
  - System.Attribute
  implements:
  - System.Runtime.Remoting.Contexts.IContextAttribute
  - System.Runtime.Remoting.Contexts.IContextProperty
  inheritedMembers:
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: ContextAttribute(String)
  nameWithType: ContextAttribute.ContextAttribute(String)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.ContextAttribute(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ContextAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
  overload: System.Runtime.Remoting.Contexts.ContextAttribute.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName
  id: AttributeName
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: AttributeName
  nameWithType: ContextAttribute.AttributeName
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected string AttributeName;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ContextAttribute.Equals(Object)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Runtime.Remoting.Contexts.ContextAttribute.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)
  id: Freeze(System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: Freeze(Context)
  nameWithType: ContextAttribute.Freeze(Context)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(Context)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Freeze (System.Runtime.Remoting.Contexts.Context newContext);
    parameters:
    - id: newContext
      type: System.Runtime.Remoting.Contexts.Context
      description: To be added.
  overload: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode
  id: GetHashCode
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ContextAttribute.GetHashCode()
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  id: GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: GetPropertiesForNewContext(IConstructionCallMessage)
  nameWithType: ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);
    parameters:
    - id: ctorMsg
      type: System.Runtime.Remoting.Activation.IConstructionCallMessage
      description: To be added.
  overload: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  id: IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: IsContextOK(Context,IConstructionCallMessage)
  nameWithType: ContextAttribute.IsContextOK(Context,IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(Context,IConstructionCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsContextOK (System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);
    parameters:
    - id: ctx
      type: System.Runtime.Remoting.Contexts.Context
      description: To be added.
    - id: ctorMsg
      type: System.Runtime.Remoting.Activation.IConstructionCallMessage
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  id: IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: IsNewContextOK(Context)
  nameWithType: ContextAttribute.IsNewContextOK(Context)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(Context)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsNewContextOK (System.Runtime.Remoting.Contexts.Context newCtx);
    parameters:
    - id: newCtx
      type: System.Runtime.Remoting.Contexts.Context
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Name
  id: Name
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ContextAttribute.Name
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Runtime.Remoting.Contexts.ContextAttribute.Name*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: ContextAttribute(String)
  nameWithType: ContextAttribute.ContextAttribute(String)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.ContextAttribute(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: AttributeName
  nameWithType: ContextAttribute.AttributeName
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ContextAttribute.Equals(Object)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: Freeze(Context)
  nameWithType: ContextAttribute.Freeze(Context)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(Context)
- uid: System.Runtime.Remoting.Contexts.Context
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: Context
  nameWithType: Context
  fullName: System.Runtime.Remoting.Contexts.Context
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ContextAttribute.GetHashCode()
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: GetPropertiesForNewContext(IConstructionCallMessage)
  nameWithType: ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage
  parent: System.Runtime.Remoting.Activation
  isExternal: false
  name: IConstructionCallMessage
  nameWithType: IConstructionCallMessage
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: IsContextOK(Context,IConstructionCallMessage)
  nameWithType: ContextAttribute.IsContextOK(Context,IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(Context,IConstructionCallMessage)
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: IsNewContextOK(Context)
  nameWithType: ContextAttribute.IsNewContextOK(Context)
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(Context)
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Name
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: Name
  nameWithType: ContextAttribute.Name
  fullName: System.Runtime.Remoting.Contexts.ContextAttribute.Name
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.#ctor*
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: ContextAttribute
  nameWithType: ContextAttribute.ContextAttribute
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Equals*
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: Equals
  nameWithType: ContextAttribute.Equals
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze*
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: Freeze
  nameWithType: ContextAttribute.Freeze
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode*
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ContextAttribute.GetHashCode
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext*
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: GetPropertiesForNewContext
  nameWithType: ContextAttribute.GetPropertiesForNewContext
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK*
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: IsContextOK
  nameWithType: ContextAttribute.IsContextOK
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK*
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: IsNewContextOK
  nameWithType: ContextAttribute.IsNewContextOK
- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Name*
  parent: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: Name
  nameWithType: ContextAttribute.Name
