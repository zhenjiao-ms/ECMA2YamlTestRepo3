### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.ClaimsPrincipal
  id: ClaimsPrincipal
  children:
  - System.Security.Claims.ClaimsPrincipal.#ctor
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)
  - System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Security.Claims.ClaimsPrincipal.Identity
  - System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  langs:
  - csharp
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ClaimsPrincipal : System.Security.Principal.IPrincipal
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IPrincipal
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.#ctor
  id: '#ctor'
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: ClaimsPrincipal()
  nameWithType: ClaimsPrincipal.ClaimsPrincipal()
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ClaimsPrincipal ();
    parameters: []
  overload: System.Security.Claims.ClaimsPrincipal.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})'
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: ClaimsPrincipal(IEnumerable<ClaimsIdentity>)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(IEnumerable<ClaimsIdentity>)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(IEnumerable<ClaimsIdentity>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ClaimsPrincipal (System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity> identities);
    parameters:
    - id: identities
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: ClaimsPrincipal(BinaryReader)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(BinaryReader)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(BinaryReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ClaimsPrincipal (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: ClaimsPrincipal(IIdentity)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(IIdentity)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(IIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ClaimsPrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)
  id: '#ctor(System.Security.Principal.IPrincipal)'
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: ClaimsPrincipal(IPrincipal)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(IPrincipal)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(IPrincipal)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ClaimsPrincipal (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: ClaimsPrincipal(SerializationInfo,StreamingContext)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected ClaimsPrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  id: AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: AddIdentities(IEnumerable<ClaimsIdentity>)
  nameWithType: ClaimsPrincipal.AddIdentities(IEnumerable<ClaimsIdentity>)
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities(IEnumerable<ClaimsIdentity>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AddIdentities (System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity> identities);
    parameters:
    - id: identities
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.AddIdentities*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  id: AddIdentity(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: AddIdentity(ClaimsIdentity)
  nameWithType: ClaimsPrincipal.AddIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity(ClaimsIdentity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AddIdentity (System.Security.Claims.ClaimsIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Claims.ClaimsIdentity
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.AddIdentity*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.Claims
  id: Claims
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: Claims
  nameWithType: ClaimsPrincipal.Claims
  fullName: System.Security.Claims.ClaimsPrincipal.Claims
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> Claims { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.Claims*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  id: ClaimsPrincipalSelector
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: ClaimsPrincipalSelector
  nameWithType: ClaimsPrincipal.ClaimsPrincipalSelector
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Func<System.Security.Claims.ClaimsPrincipal> ClaimsPrincipalSelector { get; set; }
    return:
      type: System.Func{System.Security.Claims.ClaimsPrincipal}
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.Clone
  id: Clone
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: Clone()
  nameWithType: ClaimsPrincipal.Clone()
  fullName: System.Security.Claims.ClaimsPrincipal.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Claims.ClaimsPrincipal Clone ();
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.Clone*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  id: CreateClaimsIdentity(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: CreateClaimsIdentity(BinaryReader)
  nameWithType: ClaimsPrincipal.CreateClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(BinaryReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity CreateClaimsIdentity (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: To be added.
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.Current
  id: Current
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: Current
  nameWithType: ClaimsPrincipal.Current
  fullName: System.Security.Claims.ClaimsPrincipal.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Security.Claims.ClaimsPrincipal Current { get; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.Current*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: CustomSerializationData
  nameWithType: ClaimsPrincipal.CustomSerializationData
  fullName: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.CustomSerializationData*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  id: FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.FindAll*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  id: FindAll(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: FindAll(String)
  nameWithType: ClaimsPrincipal.FindAll(String)
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (string type);
    parameters:
    - id: type
      type: System.String
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.FindAll*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  id: FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: To be added.
    return:
      type: System.Security.Claims.Claim
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.FindFirst*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  id: FindFirst(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: FindFirst(String)
  nameWithType: ClaimsPrincipal.FindFirst(String)
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (string type);
    parameters:
    - id: type
      type: System.String
      description: To be added.
    return:
      type: System.Security.Claims.Claim
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.FindFirst*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsPrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsPrincipal.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.GetObjectData*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  id: HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool HasClaim (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.HasClaim*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  id: HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: HasClaim(String,String)
  nameWithType: ClaimsPrincipal.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool HasClaim (string type, string value);
    parameters:
    - id: type
      type: System.String
      description: To be added.
    - id: value
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.HasClaim*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.Identities
  id: Identities
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: Identities
  nameWithType: ClaimsPrincipal.Identities
  fullName: System.Security.Claims.ClaimsPrincipal.Identities
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity> Identities { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.Identities*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.Identity
  id: Identity
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: ClaimsPrincipal.Identity
  fullName: System.Security.Claims.ClaimsPrincipal.Identity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.Identity*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: ClaimsPrincipal.IsInRole(String)
  fullName: System.Security.Claims.ClaimsPrincipal.IsInRole(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.IsInRole*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  id: PrimaryIdentitySelector
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: PrimaryIdentitySelector
  nameWithType: ClaimsPrincipal.PrimaryIdentitySelector
  fullName: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static Func<System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>,System.Security.Claims.ClaimsIdentity> PrimaryIdentitySelector { get; set; }
    return:
      type: System.Func{System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity},System.Security.Claims.ClaimsIdentity}
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(BinaryWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void WriteTo (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.WriteTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsPrincipal
  langs:
  - csharp
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(BinaryWriter,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: To be added.
    - id: userData
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Claims.ClaimsPrincipal.WriteTo*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Claims.ClaimsPrincipal.#ctor
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipal()
  nameWithType: ClaimsPrincipal.ClaimsPrincipal()
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal()
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipal(IEnumerable<ClaimsIdentity>)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(IEnumerable<ClaimsIdentity>)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(IEnumerable<ClaimsIdentity>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ClaimsIdentity>
  nameWithType: IEnumerable<ClaimsIdentity>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipal(BinaryReader)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(BinaryReader)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: false
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipal(IIdentity)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(IIdentity)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: false
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipal(IPrincipal)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(IPrincipal)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(IPrincipal)
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: false
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipal(SerializationInfo,StreamingContext)
  nameWithType: ClaimsPrincipal.ClaimsPrincipal(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipal(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: AddIdentities(IEnumerable<ClaimsIdentity>)
  nameWithType: ClaimsPrincipal.AddIdentities(IEnumerable<ClaimsIdentity>)
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities(IEnumerable<ClaimsIdentity>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ClaimsIdentity>
  nameWithType: IEnumerable<ClaimsIdentity>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: AddIdentity(ClaimsIdentity)
  nameWithType: ClaimsPrincipal.AddIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity(ClaimsIdentity)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.ClaimsPrincipal.Claims
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Claims
  nameWithType: ClaimsPrincipal.Claims
  fullName: System.Security.Claims.ClaimsPrincipal.Claims
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
- uid: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipalSelector
  nameWithType: ClaimsPrincipal.ClaimsPrincipalSelector
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
- uid: System.Func{System.Security.Claims.ClaimsPrincipal}
  parent: System
  isExternal: false
  name: Func<ClaimsPrincipal>
  nameWithType: Func<ClaimsPrincipal>
  fullName: System.Func<System.Security.Claims.ClaimsPrincipal>
- uid: System.Security.Claims.ClaimsPrincipal.Clone
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Clone()
  nameWithType: ClaimsPrincipal.Clone()
  fullName: System.Security.Claims.ClaimsPrincipal.Clone()
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: CreateClaimsIdentity(BinaryReader)
  nameWithType: ClaimsPrincipal.CreateClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(BinaryReader)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: false
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.ClaimsPrincipal.Current
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Current
  nameWithType: ClaimsPrincipal.Current
  fullName: System.Security.Claims.ClaimsPrincipal.Current
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsPrincipal.CustomSerializationData
  fullName: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(Predicate<Claim>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
- uid: System.Predicate{System.Security.Claims.Claim}
  parent: System
  isExternal: false
  name: Predicate<Claim>
  nameWithType: Predicate<Claim>
  fullName: System.Predicate<System.Security.Claims.Claim>
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindAll(String)
  nameWithType: ClaimsPrincipal.FindAll(String)
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(String)
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(Predicate<Claim>)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Predicate{System.Security.Claims.Claim}
  parent: System
  isExternal: false
  name: Predicate<Claim>
  nameWithType: Predicate<Claim>
  fullName: System.Predicate<System.Security.Claims.Claim>
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindFirst(String)
  nameWithType: ClaimsPrincipal.FindFirst(String)
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(String)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsPrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsPrincipal.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(Predicate<Claim>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Predicate{System.Security.Claims.Claim}
  parent: System
  isExternal: false
  name: Predicate<Claim>
  nameWithType: Predicate<Claim>
  fullName: System.Predicate<System.Security.Claims.Claim>
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: HasClaim(String,String)
  nameWithType: ClaimsPrincipal.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(String,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsPrincipal.Identities
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Identities
  nameWithType: ClaimsPrincipal.Identities
  fullName: System.Security.Claims.ClaimsPrincipal.Identities
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ClaimsIdentity>
  nameWithType: IEnumerable<ClaimsIdentity>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>
- uid: System.Security.Claims.ClaimsPrincipal.Identity
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Identity
  nameWithType: ClaimsPrincipal.Identity
  fullName: System.Security.Claims.ClaimsPrincipal.Identity
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: false
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: ClaimsPrincipal.IsInRole(String)
  fullName: System.Security.Claims.ClaimsPrincipal.IsInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: PrimaryIdentitySelector
  nameWithType: ClaimsPrincipal.PrimaryIdentitySelector
  fullName: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
- uid: System.Func{System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity},System.Security.Claims.ClaimsIdentity}
  parent: System
  isExternal: false
  name: Func<IEnumerable<ClaimsIdentity>,ClaimsIdentity>
  nameWithType: Func<IEnumerable<ClaimsIdentity>,ClaimsIdentity>
  fullName: System.Func<System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>,System.Security.Claims.ClaimsIdentity>
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: false
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(BinaryWriter,Byte[])
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: false
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Claims.ClaimsPrincipal.#ctor*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal.ClaimsPrincipal
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentities*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: AddIdentities
  nameWithType: ClaimsPrincipal.AddIdentities
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentity*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: AddIdentity
  nameWithType: ClaimsPrincipal.AddIdentity
- uid: System.Security.Claims.ClaimsPrincipal.Claims*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Claims
  nameWithType: ClaimsPrincipal.Claims
- uid: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipalSelector
  nameWithType: ClaimsPrincipal.ClaimsPrincipalSelector
- uid: System.Security.Claims.ClaimsPrincipal.Clone*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Clone
  nameWithType: ClaimsPrincipal.Clone
- uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: CreateClaimsIdentity
  nameWithType: ClaimsPrincipal.CreateClaimsIdentity
- uid: System.Security.Claims.ClaimsPrincipal.Current*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Current
  nameWithType: ClaimsPrincipal.Current
- uid: System.Security.Claims.ClaimsPrincipal.CustomSerializationData*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsPrincipal.CustomSerializationData
- uid: System.Security.Claims.ClaimsPrincipal.FindAll*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindAll
  nameWithType: ClaimsPrincipal.FindAll
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindFirst
  nameWithType: ClaimsPrincipal.FindFirst
- uid: System.Security.Claims.ClaimsPrincipal.GetObjectData*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: GetObjectData
  nameWithType: ClaimsPrincipal.GetObjectData
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: HasClaim
  nameWithType: ClaimsPrincipal.HasClaim
- uid: System.Security.Claims.ClaimsPrincipal.Identities*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Identities
  nameWithType: ClaimsPrincipal.Identities
- uid: System.Security.Claims.ClaimsPrincipal.Identity*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Identity
  nameWithType: ClaimsPrincipal.Identity
- uid: System.Security.Claims.ClaimsPrincipal.IsInRole*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: IsInRole
  nameWithType: ClaimsPrincipal.IsInRole
- uid: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: PrimaryIdentitySelector
  nameWithType: ClaimsPrincipal.PrimaryIdentitySelector
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo*
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: WriteTo
  nameWithType: ClaimsPrincipal.WriteTo
