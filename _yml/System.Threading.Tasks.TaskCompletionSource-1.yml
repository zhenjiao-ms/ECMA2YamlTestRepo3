### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.TaskCompletionSource`1
  id: TaskCompletionSource`1
  children:
  - System.Threading.Tasks.TaskCompletionSource`1.#ctor
  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)
  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.TaskCompletionSource`1.SetCanceled
  - System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})
  - System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)
  - System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)
  - System.Threading.Tasks.TaskCompletionSource`1.Task
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)
  - System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)
  langs:
  - csharp
  name: TaskCompletionSource<TResult>
  nameWithType: TaskCompletionSource<TResult>
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public class TaskCompletionSource<TResult>
    typeParameters:
    - id: TResult
      description: To be added.
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TaskCompletionSource()
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource()
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TaskCompletionSource ();
    parameters: []
  overload: System.Threading.Tasks.TaskCompletionSource`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TaskCompletionSource(Object)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(Object)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TaskCompletionSource (object state);
    parameters:
    - id: state
      type: System.Object
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TaskCompletionSource(TaskCreationOptions)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(TaskCreationOptions)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(TaskCreationOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TaskCompletionSource (System.Threading.Tasks.TaskCreationOptions creationOptions);
    parameters:
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TaskCompletionSource(Object,TaskCreationOptions)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(Object,TaskCreationOptions)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(Object,TaskCreationOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TaskCompletionSource (object state, System.Threading.Tasks.TaskCreationOptions creationOptions);
    parameters:
    - id: state
      type: System.Object
      description: To be added.
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled
  id: SetCanceled
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: SetCanceled()
  nameWithType: TaskCompletionSource<TResult>.SetCanceled()
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetCanceled()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetCanceled ();
    parameters: []
  overload: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})
  id: SetException(System.Collections.Generic.IEnumerable{System.Exception})
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: SetException(IEnumerable<Exception>)
  nameWithType: TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetException (System.Collections.Generic.IEnumerable<Exception> exceptions);
    parameters:
    - id: exceptions
      type: System.Collections.Generic.IEnumerable{System.Exception}
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.SetException*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)
  id: SetException(System.Exception)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: SetException(Exception)
  nameWithType: TaskCompletionSource<TResult>.SetException(Exception)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(Exception)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetException (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.SetException*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)
  id: SetResult(`0)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: SetResult(TResult)
  nameWithType: TaskCompletionSource<TResult>.SetResult(TResult)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult(TResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetResult (TResult result);
    parameters:
    - id: result
      type: TResult
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.SetResult*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.Task
  id: Task
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: Task
  nameWithType: TaskCompletionSource<TResult>.Task
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.Task
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.Task<TResult> Task { get; }
    return:
      type: System.Threading.Tasks.Task`1
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.Task*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled
  id: TrySetCanceled
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TrySetCanceled()
  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled()
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool TrySetCanceled ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)
  id: TrySetCanceled(System.Threading.CancellationToken)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TrySetCanceled(CancellationToken)
  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool TrySetCanceled (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})
  id: TrySetException(System.Collections.Generic.IEnumerable{System.Exception})
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TrySetException(IEnumerable<Exception>)
  nameWithType: TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool TrySetException (System.Collections.Generic.IEnumerable<Exception> exceptions);
    parameters:
    - id: exceptions
      type: System.Collections.Generic.IEnumerable{System.Exception}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetException*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)
  id: TrySetException(System.Exception)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TrySetException(Exception)
  nameWithType: TaskCompletionSource<TResult>.TrySetException(Exception)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException(Exception)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool TrySetException (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetException*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)
  id: TrySetResult(`0)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  langs:
  - csharp
  name: TrySetResult(TResult)
  nameWithType: TaskCompletionSource<TResult>.TrySetResult(TResult)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetResult(TResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool TrySetResult (TResult result);
    parameters:
    - id: result
      type: TResult
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TaskCompletionSource()
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource()
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TaskCompletionSource(Object)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(Object)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TaskCompletionSource(TaskCreationOptions)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(TaskCreationOptions)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(TaskCreationOptions)
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskCreationOptions
  nameWithType: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TaskCompletionSource(Object,TaskCreationOptions)
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource(Object,TaskCreationOptions)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource(Object,TaskCreationOptions)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskCreationOptions
  nameWithType: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: SetCanceled()
  nameWithType: TaskCompletionSource<TResult>.SetCanceled()
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetCanceled()
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: SetException(IEnumerable<Exception>)
  nameWithType: TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)
- uid: System.Collections.Generic.IEnumerable{System.Exception}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Exception>
  nameWithType: IEnumerable<Exception>
  fullName: System.Collections.Generic.IEnumerable<System.Exception>
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: SetException(Exception)
  nameWithType: TaskCompletionSource<TResult>.SetException(Exception)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: SetResult(TResult)
  nameWithType: TaskCompletionSource<TResult>.SetResult(TResult)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult(TResult)
- uid: TResult
  parent: ''
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Threading.Tasks.TaskCompletionSource`1.Task
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: Task
  nameWithType: TaskCompletionSource<TResult>.Task
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.Task
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TrySetCanceled()
  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled()
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TrySetCanceled(CancellationToken)
  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TrySetException(IEnumerable<Exception>)
  nameWithType: TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Exception}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Exception>
  nameWithType: IEnumerable<Exception>
  fullName: System.Collections.Generic.IEnumerable<System.Exception>
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TrySetException(Exception)
  nameWithType: TaskCompletionSource<TResult>.TrySetException(Exception)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetException(Exception)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TrySetResult(TResult)
  nameWithType: TaskCompletionSource<TResult>.TrySetResult(TResult)
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>.TrySetResult(TResult)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TResult
  parent: ''
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor*
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TaskCompletionSource<TResult>
  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled*
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: SetCanceled
  nameWithType: TaskCompletionSource<TResult>.SetCanceled
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException*
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: SetException
  nameWithType: TaskCompletionSource<TResult>.SetException
- uid: System.Threading.Tasks.TaskCompletionSource`1.SetResult*
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: SetResult
  nameWithType: TaskCompletionSource<TResult>.SetResult
- uid: System.Threading.Tasks.TaskCompletionSource`1.Task*
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: Task
  nameWithType: TaskCompletionSource<TResult>.Task
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled*
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TrySetCanceled
  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException*
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TrySetException
  nameWithType: TaskCompletionSource<TResult>.TrySetException
- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult*
  parent: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: false
  name: TrySetResult
  nameWithType: TaskCompletionSource<TResult>.TrySetResult
