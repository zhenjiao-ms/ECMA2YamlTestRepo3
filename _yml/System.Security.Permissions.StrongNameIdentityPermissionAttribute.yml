### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  id: StrongNameIdentityPermissionAttribute
  children:
  - System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission
  - System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name
  - System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey
  - System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version
  langs:
  - csharp
  name: StrongNameIdentityPermissionAttribute
  nameWithType: StrongNameIdentityPermissionAttribute
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StrongNameIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  langs:
  - csharp
  name: StrongNameIdentityPermissionAttribute(SecurityAction)
  nameWithType: StrongNameIdentityPermissionAttribute.StrongNameIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.StrongNameIdentityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public StrongNameIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: StrongNameIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name
  id: Name
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  langs:
  - csharp
  name: Name
  nameWithType: StrongNameIdentityPermissionAttribute.Name
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey
  id: PublicKey
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  langs:
  - csharp
  name: PublicKey
  nameWithType: StrongNameIdentityPermissionAttribute.PublicKey
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string PublicKey { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version
  id: Version
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  langs:
  - csharp
  name: Version
  nameWithType: StrongNameIdentityPermissionAttribute.Version
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string Version { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  isExternal: false
  name: StrongNameIdentityPermissionAttribute(SecurityAction)
  nameWithType: StrongNameIdentityPermissionAttribute.StrongNameIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.StrongNameIdentityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: StrongNameIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  isExternal: false
  name: Name
  nameWithType: StrongNameIdentityPermissionAttribute.Name
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameIdentityPermissionAttribute.PublicKey
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version
  parent: System.Security.Permissions.StrongNameIdentityPermissionAttribute
  isExternal: false
  name: Version
  nameWithType: StrongNameIdentityPermissionAttribute.Version
  fullName: System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
