### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.Comparer`1
  id: Comparer`1
  children:
  - System.Collections.Generic.Comparer`1.#ctor
  - System.Collections.Generic.Comparer`1.Compare(`0,`0)
  - System.Collections.Generic.Comparer`1.Create(System.Comparison`1)
  - System.Collections.Generic.Comparer`1.Default
  - System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)
  langs:
  - csharp
  name: Comparer<T>
  nameWithType: Comparer<T>
  fullName: System.Collections.Generic.Comparer<T>
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public abstract class Comparer<T> : System.Collections.Generic.IComparer<T>, System.Collections.IComparer'
    typeParameters:
    - id: T
      description: To be added.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer<T>
  - System.Collections.IComparer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.Comparer`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  name: Comparer()
  nameWithType: Comparer<T>.Comparer()
  fullName: System.Collections.Generic.Comparer<T>.Comparer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected Comparer ();
    parameters: []
  overload: System.Collections.Generic.Comparer`1.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.Comparer`1.Compare(`0,`0)
  id: Compare(`0,`0)
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  name: Compare(T,T)
  nameWithType: Comparer<T>.Compare(T,T)
  fullName: System.Collections.Generic.Comparer<T>.Compare(T,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract int Compare (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.Comparer`1.Compare*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.Comparer`1.Create(System.Comparison`1)
  id: Create(System.Comparison`1)
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  name: Create(Comparison<T>)
  nameWithType: Comparer<T>.Create(Comparison<T>)
  fullName: System.Collections.Generic.Comparer<T>.Create(Comparison<T>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Collections.Generic.Comparer<T> Create (Comparison<T> comparison);
    parameters:
    - id: comparison
      type: System.Comparison`1
      description: To be added.
    return:
      type: System.Collections.Generic.Comparer`1
      description: To be added.
  overload: System.Collections.Generic.Comparer`1.Create*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.Comparer`1.Default
  id: Default
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  name: Default
  nameWithType: Comparer<T>.Default
  fullName: System.Collections.Generic.Comparer<T>.Default
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Collections.Generic.Comparer<T> Default { get; }
    return:
      type: System.Collections.Generic.Comparer`1
      description: To be added.
  overload: System.Collections.Generic.Comparer`1.Default*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)
  id: System#Collections#IComparer#Compare(System.Object,System.Object)
  isEii: true
  parent: System.Collections.Generic.Comparer`1
  langs:
  - csharp
  name: System.Collections.IComparer.Compare(Object,Object)
  nameWithType: Comparer<T>.System.Collections.IComparer.Compare(Object,Object)
  fullName: System.Collections.Generic.Comparer<T>.System.Collections.IComparer.Compare(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: int IComparer.Compare (object x, object y);
    parameters:
    - id: x
      type: System.Object
      description: To be added.
    - id: y
      type: System.Object
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.Generic.Comparer`1.#ctor
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: Comparer()
  nameWithType: Comparer<T>.Comparer()
  fullName: System.Collections.Generic.Comparer<T>.Comparer()
- uid: System.Collections.Generic.Comparer`1.Compare(`0,`0)
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: Compare(T,T)
  nameWithType: Comparer<T>.Compare(T,T)
  fullName: System.Collections.Generic.Comparer<T>.Compare(T,T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.Comparer`1.Create(System.Comparison`1)
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: Create(Comparison<T>)
  nameWithType: Comparer<T>.Create(Comparison<T>)
  fullName: System.Collections.Generic.Comparer<T>.Create(Comparison<T>)
- uid: System.Collections.Generic.Comparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: Comparer<T>
  nameWithType: Comparer<T>
  fullName: System.Collections.Generic.Comparer<T>
- uid: System.Comparison`1
  parent: System
  isExternal: false
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
- uid: System.Collections.Generic.Comparer`1.Default
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: Default
  nameWithType: Comparer<T>.Default
  fullName: System.Collections.Generic.Comparer<T>.Default
- uid: System.Collections.Generic.Comparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: Comparer<T>
  nameWithType: Comparer<T>
  fullName: System.Collections.Generic.Comparer<T>
- uid: System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: System.Collections.IComparer.Compare(Object,Object)
  nameWithType: Comparer<T>.System.Collections.IComparer.Compare(Object,Object)
  fullName: System.Collections.Generic.Comparer<T>.System.Collections.IComparer.Compare(Object,Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.Comparer`1.#ctor*
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: Comparer<T>
  nameWithType: Comparer<T>.Comparer<T>
- uid: System.Collections.Generic.Comparer`1.Compare*
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: Compare
  nameWithType: Comparer<T>.Compare
- uid: System.Collections.Generic.Comparer`1.Create*
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: Create
  nameWithType: Comparer<T>.Create
- uid: System.Collections.Generic.Comparer`1.Default*
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: Default
  nameWithType: Comparer<T>.Default
- uid: System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare*
  parent: System.Collections.Generic.Comparer`1
  isExternal: false
  name: System.Collections.IComparer.Compare
  nameWithType: Comparer<T>.System.Collections.IComparer.Compare
