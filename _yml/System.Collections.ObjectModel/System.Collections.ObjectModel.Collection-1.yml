### YamlMime:ManagedReference
items:
- uid: System.Collections.ObjectModel.Collection`1
  id: Collection`1
  children:
  - System.Collections.ObjectModel.Collection`1.#ctor
  - System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList`1)
  - System.Collections.ObjectModel.Collection`1.Add(`0)
  - System.Collections.ObjectModel.Collection`1.Clear
  - System.Collections.ObjectModel.Collection`1.ClearItems
  - System.Collections.ObjectModel.Collection`1.Contains(`0)
  - System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  - System.Collections.ObjectModel.Collection`1.Count
  - System.Collections.ObjectModel.Collection`1.GetEnumerator
  - System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  - System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  - System.Collections.ObjectModel.Collection`1.Items
  - System.Collections.ObjectModel.Collection`1.Remove(`0)
  - System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))]

      [System.Runtime.InteropServices.ComVisible(false)]

      public class Collection<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.IReadOnlyList<T>, System.Collections.IList
    typeParameters:
    - id: T
      description: To be added.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<T>
  - System.Collections.Generic.IEnumerable<T>
  - System.Collections.Generic.IList<T>
  - System.Collections.Generic.IReadOnlyCollection<T>
  - System.Collections.Generic.IReadOnlyList<T>
  - System.Collections.IList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.#ctor
  id: '#ctor'
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Collection()
  nameWithType: Collection<T>.Collection()
  fullName: System.Collections.ObjectModel.Collection<T>.Collection()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Collection ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList`1)
  id: '#ctor(System.Collections.Generic.IList`1)'
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Collection(IList<T>)
  nameWithType: Collection<T>.Collection(IList<T>)
  fullName: System.Collections.ObjectModel.Collection<T>.Collection(IList<T>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Collection (System.Collections.Generic.IList<T> list);
    parameters:
    - id: list
      type: System.Collections.Generic.IList`1
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  id: Add(`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Add (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.Clear
  id: Clear
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.ClearItems
  id: ClearItems
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: ClearItems()
  nameWithType: Collection<T>.ClearItems()
  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void ClearItems ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: CopyTo(T[],Int32)
  nameWithType: Collection<T>.CopyTo(T[],Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void CopyTo (T[] array, int index);
    parameters:
    - id: array
      type: T[]
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.Count
  id: Count
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator`1
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int IndexOf (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Insert(Int32,T)
  nameWithType: Collection<T>.Insert(Int32,T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(Int32,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Insert (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    - id: item
      type: T
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  id: InsertItem(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: InsertItem(Int32,T)
  nameWithType: Collection<T>.InsertItem(Int32,T)
  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem(Int32,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void InsertItem (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    - id: item
      type: T
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: Collection<T>.Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: T
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.Items
  id: Items
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected System.Collections.Generic.IList<T> Items { get; }
    return:
      type: System.Collections.Generic.IList`1
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: RemoveItem(Int32)
  nameWithType: Collection<T>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void RemoveItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  id: SetItem(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: SetItem(Int32,T)
  nameWithType: Collection<T>.SetItem(Int32,T)
  fullName: System.Collections.ObjectModel.Collection<T>.SetItem(Int32,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void SetItem (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    - id: item
      type: T
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: Collection<T>.System.Collections.Generic.ICollection
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: Collection<T>.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: Collection<T>.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: Collection<T>.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: Collection<T>.System.Collections.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: Collection<T>.System.Collections.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: Collection<T>.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: Collection<T>.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: Collection<T>.System.Collections.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: Collection<T>.System.Collections.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: Collection<T>.System.Collections.IList.Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: Collection<T>.System.Collections.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.ObjectModel.Collection`1.#ctor
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Collection()
  nameWithType: Collection<T>.Collection()
  fullName: System.Collections.ObjectModel.Collection<T>.Collection()
- uid: System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList`1)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Collection(IList<T>)
  nameWithType: Collection<T>.Collection(IList<T>)
  fullName: System.Collections.ObjectModel.Collection<T>.Collection(IList<T>)
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.ObjectModel.Collection`1.Clear
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
- uid: System.Collections.ObjectModel.Collection`1.ClearItems
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: ClearItems()
  nameWithType: Collection<T>.ClearItems()
  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems()
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: CopyTo(T[],Int32)
  nameWithType: Collection<T>.CopyTo(T[],Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[],Int32)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.Count
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Insert(Int32,T)
  nameWithType: Collection<T>.Insert(Int32,T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(Int32,T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: InsertItem(Int32,T)
  nameWithType: Collection<T>.InsertItem(Int32,T)
  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem(Int32,T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Item(Int32)
  nameWithType: Collection<T>.Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.Item(Int32)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.Items
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: RemoveItem(Int32)
  nameWithType: Collection<T>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: SetItem(Int32,T)
  nameWithType: Collection<T>.SetItem(Int32,T)
  fullName: System.Collections.ObjectModel.Collection<T>.SetItem(Int32,T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: Collection<T>.System.Collections.Generic.ICollection
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: Collection<T>.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: Collection<T>.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: Collection<T>.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: Collection<T>.System.Collections.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: Collection<T>.System.Collections.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: Collection<T>.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: Collection<T>.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(Int32,Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: Collection<T>.System.Collections.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: Collection<T>.System.Collections.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: Collection<T>.System.Collections.IList.Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item(Int32)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: Collection<T>.System.Collections.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
