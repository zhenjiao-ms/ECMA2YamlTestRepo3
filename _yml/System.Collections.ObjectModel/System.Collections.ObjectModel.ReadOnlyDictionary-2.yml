### YamlMime:ManagedReference
items:
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  id: ReadOnlyDictionary`2
  children:
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary`2)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  langs:
  - csharp
  name: ReadOnlyDictionary<TKey,TValue>
  nameWithType: ReadOnlyDictionary<TKey,TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))]

      public class ReadOnlyDictionary<TKey,TValue> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IDictionary<TKey,TValue>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>, System.Collections.IDictionary
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TValue
      description: To be added.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - System.Collections.Generic.IDictionary<TKey,TValue>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>
  - System.Collections.IDictionary
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary`2)
  id: '#ctor(System.Collections.Generic.IDictionary`2)'
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: ReadOnlyDictionary(IDictionary<TKey,TValue>)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.ReadOnlyDictionary(IDictionary<TKey,TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ReadOnlyDictionary(IDictionary<TKey,TValue>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ReadOnlyDictionary (System.Collections.Generic.IDictionary<TKey,TValue> dictionary);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary`2
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: ContainsKey(TKey)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool ContainsKey (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  id: Count
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: Count
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Count
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary
  id: Dictionary
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: Dictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Dictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Dictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected System.Collections.Generic.IDictionary<TKey,TValue> Dictionary { get; }
    return:
      type: System.Collections.Generic.IDictionary`2
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: Item(TKey)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Item(TKey)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TValue this[TKey key] { get; }
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: TValue
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  id: Keys
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: Keys
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.KeyCollection Keys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void ICollection<KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair<TKey,TValue> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.ICollection()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void ICollection<KeyValuePair<TKey,TValue>>.Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool ICollection<KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair<TKey,TValue> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void ICollection<KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair<TKey,TValue>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{TKey,TValue}
      description: To be added.
    - id: arrayIndex
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool ICollection<KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair<TKey,TValue> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.IDictionary(TKey,TValue)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey,TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey,TValue)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void IDictionary<TKey,TValue>.Add (TKey key, TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.IDictionary(TKey)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: TValue System.Collections.Generic.IDictionary<TKey,TValue>.Item[TKey key] { get; set; }
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: TValue
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.IDictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.Generic.ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{TKey}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.IDictionary(TKey)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool IDictionary<TKey,TValue>.Remove (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.IDictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.Generic.ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }
    return:
      type: System.Collections.Generic.ICollection{TValue}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.IReadOnlyDictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.Generic.IEnumerable<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }
    return:
      type: System.Collections.Generic.IEnumerable{TKey}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.Generic.IReadOnlyDictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.Generic.IEnumerable<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }
    return:
      type: System.Collections.Generic.IEnumerable{TValue}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.Clear()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void IDictionary.Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IDictionary.Values
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: TryGetValue(TKey,TValue)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool TryGetValue (TKey key, out TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  id: Values
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  name: Values
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ValueCollection Values { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary`2)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: ReadOnlyDictionary(IDictionary<TKey,TValue>)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.ReadOnlyDictionary(IDictionary<TKey,TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ReadOnlyDictionary(IDictionary<TKey,TValue>)
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: ContainsKey(TKey)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: Count
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Count
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: Dictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Dictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Dictionary
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<KeyValuePair<TKey,TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey,TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: Item(TKey)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Item(TKey)
- uid: TValue
  parent: ''
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: Keys
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Keys
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyDictionary<TKey,TValue>+KeyCollection
  nameWithType: ReadOnlyDictionary<TKey,TValue>+KeyCollection
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+KeyCollection
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
- uid: System.Collections.Generic.KeyValuePair`2
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection()
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.KeyValuePair`2
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)
- uid: System.Collections.Generic.KeyValuePair{TKey,TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.KeyValuePair`2
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary(TKey,TValue)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey,TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey,TValue)
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  parent: ''
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary(TKey)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)
- uid: TValue
  parent: ''
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary
- uid: System.Collections.Generic.ICollection{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<TKey>
  nameWithType: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary(TKey)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary
- uid: System.Collections.Generic.ICollection{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.IReadOnlyDictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary
- uid: System.Collections.Generic.IEnumerable{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TKey>
  nameWithType: IEnumerable<TKey>
  fullName: System.Collections.Generic.IEnumerable<TKey>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.Generic.IReadOnlyDictionary
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary
- uid: System.Collections.Generic.IEnumerable{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TValue>
  nameWithType: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Clear()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Clear()
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Values
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: TryGetValue(TKey,TValue)
  nameWithType: ReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  parent: ''
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: false
  name: Values
  nameWithType: ReadOnlyDictionary<TKey,TValue>.Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Values
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyDictionary<TKey,TValue>+ValueCollection
  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection
