### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Tracing.EventListener
  id: EventListener
  children:
  - System.Diagnostics.Tracing.EventListener.#ctor
  - System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.Dispose
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.Diagnostics.Tracing.EventListener.EventSourceCreated
  - System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.EventWritten
  - System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  langs:
  - csharp
  name: EventListener
  nameWithType: EventListener
  fullName: System.Diagnostics.Tracing.EventListener
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class EventListener : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: EventListener()
  nameWithType: EventListener.EventListener()
  fullName: System.Diagnostics.Tracing.EventListener.EventListener()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public EventListener ();
    parameters: []
  overload: System.Diagnostics.Tracing.EventListener.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  id: DisableEvents(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: DisableEvents(EventSource)
  nameWithType: EventListener.DisableEvents(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.DisableEvents(EventSource)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DisableEvents (System.Diagnostics.Tracing.EventSource eventSource);
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: To be added.
  overload: System.Diagnostics.Tracing.EventListener.DisableEvents*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.Dispose
  id: Dispose
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventListener.Dispose()
  fullName: System.Diagnostics.Tracing.EventListener.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.Diagnostics.Tracing.EventListener.Dispose*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: EnableEvents(EventSource,EventLevel)
  nameWithType: EventListener.EnableEvents(EventSource,EventLevel)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level);
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: To be added.
    - id: level
      type: System.Diagnostics.Tracing.EventLevel
      description: To be added.
  overload: System.Diagnostics.Tracing.EventListener.EnableEvents*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: EnableEvents(EventSource,EventLevel,EventKeywords)
  nameWithType: EventListener.EnableEvents(EventSource,EventLevel,EventKeywords)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel,EventKeywords)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword);
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: To be added.
    - id: level
      type: System.Diagnostics.Tracing.EventLevel
      description: To be added.
    - id: matchAnyKeyword
      type: System.Diagnostics.Tracing.EventKeywords
      description: To be added.
  overload: System.Diagnostics.Tracing.EventListener.EnableEvents*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)
  nameWithType: EventListener.EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, System.Collections.Generic.IDictionary<string,string> arguments);
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: To be added.
    - id: level
      type: System.Diagnostics.Tracing.EventLevel
      description: To be added.
    - id: matchAnyKeyword
      type: System.Diagnostics.Tracing.EventKeywords
      description: To be added.
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: To be added.
  overload: System.Diagnostics.Tracing.EventListener.EnableEvents*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.EventSourceCreated
  id: EventSourceCreated
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: EventSourceCreated
  nameWithType: EventListener.EventSourceCreated
  fullName: System.Diagnostics.Tracing.EventListener.EventSourceCreated
  type: Event
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public event EventHandler<System.Diagnostics.Tracing.EventSourceCreatedEventArgs> EventSourceCreated;
    return:
      type: System.EventHandler{System.Diagnostics.Tracing.EventSourceCreatedEventArgs}
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  id: EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: EventSourceIndex(EventSource)
  nameWithType: EventListener.EventSourceIndex(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.EventSourceIndex(EventSource)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected static int EventSourceIndex (System.Diagnostics.Tracing.EventSource eventSource);
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Diagnostics.Tracing.EventListener.EventSourceIndex*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.EventWritten
  id: EventWritten
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: EventWritten
  nameWithType: EventListener.EventWritten
  fullName: System.Diagnostics.Tracing.EventListener.EventWritten
  type: Event
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public event EventHandler<System.Diagnostics.Tracing.EventWrittenEventArgs> EventWritten;
    return:
      type: System.EventHandler{System.Diagnostics.Tracing.EventWrittenEventArgs}
      description: To be added.
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  id: OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: OnEventSourceCreated(EventSource)
  nameWithType: EventListener.OnEventSourceCreated(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(EventSource)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void OnEventSourceCreated (System.Diagnostics.Tracing.EventSource eventSource);
    parameters:
    - id: eventSource
      type: System.Diagnostics.Tracing.EventSource
      description: To be added.
  overload: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  id: OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  parent: System.Diagnostics.Tracing.EventListener
  langs:
  - csharp
  name: OnEventWritten(EventWrittenEventArgs)
  nameWithType: EventListener.OnEventWritten(EventWrittenEventArgs)
  fullName: System.Diagnostics.Tracing.EventListener.OnEventWritten(EventWrittenEventArgs)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void OnEventWritten (System.Diagnostics.Tracing.EventWrittenEventArgs eventData);
    parameters:
    - id: eventData
      type: System.Diagnostics.Tracing.EventWrittenEventArgs
      description: To be added.
  overload: System.Diagnostics.Tracing.EventListener.OnEventWritten*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Tracing.EventListener.#ctor
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EventListener()
  nameWithType: EventListener.EventListener()
  fullName: System.Diagnostics.Tracing.EventListener.EventListener()
- uid: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: DisableEvents(EventSource)
  nameWithType: EventListener.DisableEvents(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.DisableEvents(EventSource)
- uid: System.Diagnostics.Tracing.EventSource
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventSource
  nameWithType: EventSource
  fullName: System.Diagnostics.Tracing.EventSource
- uid: System.Diagnostics.Tracing.EventListener.Dispose
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: Dispose()
  nameWithType: EventListener.Dispose()
  fullName: System.Diagnostics.Tracing.EventListener.Dispose()
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EnableEvents(EventSource,EventLevel)
  nameWithType: EventListener.EnableEvents(EventSource,EventLevel)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel)
- uid: System.Diagnostics.Tracing.EventLevel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventLevel
  nameWithType: EventLevel
  fullName: System.Diagnostics.Tracing.EventLevel
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EnableEvents(EventSource,EventLevel,EventKeywords)
  nameWithType: EventListener.EnableEvents(EventSource,EventLevel,EventKeywords)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel,EventKeywords)
- uid: System.Diagnostics.Tracing.EventKeywords
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventKeywords
  nameWithType: EventKeywords
  fullName: System.Diagnostics.Tracing.EventKeywords
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)
  nameWithType: EventListener.EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Tracing.EventListener.EventSourceCreated
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EventSourceCreated
  nameWithType: EventListener.EventSourceCreated
  fullName: System.Diagnostics.Tracing.EventListener.EventSourceCreated
- uid: System.EventHandler{System.Diagnostics.Tracing.EventSourceCreatedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<EventSourceCreatedEventArgs>
  nameWithType: EventHandler<EventSourceCreatedEventArgs>
  fullName: System.EventHandler<System.Diagnostics.Tracing.EventSourceCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Diagnostics.Tracing.EventSourceCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.Tracing.EventSourceCreatedEventArgs
    name: EventSourceCreatedEventArgs
    nameWithType: EventSourceCreatedEventArgs
    fullName: EventSourceCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EventSourceIndex(EventSource)
  nameWithType: EventListener.EventSourceIndex(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.EventSourceIndex(EventSource)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Tracing.EventListener.EventWritten
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EventWritten
  nameWithType: EventListener.EventWritten
  fullName: System.Diagnostics.Tracing.EventListener.EventWritten
- uid: System.EventHandler{System.Diagnostics.Tracing.EventWrittenEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<EventWrittenEventArgs>
  nameWithType: EventHandler<EventWrittenEventArgs>
  fullName: System.EventHandler<System.Diagnostics.Tracing.EventWrittenEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Diagnostics.Tracing.EventWrittenEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.Tracing.EventWrittenEventArgs
    name: EventWrittenEventArgs
    nameWithType: EventWrittenEventArgs
    fullName: EventWrittenEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: OnEventSourceCreated(EventSource)
  nameWithType: EventListener.OnEventSourceCreated(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(EventSource)
- uid: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: OnEventWritten(EventWrittenEventArgs)
  nameWithType: EventListener.OnEventWritten(EventWrittenEventArgs)
  fullName: System.Diagnostics.Tracing.EventListener.OnEventWritten(EventWrittenEventArgs)
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventWrittenEventArgs
  nameWithType: EventWrittenEventArgs
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs
- uid: System.Diagnostics.Tracing.EventListener.#ctor*
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EventListener
  nameWithType: EventListener.EventListener
- uid: System.Diagnostics.Tracing.EventListener.DisableEvents*
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: DisableEvents
  nameWithType: EventListener.DisableEvents
- uid: System.Diagnostics.Tracing.EventListener.Dispose*
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: Dispose
  nameWithType: EventListener.Dispose
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents*
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EnableEvents
  nameWithType: EventListener.EnableEvents
- uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex*
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: EventSourceIndex
  nameWithType: EventListener.EventSourceIndex
- uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated*
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: OnEventSourceCreated
  nameWithType: EventListener.OnEventSourceCreated
- uid: System.Diagnostics.Tracing.EventListener.OnEventWritten*
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: false
  name: OnEventWritten
  nameWithType: EventListener.OnEventWritten
