### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  id: X509Certificate
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  langs:
  - csharp
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class X509Certificate : IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (System.Security.Cryptography.X509Certificates.X509Certificate cert);
    parameters:
    - id: cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  id: '#ctor(System.Byte[],System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: To be added.
    - id: password
      type: System.Security.SecureString
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (byte[] rawData, string password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: To be added.
    - id: password
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password);
    parameters:
    - id: fileName
      type: System.String
      description: To be added.
    - id: password
      type: System.Security.SecureString
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (string fileName, string password);
    parameters:
    - id: fileName
      type: System.String
      description: To be added.
    - id: password
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: To be added.
    - id: password
      type: System.Security.SecureString
      description: To be added.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: To be added.
    - id: password
      type: System.String
      description: To be added.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: To be added.
    - id: password
      type: System.Security.SecureString
      description: To be added.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public X509Certificate (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: To be added.
    - id: password
      type: System.String
      description: To be added.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  id: CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromCertFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: To be added.
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  id: CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromSignedFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: To be added.
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool Equals (System.Security.Cryptography.X509Certificates.X509Certificate other);
    parameters:
    - id: other
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, System.Security.SecureString password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: To be added.
    - id: password
      type: System.Security.SecureString
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: To be added.
    - id: password
      type: System.String
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  id: FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected static string FormatDate (DateTime date);
    parameters:
    - id: date
      type: System.DateTime
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  id: GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] GetCertHash ();
    parameters: []
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  id: GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetCertHashString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  id: GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetEffectiveDateString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  id: GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetExpirationDateString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  id: GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetFormat ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  id: GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetIssuerName ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  id: GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetKeyAlgorithm ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  id: GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] GetKeyAlgorithmParameters ();
    parameters: []
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  id: GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetKeyAlgorithmParametersString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  id: GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetName ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] GetPublicKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  id: GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetPublicKeyString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  id: GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] GetRawCertData ();
    parameters: []
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  id: GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetRawCertDataString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  id: GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual byte[] GetSerialNumber ();
    parameters: []
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  id: GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string GetSerialNumberString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  id: Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Import (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Import (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: To be added.
    - id: password
      type: System.Security.SecureString
      description: To be added.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: To be added.
    - id: password
      type: System.String
      description: To be added.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: To be added.
    - id: password
      type: System.Security.SecureString
      description: To be added.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: To be added.
    - id: password
      type: System.String
      description: To be added.
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  id: Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string Issuer { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  id: Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string Subject { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void IDeserializationCallback.OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual string ToString (bool fVerbose);
    parameters:
    - id: fVerbose
      type: System.Boolean
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  nameWithType: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  nameWithType: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile
  nameWithType: X509Certificate.CreateFromCertFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile
  nameWithType: X509Certificate.CreateFromSignedFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose
  nameWithType: X509Certificate.Dispose
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals
  nameWithType: X509Certificate.Equals
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export
  nameWithType: X509Certificate.Export
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate
  nameWithType: X509Certificate.FormatDate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash
  nameWithType: X509Certificate.GetCertHash
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString
  nameWithType: X509Certificate.GetCertHashString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString
  nameWithType: X509Certificate.GetEffectiveDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString
  nameWithType: X509Certificate.GetExpirationDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat
  nameWithType: X509Certificate.GetFormat
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode
  nameWithType: X509Certificate.GetHashCode
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName
  nameWithType: X509Certificate.GetIssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm
  nameWithType: X509Certificate.GetKeyAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters
  nameWithType: X509Certificate.GetKeyAlgorithmParameters
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName
  nameWithType: X509Certificate.GetName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey
  nameWithType: X509Certificate.GetPublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString
  nameWithType: X509Certificate.GetPublicKeyString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData
  nameWithType: X509Certificate.GetRawCertData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString
  nameWithType: X509Certificate.GetRawCertDataString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber
  nameWithType: X509Certificate.GetSerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString
  nameWithType: X509Certificate.GetSerialNumberString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import
  nameWithType: X509Certificate.Import
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset
  nameWithType: X509Certificate.Reset
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString
  nameWithType: X509Certificate.ToString
