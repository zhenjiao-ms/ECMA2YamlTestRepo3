### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.ExceptionHandler
  id: ExceptionHandler
  children:
  - System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)
  - System.Reflection.Emit.ExceptionHandler.Equals(System.Object)
  - System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)
  - System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken
  - System.Reflection.Emit.ExceptionHandler.FilterOffset
  - System.Reflection.Emit.ExceptionHandler.GetHashCode
  - System.Reflection.Emit.ExceptionHandler.HandlerLength
  - System.Reflection.Emit.ExceptionHandler.HandlerOffset
  - System.Reflection.Emit.ExceptionHandler.Kind
  - System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)
  - System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)
  - System.Reflection.Emit.ExceptionHandler.TryLength
  - System.Reflection.Emit.ExceptionHandler.TryOffset
  langs:
  - csharp
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.Reflection.Emit.ExceptionHandler
  type: Struct
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public struct ExceptionHandler : IEquatable<System.Reflection.Emit.ExceptionHandler>
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IEquatable<System.Reflection.Emit.ExceptionHandler>
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)'
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: ExceptionHandler(Int32,Int32,Int32,Int32,Int32,ExceptionHandlingClauseOptions,Int32)
  nameWithType: ExceptionHandler.ExceptionHandler(Int32,Int32,Int32,Int32,Int32,ExceptionHandlingClauseOptions,Int32)
  fullName: System.Reflection.Emit.ExceptionHandler.ExceptionHandler(Int32,Int32,Int32,Int32,Int32,ExceptionHandlingClauseOptions,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ExceptionHandler (int tryOffset, int tryLength, int filterOffset, int handlerOffset, int handlerLength, System.Reflection.ExceptionHandlingClauseOptions kind, int exceptionTypeToken);
    parameters:
    - id: tryOffset
      type: System.Int32
      description: To be added.
    - id: tryLength
      type: System.Int32
      description: To be added.
    - id: filterOffset
      type: System.Int32
      description: To be added.
    - id: handlerOffset
      type: System.Int32
      description: To be added.
    - id: handlerLength
      type: System.Int32
      description: To be added.
    - id: kind
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: To be added.
    - id: exceptionTypeToken
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ExceptionHandler.Equals(Object)
  fullName: System.Reflection.Emit.ExceptionHandler.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.ExceptionHandler.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)
  id: Equals(System.Reflection.Emit.ExceptionHandler)
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: Equals(ExceptionHandler)
  nameWithType: ExceptionHandler.Equals(ExceptionHandler)
  fullName: System.Reflection.Emit.ExceptionHandler.Equals(ExceptionHandler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Equals (System.Reflection.Emit.ExceptionHandler other);
    parameters:
    - id: other
      type: System.Reflection.Emit.ExceptionHandler
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Emit.ExceptionHandler.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken
  id: ExceptionTypeToken
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: ExceptionTypeToken
  nameWithType: ExceptionHandler.ExceptionTypeToken
  fullName: System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int ExceptionTypeToken { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.FilterOffset
  id: FilterOffset
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: FilterOffset
  nameWithType: ExceptionHandler.FilterOffset
  fullName: System.Reflection.Emit.ExceptionHandler.FilterOffset
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int FilterOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ExceptionHandler.GetHashCode()
  fullName: System.Reflection.Emit.ExceptionHandler.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.HandlerLength
  id: HandlerLength
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: HandlerLength
  nameWithType: ExceptionHandler.HandlerLength
  fullName: System.Reflection.Emit.ExceptionHandler.HandlerLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int HandlerLength { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.HandlerOffset
  id: HandlerOffset
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: HandlerOffset
  nameWithType: ExceptionHandler.HandlerOffset
  fullName: System.Reflection.Emit.ExceptionHandler.HandlerOffset
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int HandlerOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.Kind
  id: Kind
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: Kind
  nameWithType: ExceptionHandler.Kind
  fullName: System.Reflection.Emit.ExceptionHandler.Kind
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Reflection.ExceptionHandlingClauseOptions Kind { get; }
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)
  id: op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: op_Equality(ExceptionHandler,ExceptionHandler)
  nameWithType: ExceptionHandler.op_Equality(ExceptionHandler,ExceptionHandler)
  fullName: System.Reflection.Emit.ExceptionHandler.op_Equality(ExceptionHandler,ExceptionHandler)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.ExceptionHandler left, System.Reflection.Emit.ExceptionHandler right);
    parameters:
    - id: left
      type: System.Reflection.Emit.ExceptionHandler
      description: To be added.
    - id: right
      type: System.Reflection.Emit.ExceptionHandler
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)
  id: op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: op_Inequality(ExceptionHandler,ExceptionHandler)
  nameWithType: ExceptionHandler.op_Inequality(ExceptionHandler,ExceptionHandler)
  fullName: System.Reflection.Emit.ExceptionHandler.op_Inequality(ExceptionHandler,ExceptionHandler)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.ExceptionHandler left, System.Reflection.Emit.ExceptionHandler right);
    parameters:
    - id: left
      type: System.Reflection.Emit.ExceptionHandler
      description: To be added.
    - id: right
      type: System.Reflection.Emit.ExceptionHandler
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.TryLength
  id: TryLength
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: TryLength
  nameWithType: ExceptionHandler.TryLength
  fullName: System.Reflection.Emit.ExceptionHandler.TryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int TryLength { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.ExceptionHandler.TryOffset
  id: TryOffset
  parent: System.Reflection.Emit.ExceptionHandler
  langs:
  - csharp
  name: TryOffset
  nameWithType: ExceptionHandler.TryOffset
  fullName: System.Reflection.Emit.ExceptionHandler.TryOffset
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int TryOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: ExceptionHandler(Int32,Int32,Int32,Int32,Int32,ExceptionHandlingClauseOptions,Int32)
  nameWithType: ExceptionHandler.ExceptionHandler(Int32,Int32,Int32,Int32,Int32,ExceptionHandlingClauseOptions,Int32)
  fullName: System.Reflection.Emit.ExceptionHandler.ExceptionHandler(Int32,Int32,Int32,Int32,Int32,ExceptionHandlingClauseOptions,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ExceptionHandlingClauseOptions
  parent: System.Reflection
  isExternal: false
  name: ExceptionHandlingClauseOptions
  nameWithType: ExceptionHandlingClauseOptions
  fullName: System.Reflection.ExceptionHandlingClauseOptions
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ExceptionHandler.Equals(System.Object)
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: Equals(Object)
  nameWithType: ExceptionHandler.Equals(Object)
  fullName: System.Reflection.Emit.ExceptionHandler.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: Equals(ExceptionHandler)
  nameWithType: ExceptionHandler.Equals(ExceptionHandler)
  fullName: System.Reflection.Emit.ExceptionHandler.Equals(ExceptionHandler)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.ExceptionHandler
  parent: System.Reflection.Emit
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.Reflection.Emit.ExceptionHandler
- uid: System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: ExceptionTypeToken
  nameWithType: ExceptionHandler.ExceptionTypeToken
  fullName: System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ExceptionHandler.FilterOffset
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: FilterOffset
  nameWithType: ExceptionHandler.FilterOffset
  fullName: System.Reflection.Emit.ExceptionHandler.FilterOffset
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ExceptionHandler.GetHashCode
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: GetHashCode()
  nameWithType: ExceptionHandler.GetHashCode()
  fullName: System.Reflection.Emit.ExceptionHandler.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ExceptionHandler.HandlerLength
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: HandlerLength
  nameWithType: ExceptionHandler.HandlerLength
  fullName: System.Reflection.Emit.ExceptionHandler.HandlerLength
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ExceptionHandler.HandlerOffset
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: HandlerOffset
  nameWithType: ExceptionHandler.HandlerOffset
  fullName: System.Reflection.Emit.ExceptionHandler.HandlerOffset
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ExceptionHandler.Kind
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: Kind
  nameWithType: ExceptionHandler.Kind
  fullName: System.Reflection.Emit.ExceptionHandler.Kind
- uid: System.Reflection.ExceptionHandlingClauseOptions
  parent: System.Reflection
  isExternal: false
  name: ExceptionHandlingClauseOptions
  nameWithType: ExceptionHandlingClauseOptions
  fullName: System.Reflection.ExceptionHandlingClauseOptions
- uid: System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: op_Equality(ExceptionHandler,ExceptionHandler)
  nameWithType: ExceptionHandler.op_Equality(ExceptionHandler,ExceptionHandler)
  fullName: System.Reflection.Emit.ExceptionHandler.op_Equality(ExceptionHandler,ExceptionHandler)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.ExceptionHandler
  parent: System.Reflection.Emit
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.Reflection.Emit.ExceptionHandler
- uid: System.Reflection.Emit.ExceptionHandler
  parent: System.Reflection.Emit
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.Reflection.Emit.ExceptionHandler
- uid: System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: op_Inequality(ExceptionHandler,ExceptionHandler)
  nameWithType: ExceptionHandler.op_Inequality(ExceptionHandler,ExceptionHandler)
  fullName: System.Reflection.Emit.ExceptionHandler.op_Inequality(ExceptionHandler,ExceptionHandler)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.ExceptionHandler
  parent: System.Reflection.Emit
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.Reflection.Emit.ExceptionHandler
- uid: System.Reflection.Emit.ExceptionHandler
  parent: System.Reflection.Emit
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.Reflection.Emit.ExceptionHandler
- uid: System.Reflection.Emit.ExceptionHandler.TryLength
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: TryLength
  nameWithType: ExceptionHandler.TryLength
  fullName: System.Reflection.Emit.ExceptionHandler.TryLength
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ExceptionHandler.TryOffset
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: TryOffset
  nameWithType: ExceptionHandler.TryOffset
  fullName: System.Reflection.Emit.ExceptionHandler.TryOffset
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ExceptionHandler.Equals*
  parent: System.Reflection.Emit.ExceptionHandler
  isExternal: false
  name: Equals
  nameWithType: ExceptionHandler.Equals
