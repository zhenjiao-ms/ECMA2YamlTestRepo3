### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  id: ConcurrentExclusiveSchedulerPair
  children:
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair
  nameWithType: ConcurrentExclusiveSchedulerPair
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Concurrent={ConcurrentTaskCountForDebugger}, Exclusive={ExclusiveTaskCountForDebugger}, Mode={ModeForDebugger}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.ConcurrentExclusiveSchedulerPair/DebugView))]

      public class ConcurrentExclusiveSchedulerPair
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair()
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair ();
    parameters: []
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  id: '#ctor(System.Threading.Tasks.TaskScheduler)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  id: '#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
    - id: maxConcurrencyLevel
      type: System.Int32
      description: To be added.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  id: '#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
    - id: maxConcurrencyLevel
      type: System.Int32
      description: To be added.
    - id: maxItemsPerTask
      type: System.Int32
      description: To be added.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  id: Complete
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: Complete()
  nameWithType: ConcurrentExclusiveSchedulerPair.Complete()
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  id: Completion
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: Completion
  nameWithType: ConcurrentExclusiveSchedulerPair.Completion
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.Task Completion { get; }
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  id: ConcurrentScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.TaskScheduler ConcurrentScheduler { get; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  id: ExclusiveScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ExclusiveScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.TaskScheduler ExclusiveScheduler { get; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair()
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Complete()
  nameWithType: ConcurrentExclusiveSchedulerPair.Complete()
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete()
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Completion
  nameWithType: ConcurrentExclusiveSchedulerPair.Completion
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ExclusiveScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Complete
  nameWithType: ConcurrentExclusiveSchedulerPair.Complete
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Completion
  nameWithType: ConcurrentExclusiveSchedulerPair.Completion
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler*
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ExclusiveScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
