### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  id: AsyncTaskMethodBuilder`1
  children:
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitOnCompleted``2(``0@,``1@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitUnsafeOnCompleted``2(``0@,``1@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Create
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(System.Exception)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult(`0)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start``1(``0@)
  - System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Task
  langs:
  - csharp
  name: AsyncTaskMethodBuilder<TResult>
  nameWithType: AsyncTaskMethodBuilder<TResult>
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>
  type: Struct
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public struct AsyncTaskMethodBuilder<TResult>
    typeParameters:
    - id: TResult
      description: To be added.
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitOnCompleted``2(``0@,``1@)
  id: AwaitOnCompleted``2(``0@,``1@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  langs:
  - csharp
  name: AwaitOnCompleted(TAwaiter,TStateMachine)
  nameWithType: AsyncTaskMethodBuilder<TResult>.AwaitOnCompleted(TAwaiter,TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.AwaitOnCompleted(TAwaiter,TStateMachine)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public void AwaitOnCompleted<TAwaiter,TStateMachine> (ref TAwaiter awaiter, ref TStateMachine stateMachine) where TAwaiter : System.Runtime.CompilerServices.INotifyCompletion where TStateMachine : System.Runtime.CompilerServices.IAsyncStateMachine;'
    parameters:
    - id: awaiter
      type: TAwaiter
      description: To be added.
    - id: stateMachine
      type: TStateMachine
      description: To be added.
  overload: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitOnCompleted<TAwaiter,TStateMachine>*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitUnsafeOnCompleted``2(``0@,``1@)
  id: AwaitUnsafeOnCompleted``2(``0@,``1@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  langs:
  - csharp
  name: AwaitUnsafeOnCompleted(TAwaiter,TStateMachine)
  nameWithType: AsyncTaskMethodBuilder<TResult>.AwaitUnsafeOnCompleted(TAwaiter,TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.AwaitUnsafeOnCompleted(TAwaiter,TStateMachine)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public void AwaitUnsafeOnCompleted<TAwaiter,TStateMachine> (ref TAwaiter awaiter, ref TStateMachine stateMachine) where TAwaiter : System.Runtime.CompilerServices.ICriticalNotifyCompletion where TStateMachine : System.Runtime.CompilerServices.IAsyncStateMachine;'
    parameters:
    - id: awaiter
      type: TAwaiter
      description: To be added.
    - id: stateMachine
      type: TStateMachine
      description: To be added.
  overload: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitUnsafeOnCompleted<TAwaiter,TStateMachine>*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Create
  id: Create
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  langs:
  - csharp
  name: Create()
  nameWithType: AsyncTaskMethodBuilder<TResult>.Create()
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult> Create ();
    parameters: []
    return:
      type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
      description: To be added.
  overload: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Create*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(System.Exception)
  id: SetException(System.Exception)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  langs:
  - csharp
  name: SetException(Exception)
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetException(Exception)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.SetException(Exception)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetException (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: To be added.
  overload: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult(`0)
  id: SetResult(`0)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  langs:
  - csharp
  name: SetResult(TResult)
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetResult(TResult)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.SetResult(TResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetResult (TResult result);
    parameters:
    - id: result
      type: TResult
      description: To be added.
  overload: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  id: SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  langs:
  - csharp
  name: SetStateMachine(IAsyncStateMachine)
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetStateMachine(IAsyncStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.SetStateMachine(IAsyncStateMachine)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetStateMachine (System.Runtime.CompilerServices.IAsyncStateMachine stateMachine);
    parameters:
    - id: stateMachine
      type: System.Runtime.CompilerServices.IAsyncStateMachine
      description: To be added.
  overload: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetStateMachine*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start``1(``0@)
  id: Start``1(``0@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  langs:
  - csharp
  name: Start(TStateMachine)
  nameWithType: AsyncTaskMethodBuilder<TResult>.Start(TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.Start(TStateMachine)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public void Start<TStateMachine> (ref TStateMachine stateMachine) where TStateMachine : System.Runtime.CompilerServices.IAsyncStateMachine;'
    parameters:
    - id: stateMachine
      type: TStateMachine
      description: To be added.
  overload: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start<TStateMachine>*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Task
  id: Task
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  langs:
  - csharp
  name: Task
  nameWithType: AsyncTaskMethodBuilder<TResult>.Task
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.Task
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.Task<TResult> Task { get; }
    return:
      type: System.Threading.Tasks.Task`1
      description: To be added.
  overload: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Task*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitOnCompleted``2(``0@,``1@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: AwaitOnCompleted(TAwaiter,TStateMachine)
  nameWithType: AsyncTaskMethodBuilder<TResult>.AwaitOnCompleted(TAwaiter,TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.AwaitOnCompleted(TAwaiter,TStateMachine)
- uid: TAwaiter
  isExternal: true
  name: TAwaiter
  nameWithType: TAwaiter
  fullName: TAwaiter
- uid: TStateMachine
  isExternal: true
  name: TStateMachine
  nameWithType: TStateMachine
  fullName: TStateMachine
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitUnsafeOnCompleted``2(``0@,``1@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: AwaitUnsafeOnCompleted(TAwaiter,TStateMachine)
  nameWithType: AsyncTaskMethodBuilder<TResult>.AwaitUnsafeOnCompleted(TAwaiter,TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.AwaitUnsafeOnCompleted(TAwaiter,TStateMachine)
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Create
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: Create()
  nameWithType: AsyncTaskMethodBuilder<TResult>.Create()
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.Create()
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: AsyncTaskMethodBuilder<TResult>
  nameWithType: AsyncTaskMethodBuilder<TResult>
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(System.Exception)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: SetException(Exception)
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetException(Exception)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.SetException(Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult(`0)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: SetResult(TResult)
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetResult(TResult)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.SetResult(TResult)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: SetStateMachine(IAsyncStateMachine)
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetStateMachine(IAsyncStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.SetStateMachine(IAsyncStateMachine)
- uid: System.Runtime.CompilerServices.IAsyncStateMachine
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: IAsyncStateMachine
  nameWithType: IAsyncStateMachine
  fullName: System.Runtime.CompilerServices.IAsyncStateMachine
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start``1(``0@)
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: Start(TStateMachine)
  nameWithType: AsyncTaskMethodBuilder<TResult>.Start(TStateMachine)
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.Start(TStateMachine)
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Task
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: Task
  nameWithType: AsyncTaskMethodBuilder<TResult>.Task
  fullName: System.Runtime.CompilerServices.AsyncTaskMethodBuilder<TResult>.Task
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitOnCompleted<TAwaiter,TStateMachine>*
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: AwaitOnCompleted<TAwaiter,TStateMachine>
  nameWithType: AsyncTaskMethodBuilder<TResult>.AwaitOnCompleted<TAwaiter,TStateMachine>
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AwaitUnsafeOnCompleted<TAwaiter,TStateMachine>*
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: AwaitUnsafeOnCompleted<TAwaiter,TStateMachine>
  nameWithType: AsyncTaskMethodBuilder<TResult>.AwaitUnsafeOnCompleted<TAwaiter,TStateMachine>
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Create*
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: Create
  nameWithType: AsyncTaskMethodBuilder<TResult>.Create
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException*
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: SetException
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetException
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetResult*
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: SetResult
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetResult
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetStateMachine*
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: SetStateMachine
  nameWithType: AsyncTaskMethodBuilder<TResult>.SetStateMachine
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Start<TStateMachine>*
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: Start<TStateMachine>
  nameWithType: AsyncTaskMethodBuilder<TResult>.Start<TStateMachine>
- uid: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Task*
  parent: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
  isExternal: false
  name: Task
  nameWithType: AsyncTaskMethodBuilder<TResult>.Task
