### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.IReadOnlyCollection`1
  id: IReadOnlyCollection`1
  children:
  - System.Collections.Generic.IReadOnlyCollection`1.Count
  langs:
  - csharp
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  type: Interface
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public interface IReadOnlyCollection<out T> : System.Collections.Generic.IEnumerable<out T>'
    typeParameters:
    - id: T
      description: To be added.
  implements:
  - System.Collections.Generic.IEnumerable<T>
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  id: Count
  parent: System.Collections.Generic.IReadOnlyCollection`1
  langs:
  - csharp
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.IReadOnlyCollection`1.Count*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  parent: System.Collections.Generic.IReadOnlyCollection`1
  isExternal: false
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count*
  parent: System.Collections.Generic.IReadOnlyCollection`1
  isExternal: false
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
