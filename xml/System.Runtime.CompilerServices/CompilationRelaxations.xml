<Type Name="CompilationRelaxations" FullName="System.Runtime.CompilerServices.CompilationRelaxations">
  <TypeSignature Language="C#" Value="public enum CompilationRelaxations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CompilationRelaxations extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies parameters that control the strictness of the code generated by the common language runtime's just-in-time (JIT) compiler.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the CompilationRelaxations enumeration with the ttribute attribute.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="NoStringInterning">
      <MemberSignature Language="C#" Value="NoStringInterning" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.CompilerServices.CompilationRelaxations NoStringInterning = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.CompilationRelaxations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Marks an assembly as not requiring string-literal interning.</summary>
        <threadsafe />
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In an application domain, the common language runtime creates one string object for each unique string literal, rather than making multiple copies. This behavior, called string interning, internally requires building auxiliary tables that consume memory resources.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>