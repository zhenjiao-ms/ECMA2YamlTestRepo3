<Type Name="CompilationRelaxationsAttribute" FullName="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
  <TypeSignature Language="C#" Value="public class CompilationRelaxationsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompilationRelaxationsAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Method)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Controls the strictness of the code generated by the common language runtime's just-in-time (JIT) compiler.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apply the CompilationRelaxationsAttribute attribute to assemblies to specify assembly compilation parameters.  Use the <xref:System.Runtime.CompilerServices.CompilationRelaxations> enumeration to specify compilation options.  
  
 This attribute is ignored in version 1.0 of the Microsoft .NET Framework.  
  
 The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.  
  
   
  
## Examples  
 The following example demonstrates how to apply the CompilationRelaxationsAttribute.  
  
 [!code-cs[Runtime.CompilerServices.CompilationRelaxationsAttribute#1](~/add/codesnippet/csharp/t-system.runtime.compile_24_1.cs)]
 [!code-vb[Runtime.CompilerServices.CompilationRelaxationsAttribute#1](~/add/codesnippet/visualbasic/t-system.runtime.compile_24_1.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilationRelaxationsAttribute (int relaxations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 relaxations) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relaxations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="relaxations">The compilation relaxations.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" /> class with the specified compilation relaxations.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apply the <xref:System.Runtime.CompilerServices.CompilationRelaxationsAttribute> attribute to assemblies to specify assembly compilation parameters.  
  
 This attribute is ignored in version 1.0 of the Microsoft .NET Framework.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilationRelaxationsAttribute (System.Runtime.CompilerServices.CompilationRelaxations relaxations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.CompilerServices.CompilationRelaxations relaxations) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relaxations" Type="System.Runtime.CompilerServices.CompilationRelaxations" />
      </Parameters>
      <Docs>
        <param name="relaxations">One of the <see cref="T:System.Runtime.CompilerServices.CompilationRelaxations" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" /> class with the specified <see cref="T:System.Runtime.CompilerServices.CompilationRelaxations" /> value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apply the <xref:System.Runtime.CompilerServices.CompilationRelaxationsAttribute> attribute to assemblies to specify assembly compilation parameters.  
  
 This attribute is ignored in version 1.0 of the Microsoft .NET Framework.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="CompilationRelaxations">
      <MemberSignature Language="C#" Value="public int CompilationRelaxations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompilationRelaxations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the compilation relaxations specified when the current object was constructed.</summary>
        <value>The compilation relaxations specified when the current object was constructed.  
  
 Use the <see cref="T:System.Runtime.CompilerServices.CompilationRelaxations" /> enumeration with the CompilationRelaxations property.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>