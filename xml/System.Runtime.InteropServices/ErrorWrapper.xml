<Type Name="ErrorWrapper" FullName="System.Runtime.InteropServices.ErrorWrapper">
  <TypeSignature Language="C#" Value="public sealed class ErrorWrapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ErrorWrapper extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wraps objects the marshaler should marshal as a <see langword="VT_ERROR" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, <xref:System.Object> type arguments are marshaled as a `VARIANT` type, where the object type determines the `VARTYPE` value of the `VARIANT`.  
  
 The ErrorWrapper type must to be passed as an <xref:System.Object> type to be marshaled as a `VARIANT` of type `VT_ERROR`, otherwise the ErrorWrapper type is marshaled as an integer.  
  
 The following table illustrates marshaling in a managed call to a native function, using platform invoke.  
  
|Managed signature parameter|pArr value|Marshaled as|  
|---------------------------------|----------------|------------------|  
|ErrorWrapper[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`Int[10]`|  
|Object[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`VARIANT[10]` of `VT_ERROR`|  
|Object[] pArr|Object[10] of ErrorWrapper(77)|`VARIANT[10]` of `VT_ERROR`|  
  
 The following table illustrates marshaling data in a managed call to a native function, using COM runtime callable wrappers (RCW).  
  
|Managed signature parameter|pArr value|Marshaled as|  
|---------------------------------|----------------|------------------|  
|ErrorWrapper[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`Int[10]`|  
|Object[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`SafeArrayTypeMismatch` exception|  
|Object[] pArr|Object[10] of ErrorWrapper(77)|`SAFEARRAY(VARIANT)`|  
  
 Note that ErrorWrapper objects are not marshaled as type `VT_ERROR` after they are passed back from COM.  A single value is marshaled back from COM as type `VT_I4`, while arrays are marshaled back from COM as type `VT_UI4`.  
  
 For more information on `VT_ERROR`, please see the existing documentation for `VARENUM::VT_ERROR` in the MSDN library.  
  
   
  
## Examples  
 The following code example first demonstrates a lone <xref:System.Int32> object marshaled back from COM as an <xref:System.Int32> object. It then demonstrates an <xref:System.Int32> array marshaled back from COM as a <xref:System.UInt32> array.  
  
```  
// Scenario 1:  
// Pass a single value.  
Int32 x = 3;  
Object o = new ErrorWrapper(x);  
// Pass 'o' to COM.  
// On the return trip, 'o' has been unwrapped and is still an Int32 object.  
Int32 y = (Int32)o;  
Scenario 2:  
// Pass an array of values.  
Int32[] arr = new Int32[3];  
Object o = new ErrorWrapper(arr);  
// Pass 'o' to COM.  
// On the return trip, 'o' has been unwrapped and is now a UInt32[] array.  
UInt32[ ] arr2 = (UInt32[])o;  
```  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorWrapper (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">The exception to be converted to an error code.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> class with the HRESULT that corresponds to the exception supplied.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for permission to call unmanaged code.  
  
 Security Action: Demand.  
  
 Associated Enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorWrapper (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 errorCode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">The HRESULT of the error.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> class with the HRESULT of the error.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorWrapper (object errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object errorCode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorCode">The object containing the HRESULT of the error.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> class with an object containing the HRESULT of the error.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="errorCode" /> parameter is not an <see cref="T:System.Int32" /> type.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="ErrorCode">
      <MemberSignature Language="C#" Value="public int ErrorCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ErrorCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the error code of the wrapper.</summary>
        <value>The HRESULT of the error.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>