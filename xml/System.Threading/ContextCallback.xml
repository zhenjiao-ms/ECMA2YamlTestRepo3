<Type Name="ContextCallback" FullName="System.Threading.ContextCallback">
  <TypeSignature Language="C#" Value="public delegate void ContextCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ContextCallback extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">An object containing information to be used by the callback method each time it executes.</param>
    <summary>Represents a method to be called within a new context.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ContextCallback is used by the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> and the <xref:System.Security.SecurityContext.Run%2A?displayProperty=fullName> methods. ContextCallback represents the method to be run in the provided context. Upon completion of the method execution, the context is restored to its previous state.  
  
 Create the delegate by passing your callback method to the ContextCallback constructor. Your method must have the signature shown here.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
</Type>