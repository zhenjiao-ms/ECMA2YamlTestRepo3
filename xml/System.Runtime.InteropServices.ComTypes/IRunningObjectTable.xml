<Type Name="IRunningObjectTable" FullName="System.Runtime.InteropServices.ComTypes.IRunningObjectTable">
  <TypeSignature Language="C#" Value="public interface IRunningObjectTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRunningObjectTable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00000010-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides the managed definition of the <see langword="IRunningObjectTable" /> interface.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can retrieve an interface to the running object table by calling the COM [GetRunningObjectTable](http://go.microsoft.com/fwlink/?LinkId=163472) function.  
  
 For more information, see the documentation for the COM [IRunningObjectTable](http://go.microsoft.com/fwlink/?LinkId=163473) interface in the MSDN library.  
  
 The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see [How to: Map HRESULTs and Exceptions](../Topic/How%20to:%20Map%20HRESULTs%20and%20Exceptions.md).  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="EnumRunning">
      <MemberSignature Language="C#" Value="public void EnumRunning (out System.Runtime.InteropServices.ComTypes.IEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumRunning(class System.Runtime.InteropServices.ComTypes.IEnumMoniker ppenumMoniker) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.ComTypes.IEnumMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenumMoniker">When this method returns, contains the new enumerator for the Running Object Table (ROT). This parameter is passed uninitialized.</param>
        <summary>Enumerates the objects currently registered as running.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see the documentation for the [IRunningObjectTable::EnumRunning](http://go.microsoft.com/fwlink/?LinkId=163475) method in the MSDN library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public int GetObject (System.Runtime.InteropServices.ComTypes.IMoniker pmkObjectName, out object ppunkObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetObject(class System.Runtime.InteropServices.ComTypes.IMoniker pmkObjectName, object ppunkObject) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="ppunkObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">A reference to the moniker to search for in the Running Object Table (ROT).</param>
        <param name="ppunkObject">When this method returns, contains the requested running object. This parameter is passed uninitialized.</param>
        <summary>Returns the registered object if the supplied object name is registered as running.</summary>
        <returns>An <see langword="HRESULT" /> value that indicates the success or failure of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see the documentation for the [IRunningObjectTable::GetObject](http://go.microsoft.com/fwlink/?LinkId=163476) method in the MSDN library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public int GetTimeOfLastChange (System.Runtime.InteropServices.ComTypes.IMoniker pmkObjectName, out System.Runtime.InteropServices.ComTypes.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTimeOfLastChange(class System.Runtime.InteropServices.ComTypes.IMoniker pmkObjectName, valuetype System.Runtime.InteropServices.ComTypes.FILETIME pfiletime) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.ComTypes.FILETIME&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">A reference to the moniker to search for in the Running Object Table (ROT).</param>
        <param name="pfiletime">When this object returns, contains the objects last change time. This parameter is passed uninitialized.</param>
        <summary>Searches for this moniker in the Running Object Table (ROT) and reports the recorded time of change, if present.</summary>
        <returns>An <see langword="HRESULT" /> value that indicates the success or failure of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see the documentation for the [IRunningObjectTable::GetTimeOfLastChange](http://go.microsoft.com/fwlink/?LinkId=163477) method in the MSDN library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public int IsRunning (System.Runtime.InteropServices.ComTypes.IMoniker pmkObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsRunning(class System.Runtime.InteropServices.ComTypes.IMoniker pmkObjectName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">A reference to the moniker to search for in the Running Object Table (ROT).</param>
        <summary>Determines whether the specified moniker is currently registered in the Running Object Table (ROT).</summary>
        <returns>An <see langword="HRESULT" /> value that indicates the success or failure of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see the documentation for the [IRunningObjectTable::IsRunning](http://go.microsoft.com/fwlink/?LinkId=163478) method in the MSDN library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NoteChangeTime">
      <MemberSignature Language="C#" Value="public void NoteChangeTime (int dwRegister, ref System.Runtime.InteropServices.ComTypes.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NoteChangeTime(int32 dwRegister, valuetype System.Runtime.InteropServices.ComTypes.FILETIME pfiletime) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.ComTypes.FILETIME&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dwRegister">The Running Object Table (ROT) entry of the changed object.</param>
        <param name="pfiletime">A reference to the object's last change time.</param>
        <summary>Notes the time that a particular object changed so <see langword="IMoniker::GetTimeOfLastChange" /> can report an appropriate change time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see the documentation for the [IRunningObjectTable::NoteChangeTime](http://go.microsoft.com/fwlink/?LinkId=163479) method in the MSDN library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public int Register (int grfFlags, object punkObject, System.Runtime.InteropServices.ComTypes.IMoniker pmkObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Register(int32 grfFlags, object punkObject, class System.Runtime.InteropServices.ComTypes.IMoniker pmkObjectName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfFlags" Type="System.Int32" />
        <Parameter Name="punkObject" Type="System.Object" />
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
      </Parameters>
      <Docs>
        <param name="grfFlags">Specifies whether the Running Object Table's (ROT) reference to `punkObject` is weak or strong, and controls access to the object through its entry in the ROT.</param>
        <param name="punkObject">A reference to the object being registered as running.</param>
        <param name="pmkObjectName">A reference to the moniker that identifies `punkObject`.</param>
        <summary>Registers that the supplied object has entered the running state.</summary>
        <returns>A value that can be used to identify this ROT entry in subsequent calls to &lt;xref:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.Revoke%2A&gt; or &lt;xref:System.Runtime.InteropServices.ComTypes.IRunningObjectTable.NoteChangeTime%2A&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ROT references to `punkObject` (weak and strong) determine object lifetime. For more information, see the documentation for the COM [IRunningObjectTable::Register](http://go.microsoft.com/fwlink/?LinkId=163474) method in the MSDN library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Revoke">
      <MemberSignature Language="C#" Value="public void Revoke (int dwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revoke(int32 dwRegister) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwRegister">The Running Object Table (ROT) entry to revoke.</param>
        <summary>Unregisters the specified object from the Running Object Table (ROT).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see the documentation for the [IRunningObjectTable::Revoke](http://go.microsoft.com/fwlink/?LinkId=163480) method in the MSDN library.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>