<Type Name="EventTask" FullName="System.Diagnostics.Tracing.EventTask">
  <TypeSignature Language="C#" Value="public enum EventTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventTask extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Defines the tasks that apply to events.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This enumeration is intended to be customized for an event source.  
  
   
  
## Examples  
 The following example shows how to use the EventTask class to define event tasks. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  
  
 [!code-vb[ETWTrace#4](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_3_1.vb)]
 [!code-cs[ETWTrace#4](~/add/codesnippet/csharp/t-system.diagnostics.tra_3_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventTask None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventTask</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Undefined task.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>