<Type Name="EventOpcode" FullName="System.Diagnostics.Tracing.EventOpcode">
  <TypeSignature Language="C#" Value="public enum EventOpcode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventOpcode extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Defines the standard operation codes that the event source attaches to events.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the EventOpcode class to specify event operation codes. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  
  
 [!code-vb[ETWTrace#7](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_1_1.vb)]
 [!code-cs[ETWTrace#7](~/add/codesnippet/csharp/t-system.diagnostics.tra_1_1.cs)]  
  
 [!code-vb[ETWTrace#8](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_1_2.vb)]
 [!code-cs[ETWTrace#8](~/add/codesnippet/csharp/t-system.diagnostics.tra_1_2.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="DataCollectionStart">
      <MemberSignature Language="C#" Value="DataCollectionStart" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode DataCollectionStart = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A trace collection start event.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="DataCollectionStop">
      <MemberSignature Language="C#" Value="DataCollectionStop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode DataCollectionStop = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A trace collection stop event.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="Extension" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Extension = int32(5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An extension event.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="Info" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Info = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An informational event.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="Receive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Receive = int32(240)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An event that is published when one activity in an application receives data.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="Reply" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Reply = int32(6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An event that is published after an activity in an application replies to an event.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="Resume" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Resume = int32(7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An event that is published after an activity in an application resumes from a suspended state. The event should follow an event that has the Suspend operation code.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="Send" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Send = int32(9)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An event that is published when one activity in an application transfers data or system resources to another activity.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="Start" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Start = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An event that is published when an application starts a new transaction or activity. This operation code can be embedded within another transaction or activity when multiple events that have the Start code follow each other without an intervening event that has a Stop code.</summary>
        <threadsafe />
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the Start field to specify a start operation. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  
  
 [!code-vb[ETWTrace#7](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_1_1.vb)]
 [!code-cs[ETWTrace#7](~/add/codesnippet/csharp/t-system.diagnostics.tra_1_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="Stop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Stop = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An event that is published when an activity or a transaction in an application ends. The event corresponds to the last unpaired event that has a Start operation code.</summary>
        <threadsafe />
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the Stop field to specify a stop operation. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  
  
 [!code-vb[ETWTrace#8](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_1_2.vb)]
 [!code-cs[ETWTrace#8](~/add/codesnippet/csharp/t-system.diagnostics.tra_1_2.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="Suspend" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Tracing.EventOpcode Suspend = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventOpcode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An event that is published when an activity in an application is suspended.</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>