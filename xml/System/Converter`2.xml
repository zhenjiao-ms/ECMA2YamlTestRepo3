<Type Name="Converter&lt;TInput,TOutput&gt;" FullName="System.Converter&lt;TInput,TOutput&gt;">
  <TypeSignature Language="C#" Value="public delegate TOutput Converter&lt;in TInput,out TOutput&gt;(TInput input);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Converter`2&lt;- TInput, + TOutput&gt; extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TOutput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="input" Type="TInput" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TOutput</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TInput">To be added.</typeparam>
    <typeparam name="TOutput">To be added.</typeparam>
    <param name="input">The object to convert.</param>
    <summary>Represents a method that converts an object from one type to another type.</summary>
    <returns>The <paramref name="TOutput" /> that represents the converted <paramref name="TInput" />.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This delegate is used by the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class and the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method of the <xref:System.Collections.Generic.List%601>class to convert each element of the collection from one type to another.  
  
   
  
## Examples  
 This section contains two code examples. The first demonstrates the Converter(TInput, delegate with the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class, and the second demonstrates the delegate with the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method of the <xref:System.Collections.Generic.List%601> generic class.  
  
 Example 1  
  
 The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure. The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method. The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures. Both lists are displayed.  
  
 [!code-cpp[Array_ConvertAll#1](~/add/codesnippet/cpp/t-system.converter`2_1.cpp)]
 [!code-vb[Array_ConvertAll#1](~/add/codesnippet/visualbasic/t-system.converter`2_1.vb)]
 [!code-cs[Array_ConvertAll#1](~/add/codesnippet/csharp/t-system.converter`2_1.cs)]  
  
 Example 2  
  
 The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure. The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method. The <xref:System.Collections.Generic.List%601.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures. Both lists are displayed.  
  
 [!code-cpp[List`1_ConvertAll#1](~/add/codesnippet/cpp/t-system.converter`2_2.cpp)]
 [!code-vb[List`1_ConvertAll#1](~/add/codesnippet/visualbasic/t-system.converter`2_2.vb)]
 [!code-cs[List`1_ConvertAll#1](~/add/codesnippet/csharp/t-system.converter`2_2.cs)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>