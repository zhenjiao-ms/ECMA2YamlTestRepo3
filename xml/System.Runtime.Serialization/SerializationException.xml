<Type Name="SerializationException" FullName="System.Runtime.Serialization.SerializationException">
  <TypeSignature Language="C#" Value="public class SerializationException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SerializationException extends System.SystemException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The exception thrown when an error occurs during serialization or deserialization.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SerializationException uses the `HRESULT` COR_E_SERIALIZATION with the value 0x8013150C.  
  
 SerializationException uses the default <xref:System.Object.Equals%2A> implementation, which supports reference equality.  
  
 For a list of initial property values for an instance of SerializationException, see the <xref:System.Runtime.Serialization.SerializationException.%23ctor%2A> constructors.  
  
   
  
## Examples  
 [!code-vb[StreamingContext Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_5_1.vb)]
 [!code-cs[StreamingContext Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_5_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerializationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationException" /> class with default properties.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.SerializationException> inherits from the <xref:System.SystemException> class. The following table shows initial property values for an instance of <xref:System.Runtime.Serialization.SerializationException> initialized with the current constructor.  
  
|Property|Condition|  
|--------------|---------------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|Localized error message for <xref:System.Runtime.Serialization.SerializationException>.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerializationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Indicates the reason why the exception occurred.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationException" /> class with a specified message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.SerializationException> inherits from the <xref:System.SystemException> class. The following table shows initial property values for an instance of <xref:System.Runtime.Serialization.SerializationException> initialized with the current constructor.  
  
|Property|Condition|  
|--------------|---------------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|The `message` string.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The serialization information object holding the serialized object data in the name-value form.</param>
        <param name="context">The contextual information about the source or destination of the exception.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationException" /> class from serialized data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The current constructor is called during deserialization to reconstitute the exception object transmitted over a stream. (For more information on serialization see [XML and SOAP Serialization](../Topic/XML%20and%20SOAP%20Serialization.md).)  
  
   
  
## Examples  
 [!code-vb[StreamingContext Example#1](~/add/codesnippet/visualbasic/2a3197f5-eb3b-4328-9acd-_1.vb)]
 [!code-cs[StreamingContext Example#1](~/add/codesnippet/csharp/2a3197f5-eb3b-4328-9acd-_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <see langword="null" />.</exception>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerializationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The error message that explains the reason for the exception.</param>
        <param name="innerException">The exception that is the cause of the current exception. If the `innerException` parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.SerializationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  
  
 The following table shows the initial property values for an instance of <xref:System.Runtime.Serialization.SerializationException>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  
|<xref:System.Exception.Message%2A>|The error message string.|  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>