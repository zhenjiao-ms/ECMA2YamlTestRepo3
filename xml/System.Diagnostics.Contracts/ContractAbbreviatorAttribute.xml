<Type Name="ContractAbbreviatorAttribute" FullName="System.Diagnostics.Contracts.ContractAbbreviatorAttribute">
  <TypeSignature Language="C#" Value="public sealed class ContractAbbreviatorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContractAbbreviatorAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.Conditional("CONTRACTS_FULL")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines abbreviations that you can use in place of the full contract syntax.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to create abbreviated names for code contracts that are repeated in several methods.  
  
```c#  
  
using System.Diagnostics.Contracts;  
  
public class MyClass   
{  
   public int State { get; }  
   public int Data { get; }  
  
   [ ContractAbbreviator ]  
   private void DataAndStateUnchanged()   
   {  
      Contract.Ensures( this .State == Contract.OldValue(this.State));  
      Contract.Ensures( this .Data == Contract.OldValue(this.Data));  
   }  
  
   [ ContractAbbreviator ]  
   private void InStateZeroAndUnchanged()   
   {  
      Contract.Requires( this.State == 0);  
      DataAndStateUnchanged();  
   }  
  
   public void Method1(...)   
   {  
      InStateZeroAndUnchanged();  
      ...  
   }  
  
   public void Method2(...)   
   {  
      InStateZeroAndUnchanged();  
      ...  
   }  
  
   public void Method3(...)  
   {  
      Contract.Requires(this .State == 1);  
      DataAndStateUnchanged();  
   }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractAbbreviatorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Contracts.ContractAbbreviatorAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>